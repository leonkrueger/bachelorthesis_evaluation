[
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('2611', 'number', 'natural number', '2611 (number)', 2611.0, '2611', 4.0, '7.0');\nDatabase State:\nCREATE TABLE centered_hexagonal_number (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), number_of_decimal_digits DOUBLE, prime_factor VARCHAR(1023));\nCREATE TABLE prime_factor (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), prime_factor VARCHAR(1023), number_of_decimal_digits DOUBLE);",
        "Response": "Table: centered_hexagonal_number"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO gymnast () VALUES (4, 8.987000000000000099, 9.75, 9.75, 9.65000000000000035, 9.78700000000000082, 9.72499999999999965, 57.6490000000000009);\nDatabase State:\nCREATE TABLE people (People_ID BIGINT, Name VARCHAR(1023), Age DOUBLE, Height DOUBLE, Hometown VARCHAR(1023));",
        "Response": "Table: gymnast"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO biological_variant_of () VALUES ('RB1', 'protein-coding gene in the species Homo sapiens', '5925', 'RB1', '9884', '614041', 'protein-coding gene', 'ENSG00000139687', '272', 'Rb1', 'NM_000321', 'ENST00000531171', 'Protein RB1 PDB 1ad6.png', 'RB transcriptional corepressor 1', 'bladder cancer', 'Homo sapiens', 'http://identifiers.org/ncbigene/5925', 'human chromosome 13', 'forward strand', '48877887.0', '49056122.0', 'PBB GE RB1 203132 at.png', 'gene', '13q14.2', 'visceral pleura', '4795');\nDatabase State:\nCREATE TABLE chromosome (label VARCHAR(1023), description VARCHAR(1023), subclass_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), freebase_id VARCHAR(1023), commons_category VARCHAR(1023), refseq_genome_id VARCHAR(1023), found_in_taxon VARCHAR(1023), instance_of VARCHAR(1023), short_name VARCHAR(1023), length DOUBLE, topics_main_category VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), mesh_tree_code VARCHAR(1023), microsoft_academic_id VARCHAR(1023), openalex_id VARCHAR(1023));\nCREATE TABLE orthology (label VARCHAR(1023), description VARCHAR(1023), entrez_gene_id VARCHAR(1023), subclass_of VARCHAR(1023), ensembl_gene_id VARCHAR(1023), homologene_id VARCHAR(1023), found_in_taxon VARCHAR(1023), refseq_rna_id VARCHAR(1023), ensembl_transcript_id VARCHAR(1023), chromosome VARCHAR(1023), encodes VARCHAR(1023), mouse_genome_informatics_id VARCHAR(1023), ortholog VARCHAR(1023), exact_match VARCHAR(1023), mgi_gene_symbol VARCHAR(1023), strand_orientation VARCHAR(1023), instance_of VARCHAR(1023), cytogenetic_location VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), expressed_in VARCHAR(1023));\nCREATE TABLE frameshift_truncation (label VARCHAR(1023), description VARCHAR(1023), biological_variant_of VARCHAR(1023), civic_variant_id VARCHAR(1023), chromosome VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), instance_of VARCHAR(1023), hgvs_nomenclature VARCHAR(1023));\nCREATE TABLE biological_variant_of (label VARCHAR(1023), description VARCHAR(1023), entrez_gene_id VARCHAR(1023), hgnc_gene_symbol VARCHAR(1023), hgnc_id VARCHAR(1023), omim_id VARCHAR(1023), subclass_of VARCHAR(1023), ensembl_gene_id VARCHAR(1023), homologene_id VARCHAR(1023), ortholog VARCHAR(1023), refseq_rna_id VARCHAR(1023), ensembl_transcript_id VARCHAR(1023), image VARCHAR(1023), encodes VARCHAR(1023), genetic_association VARCHAR(1023), found_in_taxon VARCHAR(1023), exact_match VARCHAR(1023), chromosome VARCHAR(1023), strand_orientation VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), gene_atlas_image VARCHAR(1023), instance_of VARCHAR(1023), cytogenetic_location VARCHAR(1023), expressed_in VARCHAR(1023), civic_gene_id VARCHAR(1023));",
        "Response": "Table: Genes"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO administrative_territorial_entity () VALUES ('Mashhad County', 'county in Razavi Khorasan Province, Iran', 'Razavi Khorasan Province', 'Iran', 'county of Razavi Khorasan Province', 3372660.0, '/m/025z_kh', '36.283333333333005', 'Mashhad County', 'Mashhad', 'Category:Mashhad County', 'nan', 'Mashhad County Locator Map (2020).svg', 'nan', '1158838.0', NULL, '32815.0');\nDatabase State:\nCREATE TABLE wiki_loves_monuments_2015 (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), country VARCHAR(1023), part_of VARCHAR(1023), commons_category VARCHAR(1023), part_of_the_series VARCHAR(1023), start_time VARCHAR(1023), end_time VARCHAR(1023));\nCREATE TABLE head_of_state (label VARCHAR(1023), description VARCHAR(1023), viaf_id VARCHAR(1023), commons_category VARCHAR(1023), library_of_congress_authority_id VARCHAR(1023), gnd_id VARCHAR(1023), date_of_birth VARCHAR(1023), place_of_birth VARCHAR(1023), member_of_political_party VARCHAR(1023), country_of_citizenship VARCHAR(1023), instance_of VARCHAR(1023), position_held VARCHAR(1023), occupation VARCHAR(1023), given_name VARCHAR(1023), image VARCHAR(1023), languages_spoken_written_or_signed VARCHAR(1023), name_in_native_language VARCHAR(1023), spouse VARCHAR(1023), educated_at VARCHAR(1023), isni VARCHAR(1023), sex_or_gender VARCHAR(1023), worldcat_identities_id VARCHAR(1023), munzinger_person_id VARCHAR(1023), opensanctions_id VARCHAR(1023));\nCREATE TABLE series (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023));\nCREATE TABLE place_of_birth (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), coordinate_location VARCHAR(1023), topics_main_category VARCHAR(1023), freebase_id VARCHAR(1023), image VARCHAR(1023), geonames_id VARCHAR(1023), elevation_above_sea_level DOUBLE, category_of_associated_people VARCHAR(1023), official_website VARCHAR(1023), area DOUBLE, population DOUBLE, whos_on_first_id VARCHAR(1023));\nCREATE TABLE country (label VARCHAR(1023), description VARCHAR(1023), great_russian_encyclopedia_online_id VARCHAR(1023), wipo_st3 VARCHAR(1023), population DOUBLE, getty_thesaurus_of_geographic_names_id VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), wikimedia_outline VARCHAR(1023), ndl_authority_id VARCHAR(1023), currency VARCHAR(1023), new_york_times_topic_id VARCHAR(1023), geonames_id VARCHAR(1023), gnd_id VARCHAR(1023), unicode_character VARCHAR(1023), category_of_associated_people VARCHAR(1023), emergency_phone_number VARCHAR(1023), unesco_thesaurus_id VARCHAR(1023), electrical_plug_type VARCHAR(1023), licence_plate_code VARCHAR(1023), babelnet_id VARCHAR(1023), geography_of_topic VARCHAR(1023), iso_3166_1_alpha_3_code VARCHAR(1023), office_held_by_head_of_government VARCHAR(1023), quora_topic_id VARCHAR(1023), native_label VARCHAR(1023), basic_form_of_government VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), has_quality VARCHAR(1023), coat_of_arms_image VARCHAR(1023), uic_alphabetical_country_code VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), insee_countries_and_foreign_territories_code VARCHAR(1023), invasive_species_compendium_datasheet_id VARCHAR(1023), diplomatic_relation VARCHAR(1023), flag_image VARCHAR(1023), ituisoiec_object_identifier VARCHAR(1023), commons_gallery VARCHAR(1023), legislative_body VARCHAR(1023), trunk_prefix VARCHAR(1023), history_of_topic VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), stw_thesaurus_for_economics_id VARCHAR(1023), official_language VARCHAR(1023), viaf_id VARCHAR(1023), subreddit VARCHAR(1023), continent VARCHAR(1023), capital VARCHAR(1023), coat_of_arms VARCHAR(1023), demonym VARCHAR(1023), national_library_of_israel_id_old VARCHAR(1023), openstreetmap_relation_id VARCHAR(1023), on_focus_list_of_wikimedia_project VARCHAR(1023), omegawiki_defined_meaning VARCHAR(1023), coordinates_of_northernmost_point VARCHAR(1023), nkcr_aut_id VARCHAR(1023), comic_vine_id VARCHAR(1023), mobile_country_code VARCHAR(1023), total_fertility_rate DOUBLE, maritime_identification_digits VARCHAR(1023), us_national_archives_identifier VARCHAR(1023), shares_border_with VARCHAR(1023), marriageable_age DOUBLE, topics_main_category VARCHAR(1023), head_of_government VARCHAR(1023), biblioth\u00e8que_nationale_de_france_id VARCHAR(1023), category_of_people_buried_here VARCHAR(1023), locator_map_image VARCHAR(1023), bbc_things_id VARCHAR(1023), geoshape VARCHAR(1023), dewey_decimal_classification VARCHAR(1023), area DOUBLE, le_monde_diplomatique_subject_id VARCHAR(1023), ioc_country_code VARCHAR(1023), member_of VARCHAR(1023), official_name VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), railway_traffic_side VARCHAR(1023), gacs_id VARCHAR(1023), archinform_location_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), page_banner VARCHAR(1023), category_for_films_shot_at_this_location VARCHAR(1023), mains_voltage DOUBLE, executive_body VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), yso_id VARCHAR(1023), anthem VARCHAR(1023), office_held_by_head_of_state VARCHAR(1023), life_expectancy DOUBLE, part_of VARCHAR(1023), commons_category VARCHAR(1023), top_level_internet_domain VARCHAR(1023), instance_of VARCHAR(1023), highest_point VARCHAR(1023), category_for_people_born_here VARCHAR(1023), iab_code VARCHAR(1023), short_name VARCHAR(1023), number_of_out_of_school_children DOUBLE, driving_side VARCHAR(1023), head_of_state VARCHAR(1023), uic_numerical_country_code VARCHAR(1023), lowest_point VARCHAR(1023), idref_id VARCHAR(1023), iso_3166_1_numeric_code VARCHAR(1023), located_in_time_zone VARCHAR(1023), contains_the_administrative_territorial_entity VARCHAR(1023), itu_letter_code VARCHAR(1023), country_calling_code VARCHAR(1023), freebase_id VARCHAR(1023), statoids_id VARCHAR(1023), library_of_congress_authority_id VARCHAR(1023), iso_3166_1_alpha_2_code VARCHAR(1023), coordinate_location VARCHAR(1023), fips_10_4_countries_and_regions VARCHAR(1023), described_by_source VARCHAR(1023), isni VARCHAR(1023), civicus_monitor_country_entry VARCHAR(1023), brockhaus_enzyklop\u00e4die_online_id VARCHAR(1023), klexikon_article_id VARCHAR(1023), loc_and_marc_vocabularies_id VARCHAR(1023), central_bank VARCHAR(1023), language_used VARCHAR(1023), coordinates_of_westernmost_point VARCHAR(1023), whos_on_first_id VARCHAR(1023), the_top_tens_id VARCHAR(1023), world_encyclopedia_of_puppetry_arts_id VARCHAR(1023), official_website VARCHAR(1023), hds_id VARCHAR(1023), gs1_country_code VARCHAR(1023), culture VARCHAR(1023), coordinates_of_southernmost_point VARCHAR(1023), coordinates_of_easternmost_point VARCHAR(1023), geonlp_id VARCHAR(1023), category_for_maps VARCHAR(1023), treccanis_dizionario_di_storia_id VARCHAR(1023), vat_rate DOUBLE, french_vikidia_id VARCHAR(1023), english_vikidia_id VARCHAR(1023), spanish_vikidia_id VARCHAR(1023), pronunciation_audio VARCHAR(1023), eurovoc_id VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), open_data_portal VARCHAR(1023), grove_art_online_id VARCHAR(1023), rkd_thesaurus_id VARCHAR(1023), pm20_geo_code VARCHAR(1023), interlingual_index_id VARCHAR(1023), jewish_encyclopedia_id_russian VARCHAR(1023), bbc_news_topic_id VARCHAR(1023), tasteatlas_id VARCHAR(1023), inaturalist_place_id VARCHAR(1023), economy_of_topic VARCHAR(1023), flag VARCHAR(1023), uk_parliament_thesaurus_id VARCHAR(1023), yle_topic_id VARCHAR(1023), ysa_id VARCHAR(1023), inception VARCHAR(1023), bhcl_uuid VARCHAR(1023), github_topic VARCHAR(1023), wordnet_31_synset_id VARCHAR(1023), demographics_of_topic VARCHAR(1023), joconde_location_id VARCHAR(1023), idaigazetteer_id VARCHAR(1023), country VARCHAR(1023), armeniapedia_id VARCHAR(1023), krugosvet_article VARCHAR(1023), schoenberg_database_of_manuscripts_place_id VARCHAR(1023), the_world_factbook_country_id VARCHAR(1023), colon_classification VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), democracy_index DOUBLE, online_pwn_encyclopedia_id VARCHAR(1023), treccani_id VARCHAR(1023), postimees_topic_id VARCHAR(1023), museum_digital_place_id VARCHAR(1023), wikisimpsons_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), urban_electric_transit_country_id VARCHAR(1023), m49_code VARCHAR(1023), alltrails_trail_id VARCHAR(1023), human_development_index DOUBLE, national_historical_museums_of_sweden_id VARCHAR(1023), eu_knowledge_graph_item_id VARCHAR(1023), hashtag VARCHAR(1023), gini_coefficient DOUBLE, obo_gazetteer_id VARCHAR(1023), openstreetmap_element VARCHAR(1023), happy_planet_index_score DOUBLE, namuwiki_id VARCHAR(1023), curlie_id VARCHAR(1023), unemployment_rate DOUBLE, nalt_id VARCHAR(1023), age_of_majority DOUBLE, fast_id VARCHAR(1023), dr_topic_id VARCHAR(1023), der_spiegel_topic_id VARCHAR(1023));\nCREATE TABLE part (label VARCHAR(1023), description VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), commons_category VARCHAR(1023), topics_main_category VARCHAR(1023), page_banner VARCHAR(1023), freebase_id VARCHAR(1023), instance_of VARCHAR(1023), coordinate_location VARCHAR(1023), locator_map_image VARCHAR(1023), viaf_id VARCHAR(1023), quora_topic_id VARCHAR(1023), yso_id VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), has_parts VARCHAR(1023), part_of VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), gnd_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), nkcr_aut_id VARCHAR(1023), mapycz_id VARCHAR(1023));\nCREATE TABLE twin_town (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), coordinate_location VARCHAR(1023), freebase_id VARCHAR(1023), twinned_administrative_body VARCHAR(1023), geonames_id VARCHAR(1023), instance_of VARCHAR(1023), topics_main_category VARCHAR(1023), capital_of VARCHAR(1023), viaf_id VARCHAR(1023), elevation_above_sea_level DOUBLE, commons_category VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), quora_topic_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), located_in_time_zone VARCHAR(1023), image VARCHAR(1023), category_of_associated_people VARCHAR(1023), area DOUBLE, library_of_congress_authority_id VARCHAR(1023), coat_of_arms_image VARCHAR(1023), whos_on_first_id VARCHAR(1023), population DOUBLE, postal_code VARCHAR(1023), official_website VARCHAR(1023), worldcat_identities_id VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), page_banner VARCHAR(1023), head_of_government VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), gnd_id VARCHAR(1023), commons_gallery VARCHAR(1023), facebook_places_id VARCHAR(1023), native_label VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), category_for_maps VARCHAR(1023), factgrid_item_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), online_pwn_encyclopedia_id VARCHAR(1023), local_dialing_code VARCHAR(1023), nkcr_aut_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023));\nCREATE TABLE capital_city (label VARCHAR(1023), description VARCHAR(1023), twinned_administrative_body VARCHAR(1023), commons_category VARCHAR(1023), country VARCHAR(1023), image VARCHAR(1023), postal_code VARCHAR(1023), located_in_time_zone VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), coordinate_location VARCHAR(1023), page_banner VARCHAR(1023), topics_main_category VARCHAR(1023), instance_of VARCHAR(1023), freebase_id VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), gnd_id VARCHAR(1023), viaf_id VARCHAR(1023), geonames_id VARCHAR(1023), official_website VARCHAR(1023), category_of_associated_people VARCHAR(1023), capital_of VARCHAR(1023), area DOUBLE, population DOUBLE, elevation_above_sea_level DOUBLE, library_of_congress_authority_id VARCHAR(1023), native_label VARCHAR(1023), official_name VARCHAR(1023), great_russian_encyclopedia_online_id VARCHAR(1023), whos_on_first_id VARCHAR(1023), category_for_maps VARCHAR(1023), nkcr_aut_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), online_pwn_encyclopedia_id VARCHAR(1023));",
        "Response": "Table: administrative_territorial_entity"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO member_attendance () VALUES (3, 1, 1);\nDatabase State:\nCREATE TABLE member_attendance (Member_ID BIGINT, Performance_ID BIGINT, Num_of_Pieces BIGINT);\nCREATE TABLE performance (Performance_ID DOUBLE, Date VARCHAR(1023), Host VARCHAR(1023), Location VARCHAR(1023), Attendance BIGINT);",
        "Response": "Table: Attendance_Log"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Minister of Industry, Energy and Mining (Uruguay)', 'Ministerial position in Uruguay', 'public office', 'minister', 'Uruguay', 'Cabinet of Uruguay', 'Ministry of Industry, Energy and Mining (Uruguay)');\nDatabase State:\nCREATE TABLE organization_leader (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), subclass_of VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), part_of VARCHAR(1023), organization_directed_by_the_office_or_position VARCHAR(1023));\nCREATE TABLE cabinet_of_uruguay (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), subclass_of VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), part_of VARCHAR(1023), organization_directed_by_the_office_or_position VARCHAR(1023));\nCREATE TABLE organization (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), country VARCHAR(1023), office_held_by_head_of_the_organization VARCHAR(1023), inception VARCHAR(1023), headquarters_location VARCHAR(1023), official_website VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), google_knowledge_graph_id VARCHAR(1023));",
        "Response": "Table: Leaderships"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (3, 1998, 'Gillig', 'Phantom (High Floor)', '468-473 (6)', 'DD S50 Allison WB-400R', 'Diesel');\nDatabase State:\nCREATE TABLE aircraft (Aircraft_ID BIGINT, Order_Year BIGINT, Manufacturer VARCHAR(1023), Model VARCHAR(1023), Fleet_Series VARCHAR(1023), Powertrain VARCHAR(1023), Fuel_Propulsion VARCHAR(1023));",
        "Response": "Table: Aircraft_Fleet"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO orthology () VALUES ('Mlh1', 'protein-coding gene in the species Mus musculus', '17350', 'protein-coding gene', 'ENSMUSG00000032498', '208', 'house mouse', 'NM_026810', 'ENSMUST00000035079', 'mouse chromosome 9', 'MutL homolog 1', 'MGI:101938', 'MLH1', 'http://identifiers.org/ncbigene/17350', 'Mlh1', 'reverse strand', 'gene', '9 F3|9 60.92 cM', '111057296', '111100859', 'saccule');\nDatabase State:\nCREATE TABLE biological_variant_of (label VARCHAR(1023), description VARCHAR(1023), entrez_gene_id VARCHAR(1023), hgnc_gene_symbol VARCHAR(1023), hgnc_id VARCHAR(1023), omim_id VARCHAR(1023), subclass_of VARCHAR(1023), ensembl_gene_id VARCHAR(1023), homologene_id VARCHAR(1023), ortholog VARCHAR(1023), refseq_rna_id VARCHAR(1023), ensembl_transcript_id VARCHAR(1023), image VARCHAR(1023), encodes VARCHAR(1023), genetic_association VARCHAR(1023), found_in_taxon VARCHAR(1023), exact_match VARCHAR(1023), chromosome VARCHAR(1023), strand_orientation VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), gene_atlas_image VARCHAR(1023), instance_of VARCHAR(1023), cytogenetic_location VARCHAR(1023), expressed_in VARCHAR(1023), civic_gene_id VARCHAR(1023));\nCREATE TABLE orthology (label VARCHAR(1023), description VARCHAR(1023), entrez_gene_id VARCHAR(1023), subclass_of VARCHAR(1023), ensembl_gene_id VARCHAR(1023), homologene_id VARCHAR(1023), found_in_taxon VARCHAR(1023), refseq_rna_id VARCHAR(1023), ensembl_transcript_id VARCHAR(1023), chromosome VARCHAR(1023), encodes VARCHAR(1023), mouse_genome_informatics_id VARCHAR(1023), ortholog VARCHAR(1023), exact_match VARCHAR(1023), mgi_gene_symbol VARCHAR(1023), strand_orientation VARCHAR(1023), instance_of VARCHAR(1023), cytogenetic_location VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), expressed_in VARCHAR(1023));",
        "Response": "Table: Genes"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO repair_assignment () VALUES (5, 5, 2);\nDatabase State:\nCREATE TABLE repair (repair_ID BIGINT, name VARCHAR(1023), Launch_Date VARCHAR(1023), Notes VARCHAR(1023));\nCREATE TABLE technician (technician_id DOUBLE, Name VARCHAR(1023), Team VARCHAR(1023), Starting_Year DOUBLE, Age BIGINT);\nCREATE TABLE machine (Machine_ID BIGINT, Making_Year BIGINT, Class VARCHAR(1023), Team VARCHAR(1023), Machine_series VARCHAR(1023), value_points DOUBLE, quality_rank BIGINT);",
        "Response": "Table: repair_assignment"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO 970s () VALUES ('971', 'year', '971', 'year', '970s', '970', '972', 'Category:971', '+0971-01-01T00:00:00Z', 'list of state leaders in 971');\nDatabase State:\nCREATE TABLE follows (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));\nCREATE TABLE followed_by (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));",
        "Response": "Table: 970s"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO people () VALUES (10, 'Endis de los Santos \u00c1lvarez', 24.0, 1.719999999999999974, 'Los Alcarrizos');\nDatabase State:\nCREATE TABLE people (People_ID BIGINT, Name VARCHAR(1023), Age DOUBLE, Height DOUBLE, Hometown VARCHAR(1023));\nCREATE TABLE gymnast (Gymnast_ID BIGINT, Floor_Exercise_Points DOUBLE, Pommel_Horse_Points DOUBLE, Rings_Points DOUBLE, Vault_Points DOUBLE, Parallel_Bars_Points DOUBLE, Horizontal_Bar_Points DOUBLE, Total_Points DOUBLE);",
        "Response": "Table: people"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (6, 9.76200000000000045, 9.32499999999999928, 9.47499999999999965, 9.76200000000000045, 9.56199999999999939, 9.55000000000000072, 57.43599999999999995);\nDatabase State:\nCREATE TABLE gymnast (Gymnast_ID BIGINT, Floor_Exercise_Points DOUBLE, Pommel_Horse_Points DOUBLE, Rings_Points DOUBLE, Vault_Points DOUBLE, Parallel_Bars_Points DOUBLE, Horizontal_Bar_Points DOUBLE, Total_Points DOUBLE);\nCREATE TABLE people (People_ID BIGINT, Name VARCHAR(1023), Age DOUBLE, Height DOUBLE, Hometown VARCHAR(1023));",
        "Response": "Table: gymnast"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO organization_leader () VALUES ('Minister of Education and Culture of Uruguay', 'nan', 'position', 'education minister', 'Uruguay', 'Cabinet of Uruguay', 'Ministry of Education and Culture');\nDatabase State:\nCREATE TABLE organization_leader (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), subclass_of VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), part_of VARCHAR(1023), organization_directed_by_the_office_or_position VARCHAR(1023));",
        "Response": "Table: organization_leader"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (3.0, 'February 5', 'Atlanta Thrashers', 'Verizon Center', 1878);\nDatabase State:\nCREATE TABLE member (Member_ID VARCHAR(1023), Name VARCHAR(1023), Nationality VARCHAR(1023), Role VARCHAR(1023));",
        "Response": "Table: performance"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO procedures () VALUES ('2014-08-23', '7443d2b2-6444-4ae5-8ea5-1ed311c5433e', 'c47c0d30-e5f5-42b7-b65d-fde6bb33cfab', 66348005, 'Childbirth', 72892002, 'Normal pregnancy');\nDatabase State:\nCREATE TABLE allergies (START VARCHAR(1023), STOP VARCHAR(1023), PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE patients (patient VARCHAR(1023), birthdate DATE, deathdate DATE, ssn VARCHAR(1023), drivers VARCHAR(1023), passport VARCHAR(1023), prefix VARCHAR(1023), first VARCHAR(1023), last VARCHAR(1023), suffix VARCHAR(1023), maiden VARCHAR(1023), marital VARCHAR(1023), race VARCHAR(1023), ethnicity VARCHAR(1023), gender VARCHAR(1023), birthplace VARCHAR(1023), address VARCHAR(1023));\nCREATE TABLE medications (START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE conditions (START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE claims (ID VARCHAR(1023), PATIENT VARCHAR(1023), BILLABLEPERIOD DATE, ORGANIZATION VARCHAR(1023), ENCOUNTER VARCHAR(1023), DIAGNOSIS VARCHAR(1023), TOTAL BIGINT);\nCREATE TABLE careplans (ID VARCHAR(1023), START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE DOUBLE, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE immunizations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE observations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE VARCHAR(1023), DESCRIPTION VARCHAR(1023), VALUE DOUBLE, UNITS VARCHAR(1023));\nCREATE TABLE encounters (ID VARCHAR(1023), DATE DATE, PATIENT VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));",
        "Response": "Table: procedures"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('7', 'Charlie Burke', 'United States', 'Viola');\nDatabase State:\nCREATE TABLE performance (Performance_ID DOUBLE, Date VARCHAR(1023), Host VARCHAR(1023), Location VARCHAR(1023), Attendance BIGINT);\nCREATE TABLE member (Member_ID VARCHAR(1023), Name VARCHAR(1023), Nationality VARCHAR(1023), Role VARCHAR(1023));",
        "Response": "Table: member"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO people () VALUES (1, 'Paul Hamm', 24.0, 1.709999999999999965, 'Santo Domingo');\nDatabase State:\nCREATE TABLE people (People_ID BIGINT, Name VARCHAR(1023), Age DOUBLE, Height DOUBLE, Hometown VARCHAR(1023));",
        "Response": "Table: Residents"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO user_reviews () VALUES ('Hotstar', 'Even trying several times, answers taken Kannadada Kotyadipathi. Button press logging answer backend, shows yellow 2s fails again. Please fix bug play, Advertising & Marketing.', 'Negative', '-0.16666666666666666', '0.09999999999999999');\nDatabase State:\nCREATE TABLE user_reviews (App VARCHAR(1023), Translated_Review VARCHAR(1023), Sentiment VARCHAR(1023), Sentiment_Polarity VARCHAR(1023), Sentiment_Subjectivity VARCHAR(1023));\nCREATE TABLE playstore (App VARCHAR(1023), Category VARCHAR(1023), Rating DOUBLE, Reviews BIGINT, Size VARCHAR(1023), Installs VARCHAR(1023), Type VARCHAR(1023), Price VARCHAR(1023), Content_Rating VARCHAR(1023), Genres VARCHAR(1023));",
        "Response": "Table: App_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO performance () VALUES (4.0, 'February 7', 'Pittsburgh Penguins', 'Verizon Center', 1877);\nDatabase State:\nCREATE TABLE member_attendance (Member_ID BIGINT, Performance_ID BIGINT, Num_of_Pieces BIGINT);",
        "Response": "Table: performance"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_REL () VALUES (2345063, 147, 1, 9);\nDatabase State:\nCREATE TABLE IMG_OBJ (IMG_ID BIGINT, OBJ_SAMPLE_ID BIGINT, OBJ_CLASS_ID BIGINT, X BIGINT, Y BIGINT, W BIGINT, H BIGINT);\nCREATE TABLE OBJ_CLASSES (OBJ_CLASS_ID BIGINT, OBJ_CLASS VARCHAR(1023));\nCREATE TABLE ATT_CLASSES (ATT_CLASS_ID BIGINT, ATT_CLASS VARCHAR(1023));",
        "Response": "Table: IMG_REL"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Vahagn Khachatryan', 'Armenian politician', 'nan', 'Vahagn Khachaturyan', 'nan', 'nan', '+1959-07-22T00:00:00Z', 'Sisian', 'Armenian National Congress', 'Armenia', 'human', 'member of the National Assembly of Armenia', 'politician', 'Vahagn', 'Vahagn Khachaturyan portrait (cropped).jpg', 'Armenian', '\u054e\u0561\u0570\u0561\u0563\u0576 \u053d\u0561\u0579\u0561\u057f\u0580\u0575\u0561\u0576', 'nan', 'Armenian State University of Economics', 'nan', 'male', 'nan', 'nan', 'Q3553274');\nDatabase State:\nCREATE TABLE administrative_territorial_entity (label VARCHAR(1023), description VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), country VARCHAR(1023), instance_of VARCHAR(1023), population DOUBLE, freebase_id VARCHAR(1023), coordinate_location VARCHAR(1023), commons_category VARCHAR(1023), capital VARCHAR(1023), topics_main_category VARCHAR(1023), openstreetmap_relation_id VARCHAR(1023), locator_map_image VARCHAR(1023), official_website VARCHAR(1023), geonames_id VARCHAR(1023), area DOUBLE, inaturalist_place_id VARCHAR(1023));\nCREATE TABLE part (label VARCHAR(1023), description VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), commons_category VARCHAR(1023), topics_main_category VARCHAR(1023), page_banner VARCHAR(1023), freebase_id VARCHAR(1023), instance_of VARCHAR(1023), coordinate_location VARCHAR(1023), locator_map_image VARCHAR(1023), viaf_id VARCHAR(1023), quora_topic_id VARCHAR(1023), yso_id VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), has_parts VARCHAR(1023), part_of VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), gnd_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), nkcr_aut_id VARCHAR(1023), mapycz_id VARCHAR(1023));\nCREATE TABLE head_of_state (label VARCHAR(1023), description VARCHAR(1023), viaf_id VARCHAR(1023), commons_category VARCHAR(1023), library_of_congress_authority_id VARCHAR(1023), gnd_id VARCHAR(1023), date_of_birth VARCHAR(1023), place_of_birth VARCHAR(1023), member_of_political_party VARCHAR(1023), country_of_citizenship VARCHAR(1023), instance_of VARCHAR(1023), position_held VARCHAR(1023), occupation VARCHAR(1023), given_name VARCHAR(1023), image VARCHAR(1023), languages_spoken_written_or_signed VARCHAR(1023), name_in_native_language VARCHAR(1023), spouse VARCHAR(1023), educated_at VARCHAR(1023), isni VARCHAR(1023), sex_or_gender VARCHAR(1023), worldcat_identities_id VARCHAR(1023), munzinger_person_id VARCHAR(1023), opensanctions_id VARCHAR(1023));\nCREATE TABLE series (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023));",
        "Response": "Table: head_of_state"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (442161, 2012, 'B', 'H', '4y other', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');\nDatabase State:\nCREATE TABLE institution_grads (unitid BIGINT, year BIGINT, gender VARCHAR(1023), race VARCHAR(1023), cohort VARCHAR(1023), grad_cohort VARCHAR(1023), grad_100 VARCHAR(1023), grad_150 VARCHAR(1023), grad_100_rate VARCHAR(1023), grad_150_rate VARCHAR(1023));",
        "Response": "Table: Institution_Graduation_Statistics"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('6211', 'number', 'natural number', '6211 (number)', 6211.0, '6211', 4.0, '6211.0');\nDatabase State:\nCREATE TABLE centered_hexagonal_number (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), number_of_decimal_digits DOUBLE, prime_factor VARCHAR(1023));",
        "Response": "Table: centered_hexagonal_number"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('human chromosome 9', 'human chromosome', 'autosome', 'human genome', 'human chromosome 8', 'human chromosome 10', '/m/099w6_', 'Human chromosome 9', 'NC_000009.12', 'Homo sapiens', 'chromosome', '9', 138394717.0, 'Category:Genes on human chromosome 9', 'D002899', 'A11.284.187.520.300.325.345', '2780238508.0', 'C2780238508');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: chromosome"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO 970s () VALUES ('976', 'year', '976', 'year', '970s', '975', '977', 'Category:976', '+0976-01-01T00:00:00Z', 'list of state leaders in 976');\nDatabase State:\nCREATE TABLE followed_by (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));",
        "Response": "Table: 970s"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('2017-06-28', 'd8cdeee4-acc1-466c-9e40-21e6f074810a', 'a618392c-d45d-4d24-a95c-63c79026b349', '8480-6', 'Systolic Blood Pressure', 116.0, 'mmHg');\nDatabase State:\nCREATE TABLE observations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE VARCHAR(1023), DESCRIPTION VARCHAR(1023), VALUE DOUBLE, UNITS VARCHAR(1023));\nCREATE TABLE careplans (ID VARCHAR(1023), START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE DOUBLE, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE procedures (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE allergies (START VARCHAR(1023), STOP VARCHAR(1023), PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE encounters (ID VARCHAR(1023), DATE DATE, PATIENT VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE immunizations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE claims (ID VARCHAR(1023), PATIENT VARCHAR(1023), BILLABLEPERIOD DATE, ORGANIZATION VARCHAR(1023), ENCOUNTER VARCHAR(1023), DIAGNOSIS VARCHAR(1023), TOTAL BIGINT);\nCREATE TABLE all_prevalences (ITEM VARCHAR(1023), POPULATION_TYPE VARCHAR(1023), OCCURRENCES BIGINT, POPULATION_COUNT BIGINT, PREVALENCE_RATE DOUBLE, PREVALENCE_PERCENTAGE DOUBLE);",
        "Response": "Table: PatientMeasurements"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (2408346, 138, 11, 14);\nDatabase State:\nCREATE TABLE IMG_OBJ (IMG_ID BIGINT, OBJ_SAMPLE_ID BIGINT, OBJ_CLASS_ID BIGINT, X BIGINT, Y BIGINT, W BIGINT, H BIGINT);\nCREATE TABLE IMG_OBJ_ATT (IMG_ID BIGINT, ATT_CLASS_ID BIGINT, OBJ_SAMPLE_ID BIGINT);\nCREATE TABLE ATT_CLASSES (ATT_CLASS_ID BIGINT, ATT_CLASS VARCHAR(1023));\nCREATE TABLE OBJ_CLASSES (OBJ_CLASS_ID BIGINT, OBJ_CLASS VARCHAR(1023));\nCREATE TABLE IMG_REL (IMG_ID BIGINT, PRED_CLASS_ID BIGINT, OBJ1_SAMPLE_ID BIGINT, OBJ2_SAMPLE_ID BIGINT);\nCREATE TABLE PRED_CLASSES (PRED_CLASS_ID BIGINT, PRED_CLASS VARCHAR(1023));",
        "Response": "Table: IMG_REL"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_OBJ () VALUES (2384877, 5, 242, 358, 371, 27, 18);\nDatabase State:\nCREATE TABLE IMG_OBJ (IMG_ID BIGINT, OBJ_SAMPLE_ID BIGINT, OBJ_CLASS_ID BIGINT, X BIGINT, Y BIGINT, W BIGINT, H BIGINT);\nCREATE TABLE IMG_REL (IMG_ID BIGINT, PRED_CLASS_ID BIGINT, OBJ1_SAMPLE_ID BIGINT, OBJ2_SAMPLE_ID BIGINT);\nCREATE TABLE PRED_CLASSES (PRED_CLASS_ID BIGINT, PRED_CLASS VARCHAR(1023));\nCREATE TABLE IMG_OBJ_ATT (IMG_ID BIGINT, ATT_CLASS_ID BIGINT, OBJ_SAMPLE_ID BIGINT);\nCREATE TABLE OBJ_CLASSES (OBJ_CLASS_ID BIGINT, OBJ_CLASS VARCHAR(1023));",
        "Response": "Table: IMG_OBJ"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (3.0, 'Tony Sewell', 'CLE', 2005.0, 43);\nDatabase State:\nCREATE TABLE repair_assignment (technician_id BIGINT, repair_ID BIGINT, Machine_ID BIGINT);\nCREATE TABLE machine (Machine_ID BIGINT, Making_Year BIGINT, Class VARCHAR(1023), Team VARCHAR(1023), Machine_series VARCHAR(1023), value_points DOUBLE, quality_rank BIGINT);\nCREATE TABLE repair (repair_ID BIGINT, name VARCHAR(1023), Launch_Date VARCHAR(1023), Notes VARCHAR(1023));",
        "Response": "Table: technician"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO aircraft () VALUES (6, 2010, 'NFI', 'GE40LFR', '300-309 (10)', 'Ford Triton V10 ISE-Thundervolt TB40-HG', 'Hybrid');\nDatabase State:\nCREATE TABLE pilot (Pilot_ID BIGINT, Pilot_name VARCHAR(1023), Rank BIGINT, Age BIGINT, Nationality VARCHAR(1023), Position VARCHAR(1023), Join_Year BIGINT, Team VARCHAR(1023));\nCREATE TABLE aircraft (Aircraft_ID BIGINT, Order_Year BIGINT, Manufacturer VARCHAR(1023), Model VARCHAR(1023), Fleet_Series VARCHAR(1023), Powertrain VARCHAR(1023), Fuel_Propulsion VARCHAR(1023));\nCREATE TABLE pilot_record (Record_ID BIGINT, Pilot_ID BIGINT, Aircraft_ID BIGINT, Date VARCHAR(1023));",
        "Response": "Table: aircraft"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO cabinet_of_uruguay () VALUES ('Minister of Livestock, Agriculture, and Fisheries (Uruguay)', 'Ministerial position in Uruguay', 'public office', 'minister', 'Uruguay', 'Cabinet of Uruguay', 'Ministry of Livestock, Agriculture, and Fisheries (Uruguay)');\nDatabase State:\nCREATE TABLE organization_leader (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), subclass_of VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), part_of VARCHAR(1023), organization_directed_by_the_office_or_position VARCHAR(1023));\nCREATE TABLE organization (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), country VARCHAR(1023), office_held_by_head_of_the_organization VARCHAR(1023), inception VARCHAR(1023), headquarters_location VARCHAR(1023), official_website VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), google_knowledge_graph_id VARCHAR(1023));",
        "Response": "Table: cabinet_of_uruguay"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Tunis Governorate', 'governorate in Tunisia', 'Tunisia', 'Tunisia', 'governorate of Tunisia', 1056247.0, '/m/0cyb_z', '36.8', 'Tunis Governorate', 'Tunis', 'Category:Tunis Governorate', 'nan', 'TN-23.svg', 'https://www.tripadvisor.com/Tourism-g2629167-Tunis_Governorate-Vacations.html', '2464464.0', 346.0, '12146.0');\nDatabase State:\nCREATE TABLE series (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023));\nCREATE TABLE administrative_territorial_entity (label VARCHAR(1023), description VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), country VARCHAR(1023), instance_of VARCHAR(1023), population DOUBLE, freebase_id VARCHAR(1023), coordinate_location VARCHAR(1023), commons_category VARCHAR(1023), capital VARCHAR(1023), topics_main_category VARCHAR(1023), openstreetmap_relation_id VARCHAR(1023), locator_map_image VARCHAR(1023), official_website VARCHAR(1023), geonames_id VARCHAR(1023), area DOUBLE, inaturalist_place_id VARCHAR(1023));",
        "Response": "Table: administrative_territorial_entity"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO people () VALUES (2, 'Lorraine S\u00faarez Carmona', 21.0, 1.75, 'Bonao');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: people"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO people () VALUES (3, 'Ashley P\u00e9rez Cabrera', 19.0, 1.699999999999999956, 'Miami');\nDatabase State:\nCREATE TABLE people (People_ID BIGINT, Name VARCHAR(1023), Age DOUBLE, Height DOUBLE, Hometown VARCHAR(1023));",
        "Response": "Table: people"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO follows () VALUES ('974', 'year', '974', 'year', '970s', '973', '975', 'Category:974', '+0974-01-01T00:00:00Z', 'list of state leaders in 974');\nDatabase State:\nCREATE TABLE followed_by (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));\nCREATE TABLE follows (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));",
        "Response": "Table: Years"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO institution_grads () VALUES (137953, 2004, 'F', 'X', '4y other', '15', 'NULL', '7', 'NULL', '46.7');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO repair_assignment () VALUES (1, 5, 6);\nDatabase State:\nCREATE TABLE machine (Machine_ID BIGINT, Making_Year BIGINT, Class VARCHAR(1023), Team VARCHAR(1023), Machine_series VARCHAR(1023), value_points DOUBLE, quality_rank BIGINT);\nCREATE TABLE repair (repair_ID BIGINT, name VARCHAR(1023), Launch_Date VARCHAR(1023), Notes VARCHAR(1023));\nCREATE TABLE repair_assignment (technician_id BIGINT, repair_ID BIGINT, Machine_ID BIGINT);\nCREATE TABLE technician (technician_id DOUBLE, Name VARCHAR(1023), Team VARCHAR(1023), Starting_Year DOUBLE, Age BIGINT);",
        "Response": "Table: Assignments"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO chromosome () VALUES ('human chromosome 15', 'human chromosome', 'autosome', 'human genome', 'human chromosome 14', 'human chromosome 16', '/m/099y1p', 'Human chromosome 15', 'NC_000015.10', 'Homo sapiens', 'chromosome', '15', 101991189.0, 'Category:Genes on human chromosome 15', 'D002884', 'A11.284.187.520.300.370.385', '165237769.0', 'C165237769');\nDatabase State:\nCREATE TABLE chromosome (label VARCHAR(1023), description VARCHAR(1023), subclass_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), freebase_id VARCHAR(1023), commons_category VARCHAR(1023), refseq_genome_id VARCHAR(1023), found_in_taxon VARCHAR(1023), instance_of VARCHAR(1023), short_name VARCHAR(1023), length DOUBLE, topics_main_category VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), mesh_tree_code VARCHAR(1023), microsoft_academic_id VARCHAR(1023), openalex_id VARCHAR(1023));",
        "Response": "Table: chromosome"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_OBJ_ATT () VALUES (2409754, 657, 10);\nDatabase State:\nCREATE TABLE OBJ_CLASSES (OBJ_CLASS_ID BIGINT, OBJ_CLASS VARCHAR(1023));\nCREATE TABLE IMG_REL (IMG_ID BIGINT, PRED_CLASS_ID BIGINT, OBJ1_SAMPLE_ID BIGINT, OBJ2_SAMPLE_ID BIGINT);\nCREATE TABLE PRED_CLASSES (PRED_CLASS_ID BIGINT, PRED_CLASS VARCHAR(1023));\nCREATE TABLE IMG_OBJ (IMG_ID BIGINT, OBJ_SAMPLE_ID BIGINT, OBJ_CLASS_ID BIGINT, X BIGINT, Y BIGINT, W BIGINT, H BIGINT);\nCREATE TABLE ATT_CLASSES (ATT_CLASS_ID BIGINT, ATT_CLASS VARCHAR(1023));\nCREATE TABLE IMG_OBJ_ATT (IMG_ID BIGINT, ATT_CLASS_ID BIGINT, OBJ_SAMPLE_ID BIGINT);",
        "Response": "Table: IMG_OBJ_ATT"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('4447', 'number', 'natural number', '4447 (number)', 4447.0, '4447', 4.0, '4447.0');\nDatabase State:\nCREATE TABLE prime_factor (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), prime_factor VARCHAR(1023), number_of_decimal_digits DOUBLE);",
        "Response": "Table: centered_hexagonal_number"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('1801', 'natural number', 'natural number', '1801 (number)', 1801.0, '1801', 4.0, '1801.0');\nDatabase State:\nCREATE TABLE centered_hexagonal_number (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), number_of_decimal_digits DOUBLE, prime_factor VARCHAR(1023));",
        "Response": "Table: CenteredHexagonalNumbers"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (1, 1992, 'Gillig', 'Phantom (High Floor)', '444-464 (21)', 'DD S50EGR Allison WB-400R', 'Diesel');\nDatabase State:\nCREATE TABLE pilot (Pilot_ID BIGINT, Pilot_name VARCHAR(1023), Rank BIGINT, Age BIGINT, Nationality VARCHAR(1023), Position VARCHAR(1023), Join_Year BIGINT, Team VARCHAR(1023));\nCREATE TABLE pilot_record (Record_ID BIGINT, Pilot_ID BIGINT, Aircraft_ID BIGINT, Date VARCHAR(1023));",
        "Response": "Table: aircraft"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO medications () VALUES ('2005-06-30', NULL, 'd49a5eff-ef3b-4ed7-a184-f6e9cc1f97a0', 'a7bd5824-1e3d-4177-b429-2cf380b1c618', 834101, 'Penicillin V Potassium 500 MG', 43878008, 'Streptococcal sore throat (disorder)');\nDatabase State:\nCREATE TABLE all_prevalences (ITEM VARCHAR(1023), POPULATION_TYPE VARCHAR(1023), OCCURRENCES BIGINT, POPULATION_COUNT BIGINT, PREVALENCE_RATE DOUBLE, PREVALENCE_PERCENTAGE DOUBLE);\nCREATE TABLE observations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE VARCHAR(1023), DESCRIPTION VARCHAR(1023), VALUE DOUBLE, UNITS VARCHAR(1023));",
        "Response": "Table: medications"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO 970s () VALUES ('979', 'year', '979', 'year', '970s', '978', '980', 'Category:979', '+0979-01-01T00:00:00Z', 'list of state leaders in 979');\nDatabase State:\nCREATE TABLE followed_by (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));",
        "Response": "Table: 970s"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (174792, 2008, 'F', 'H', '4y other', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');\nDatabase State:\nCREATE TABLE state_sector_grads (stateid BIGINT, state VARCHAR(1023), state_abbr VARCHAR(1023), control VARCHAR(1023), level VARCHAR(1023), year BIGINT, gender VARCHAR(1023), race VARCHAR(1023), cohort VARCHAR(1023), grad_cohort VARCHAR(1023), grad_100 VARCHAR(1023), grad_150 VARCHAR(1023), grad_100_rate VARCHAR(1023), grad_150_rate VARCHAR(1023), grad_cohort_ct BIGINT);\nCREATE TABLE institution_details (unitid BIGINT, chronname VARCHAR(1023), city VARCHAR(1023), state VARCHAR(1023), level VARCHAR(1023), control VARCHAR(1023), basic VARCHAR(1023), hbcu VARCHAR(1023), flagship VARCHAR(1023), long_x DOUBLE, lat_y DOUBLE, site VARCHAR(1023), student_count BIGINT, awards_per_value DOUBLE, awards_per_state_value DOUBLE, awards_per_natl_value DOUBLE, exp_award_value BIGINT, exp_award_state_value BIGINT, exp_award_natl_value BIGINT, exp_award_percentile BIGINT, ft_pct DOUBLE, fte_value BIGINT, fte_percentile BIGINT, med_sat_value VARCHAR(1023), med_sat_percentile VARCHAR(1023), aid_value BIGINT, aid_percentile BIGINT, endow_value VARCHAR(1023), endow_percentile VARCHAR(1023), grad_100_value DOUBLE, grad_100_percentile BIGINT, grad_150_value DOUBLE, grad_150_percentile BIGINT, pell_value DOUBLE, pell_percentile BIGINT, retain_value DOUBLE, retain_percentile BIGINT, ft_fac_value DOUBLE, ft_fac_percentile BIGINT, vsa_year VARCHAR(1023), vsa_grad_after4_first VARCHAR(1023), vsa_grad_elsewhere_after4_first VARCHAR(1023), vsa_enroll_after4_first VARCHAR(1023), vsa_enroll_elsewhere_after4_first VARCHAR(1023), vsa_grad_after6_first VARCHAR(1023), vsa_grad_elsewhere_after6_first VARCHAR(1023), vsa_enroll_after6_first VARCHAR(1023), vsa_enroll_elsewhere_after6_first VARCHAR(1023), vsa_grad_after4_transfer VARCHAR(1023), vsa_grad_elsewhere_after4_transfer VARCHAR(1023), vsa_enroll_after4_transfer VARCHAR(1023), vsa_enroll_elsewhere_after4_transfer VARCHAR(1023), vsa_grad_after6_transfer VARCHAR(1023), vsa_grad_elsewhere_after6_transfer VARCHAR(1023), vsa_enroll_after6_transfer VARCHAR(1023), vsa_enroll_elsewhere_after6_transfer VARCHAR(1023), similar VARCHAR(1023), state_sector_ct BIGINT, carnegie_ct BIGINT, counted_pct VARCHAR(1023), nicknames VARCHAR(1023), cohort_size BIGINT);\nCREATE TABLE state_sector_details (stateid BIGINT, state VARCHAR(1023), state_post VARCHAR(1023), level VARCHAR(1023), control VARCHAR(1023), schools_count BIGINT, counted_pct VARCHAR(1023), awards_per_state_value VARCHAR(1023), awards_per_natl_value DOUBLE, exp_award_state_value VARCHAR(1023), exp_award_natl_value BIGINT, state_appr_value VARCHAR(1023), state_appr_rank VARCHAR(1023), grad_rate_rank VARCHAR(1023), awards_per_rank VARCHAR(1023));",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO repair_assignment () VALUES (7, 2, 4);\nDatabase State:\nCREATE TABLE machine (Machine_ID BIGINT, Making_Year BIGINT, Class VARCHAR(1023), Team VARCHAR(1023), Machine_series VARCHAR(1023), value_points DOUBLE, quality_rank BIGINT);\nCREATE TABLE technician (technician_id DOUBLE, Name VARCHAR(1023), Team VARCHAR(1023), Starting_Year DOUBLE, Age BIGINT);\nCREATE TABLE repair (repair_ID BIGINT, name VARCHAR(1023), Launch_Date VARCHAR(1023), Notes VARCHAR(1023));",
        "Response": "Table: repair_assignment"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('6', 'Andrew Moten', 'United States', 'Viola');\nDatabase State:\nCREATE TABLE member_attendance (Member_ID BIGINT, Performance_ID BIGINT, Num_of_Pieces BIGINT);\nCREATE TABLE performance (Performance_ID DOUBLE, Date VARCHAR(1023), Host VARCHAR(1023), Location VARCHAR(1023), Attendance BIGINT);",
        "Response": "Table: member"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO user_reviews () VALUES ('Expense IQ Money Manager', 'Great all! It would great though assign categories transfers. Usually, I transfer function move money account another. The current setup allows categorization withdrawals deposits.', 'Positive', '0.3875', '0.5375');\nDatabase State:\nCREATE TABLE playstore (App VARCHAR(1023), Category VARCHAR(1023), Rating DOUBLE, Reviews BIGINT, Size VARCHAR(1023), Installs VARCHAR(1023), Type VARCHAR(1023), Price VARCHAR(1023), Content_Rating VARCHAR(1023), Genres VARCHAR(1023));",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO part () VALUES ('Baltic states', 'countries east of the Baltic Sea', 'Portal:Baltic states', 'Baltic states', 'Category:Baltic states', 'Baltic states banner 1.jpg', '/m/019tjm', 'geographic region', '57.0', 'Baltic states.svg', '304910901', 'Baltic-States', '94095.0', 'D001454', 'Estonia', 'Europe', 'viaf-304910901', 'BalticState', 'nan', 'Baltikum', 'ge136766', 'area&id=314863');\nDatabase State:\nCREATE TABLE part (label VARCHAR(1023), description VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), commons_category VARCHAR(1023), topics_main_category VARCHAR(1023), page_banner VARCHAR(1023), freebase_id VARCHAR(1023), instance_of VARCHAR(1023), coordinate_location VARCHAR(1023), locator_map_image VARCHAR(1023), viaf_id VARCHAR(1023), quora_topic_id VARCHAR(1023), yso_id VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), has_parts VARCHAR(1023), part_of VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), gnd_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), nkcr_aut_id VARCHAR(1023), mapycz_id VARCHAR(1023));\nCREATE TABLE place_of_birth (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), coordinate_location VARCHAR(1023), topics_main_category VARCHAR(1023), freebase_id VARCHAR(1023), image VARCHAR(1023), geonames_id VARCHAR(1023), elevation_above_sea_level DOUBLE, category_of_associated_people VARCHAR(1023), official_website VARCHAR(1023), area DOUBLE, population DOUBLE, whos_on_first_id VARCHAR(1023));\nCREATE TABLE series (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023));\nCREATE TABLE twin_town (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), coordinate_location VARCHAR(1023), freebase_id VARCHAR(1023), twinned_administrative_body VARCHAR(1023), geonames_id VARCHAR(1023), instance_of VARCHAR(1023), topics_main_category VARCHAR(1023), capital_of VARCHAR(1023), viaf_id VARCHAR(1023), elevation_above_sea_level DOUBLE, commons_category VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), quora_topic_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), located_in_time_zone VARCHAR(1023), image VARCHAR(1023), category_of_associated_people VARCHAR(1023), area DOUBLE, library_of_congress_authority_id VARCHAR(1023), coat_of_arms_image VARCHAR(1023), whos_on_first_id VARCHAR(1023), population DOUBLE, postal_code VARCHAR(1023), official_website VARCHAR(1023), worldcat_identities_id VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), page_banner VARCHAR(1023), head_of_government VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), gnd_id VARCHAR(1023), commons_gallery VARCHAR(1023), facebook_places_id VARCHAR(1023), native_label VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), category_for_maps VARCHAR(1023), factgrid_item_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), online_pwn_encyclopedia_id VARCHAR(1023), local_dialing_code VARCHAR(1023), nkcr_aut_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023));",
        "Response": "Table: GeographicRegions"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Kryvyi Rih urban hromada', 'hromada in Dnipropetrovsk Oblast, Ukraine', 'Kryvyi Rih Raion', 'Ukraine', 'hromada', 622012.0, 'nan', '47.91963682969507', 'Kryvyi Rih municipality', 'Kryvyi Rih', 'nan', '12578206.0', 'nan', 'nan', 'nan', 444.3999999999999773, 'nan');\nDatabase State:\nCREATE TABLE administrative_territorial_entity (label VARCHAR(1023), description VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), country VARCHAR(1023), instance_of VARCHAR(1023), population DOUBLE, freebase_id VARCHAR(1023), coordinate_location VARCHAR(1023), commons_category VARCHAR(1023), capital VARCHAR(1023), topics_main_category VARCHAR(1023), openstreetmap_relation_id VARCHAR(1023), locator_map_image VARCHAR(1023), official_website VARCHAR(1023), geonames_id VARCHAR(1023), area DOUBLE, inaturalist_place_id VARCHAR(1023));\nCREATE TABLE capital_city (label VARCHAR(1023), description VARCHAR(1023), twinned_administrative_body VARCHAR(1023), commons_category VARCHAR(1023), country VARCHAR(1023), image VARCHAR(1023), postal_code VARCHAR(1023), located_in_time_zone VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), coordinate_location VARCHAR(1023), page_banner VARCHAR(1023), topics_main_category VARCHAR(1023), instance_of VARCHAR(1023), freebase_id VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), gnd_id VARCHAR(1023), viaf_id VARCHAR(1023), geonames_id VARCHAR(1023), official_website VARCHAR(1023), category_of_associated_people VARCHAR(1023), capital_of VARCHAR(1023), area DOUBLE, population DOUBLE, elevation_above_sea_level DOUBLE, library_of_congress_authority_id VARCHAR(1023), native_label VARCHAR(1023), official_name VARCHAR(1023), great_russian_encyclopedia_online_id VARCHAR(1023), whos_on_first_id VARCHAR(1023), category_for_maps VARCHAR(1023), nkcr_aut_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), online_pwn_encyclopedia_id VARCHAR(1023));\nCREATE TABLE part (label VARCHAR(1023), description VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), commons_category VARCHAR(1023), topics_main_category VARCHAR(1023), page_banner VARCHAR(1023), freebase_id VARCHAR(1023), instance_of VARCHAR(1023), coordinate_location VARCHAR(1023), locator_map_image VARCHAR(1023), viaf_id VARCHAR(1023), quora_topic_id VARCHAR(1023), yso_id VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), has_parts VARCHAR(1023), part_of VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), gnd_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), nkcr_aut_id VARCHAR(1023), mapycz_id VARCHAR(1023));\nCREATE TABLE twin_town (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), coordinate_location VARCHAR(1023), freebase_id VARCHAR(1023), twinned_administrative_body VARCHAR(1023), geonames_id VARCHAR(1023), instance_of VARCHAR(1023), topics_main_category VARCHAR(1023), capital_of VARCHAR(1023), viaf_id VARCHAR(1023), elevation_above_sea_level DOUBLE, commons_category VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), quora_topic_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), located_in_time_zone VARCHAR(1023), image VARCHAR(1023), category_of_associated_people VARCHAR(1023), area DOUBLE, library_of_congress_authority_id VARCHAR(1023), coat_of_arms_image VARCHAR(1023), whos_on_first_id VARCHAR(1023), population DOUBLE, postal_code VARCHAR(1023), official_website VARCHAR(1023), worldcat_identities_id VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), page_banner VARCHAR(1023), head_of_government VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), gnd_id VARCHAR(1023), commons_gallery VARCHAR(1023), facebook_places_id VARCHAR(1023), native_label VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), category_for_maps VARCHAR(1023), factgrid_item_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), online_pwn_encyclopedia_id VARCHAR(1023), local_dialing_code VARCHAR(1023), nkcr_aut_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023));\nCREATE TABLE wiki_loves_monuments_2015 (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), country VARCHAR(1023), part_of VARCHAR(1023), commons_category VARCHAR(1023), part_of_the_series VARCHAR(1023), start_time VARCHAR(1023), end_time VARCHAR(1023));\nCREATE TABLE series (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023));\nCREATE TABLE country (label VARCHAR(1023), description VARCHAR(1023), great_russian_encyclopedia_online_id VARCHAR(1023), wipo_st3 VARCHAR(1023), population DOUBLE, getty_thesaurus_of_geographic_names_id VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), wikimedia_outline VARCHAR(1023), ndl_authority_id VARCHAR(1023), currency VARCHAR(1023), new_york_times_topic_id VARCHAR(1023), geonames_id VARCHAR(1023), gnd_id VARCHAR(1023), unicode_character VARCHAR(1023), category_of_associated_people VARCHAR(1023), emergency_phone_number VARCHAR(1023), unesco_thesaurus_id VARCHAR(1023), electrical_plug_type VARCHAR(1023), licence_plate_code VARCHAR(1023), babelnet_id VARCHAR(1023), geography_of_topic VARCHAR(1023), iso_3166_1_alpha_3_code VARCHAR(1023), office_held_by_head_of_government VARCHAR(1023), quora_topic_id VARCHAR(1023), native_label VARCHAR(1023), basic_form_of_government VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), has_quality VARCHAR(1023), coat_of_arms_image VARCHAR(1023), uic_alphabetical_country_code VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), insee_countries_and_foreign_territories_code VARCHAR(1023), invasive_species_compendium_datasheet_id VARCHAR(1023), diplomatic_relation VARCHAR(1023), flag_image VARCHAR(1023), ituisoiec_object_identifier VARCHAR(1023), commons_gallery VARCHAR(1023), legislative_body VARCHAR(1023), trunk_prefix VARCHAR(1023), history_of_topic VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), stw_thesaurus_for_economics_id VARCHAR(1023), official_language VARCHAR(1023), viaf_id VARCHAR(1023), subreddit VARCHAR(1023), continent VARCHAR(1023), capital VARCHAR(1023), coat_of_arms VARCHAR(1023), demonym VARCHAR(1023), national_library_of_israel_id_old VARCHAR(1023), openstreetmap_relation_id VARCHAR(1023), on_focus_list_of_wikimedia_project VARCHAR(1023), omegawiki_defined_meaning VARCHAR(1023), coordinates_of_northernmost_point VARCHAR(1023), nkcr_aut_id VARCHAR(1023), comic_vine_id VARCHAR(1023), mobile_country_code VARCHAR(1023), total_fertility_rate DOUBLE, maritime_identification_digits VARCHAR(1023), us_national_archives_identifier VARCHAR(1023), shares_border_with VARCHAR(1023), marriageable_age DOUBLE, topics_main_category VARCHAR(1023), head_of_government VARCHAR(1023), biblioth\u00e8que_nationale_de_france_id VARCHAR(1023), category_of_people_buried_here VARCHAR(1023), locator_map_image VARCHAR(1023), bbc_things_id VARCHAR(1023), geoshape VARCHAR(1023), dewey_decimal_classification VARCHAR(1023), area DOUBLE, le_monde_diplomatique_subject_id VARCHAR(1023), ioc_country_code VARCHAR(1023), member_of VARCHAR(1023), official_name VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), railway_traffic_side VARCHAR(1023), gacs_id VARCHAR(1023), archinform_location_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), page_banner VARCHAR(1023), category_for_films_shot_at_this_location VARCHAR(1023), mains_voltage DOUBLE, executive_body VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), yso_id VARCHAR(1023), anthem VARCHAR(1023), office_held_by_head_of_state VARCHAR(1023), life_expectancy DOUBLE, part_of VARCHAR(1023), commons_category VARCHAR(1023), top_level_internet_domain VARCHAR(1023), instance_of VARCHAR(1023), highest_point VARCHAR(1023), category_for_people_born_here VARCHAR(1023), iab_code VARCHAR(1023), short_name VARCHAR(1023), number_of_out_of_school_children DOUBLE, driving_side VARCHAR(1023), head_of_state VARCHAR(1023), uic_numerical_country_code VARCHAR(1023), lowest_point VARCHAR(1023), idref_id VARCHAR(1023), iso_3166_1_numeric_code VARCHAR(1023), located_in_time_zone VARCHAR(1023), contains_the_administrative_territorial_entity VARCHAR(1023), itu_letter_code VARCHAR(1023), country_calling_code VARCHAR(1023), freebase_id VARCHAR(1023), statoids_id VARCHAR(1023), library_of_congress_authority_id VARCHAR(1023), iso_3166_1_alpha_2_code VARCHAR(1023), coordinate_location VARCHAR(1023), fips_10_4_countries_and_regions VARCHAR(1023), described_by_source VARCHAR(1023), isni VARCHAR(1023), civicus_monitor_country_entry VARCHAR(1023), brockhaus_enzyklop\u00e4die_online_id VARCHAR(1023), klexikon_article_id VARCHAR(1023), loc_and_marc_vocabularies_id VARCHAR(1023), central_bank VARCHAR(1023), language_used VARCHAR(1023), coordinates_of_westernmost_point VARCHAR(1023), whos_on_first_id VARCHAR(1023), the_top_tens_id VARCHAR(1023), world_encyclopedia_of_puppetry_arts_id VARCHAR(1023), official_website VARCHAR(1023), hds_id VARCHAR(1023), gs1_country_code VARCHAR(1023), culture VARCHAR(1023), coordinates_of_southernmost_point VARCHAR(1023), coordinates_of_easternmost_point VARCHAR(1023), geonlp_id VARCHAR(1023), category_for_maps VARCHAR(1023), treccanis_dizionario_di_storia_id VARCHAR(1023), vat_rate DOUBLE, french_vikidia_id VARCHAR(1023), english_vikidia_id VARCHAR(1023), spanish_vikidia_id VARCHAR(1023), pronunciation_audio VARCHAR(1023), eurovoc_id VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), open_data_portal VARCHAR(1023), grove_art_online_id VARCHAR(1023), rkd_thesaurus_id VARCHAR(1023), pm20_geo_code VARCHAR(1023), interlingual_index_id VARCHAR(1023), jewish_encyclopedia_id_russian VARCHAR(1023), bbc_news_topic_id VARCHAR(1023), tasteatlas_id VARCHAR(1023), inaturalist_place_id VARCHAR(1023), economy_of_topic VARCHAR(1023), flag VARCHAR(1023), uk_parliament_thesaurus_id VARCHAR(1023), yle_topic_id VARCHAR(1023), ysa_id VARCHAR(1023), inception VARCHAR(1023), bhcl_uuid VARCHAR(1023), github_topic VARCHAR(1023), wordnet_31_synset_id VARCHAR(1023), demographics_of_topic VARCHAR(1023), joconde_location_id VARCHAR(1023), idaigazetteer_id VARCHAR(1023), country VARCHAR(1023), armeniapedia_id VARCHAR(1023), krugosvet_article VARCHAR(1023), schoenberg_database_of_manuscripts_place_id VARCHAR(1023), the_world_factbook_country_id VARCHAR(1023), colon_classification VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), democracy_index DOUBLE, online_pwn_encyclopedia_id VARCHAR(1023), treccani_id VARCHAR(1023), postimees_topic_id VARCHAR(1023), museum_digital_place_id VARCHAR(1023), wikisimpsons_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), urban_electric_transit_country_id VARCHAR(1023), m49_code VARCHAR(1023), alltrails_trail_id VARCHAR(1023), human_development_index DOUBLE, national_historical_museums_of_sweden_id VARCHAR(1023), eu_knowledge_graph_item_id VARCHAR(1023), hashtag VARCHAR(1023), gini_coefficient DOUBLE, obo_gazetteer_id VARCHAR(1023), openstreetmap_element VARCHAR(1023), happy_planet_index_score DOUBLE, namuwiki_id VARCHAR(1023), curlie_id VARCHAR(1023), unemployment_rate DOUBLE, nalt_id VARCHAR(1023), age_of_majority DOUBLE, fast_id VARCHAR(1023), dr_topic_id VARCHAR(1023), der_spiegel_topic_id VARCHAR(1023));",
        "Response": "Table: administrative_territorial_entity"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO frameshift_truncation () VALUES ('BRCA1 P968FS', 'genetic variant', 'BRCA1', '477', 'human chromosome 17', '41244645.0', '41244646.0', 'Frameshift Truncation', 'NM_007294.3:c.2902_2903insTC');\nDatabase State:\nCREATE TABLE orthology (label VARCHAR(1023), description VARCHAR(1023), entrez_gene_id VARCHAR(1023), subclass_of VARCHAR(1023), ensembl_gene_id VARCHAR(1023), homologene_id VARCHAR(1023), found_in_taxon VARCHAR(1023), refseq_rna_id VARCHAR(1023), ensembl_transcript_id VARCHAR(1023), chromosome VARCHAR(1023), encodes VARCHAR(1023), mouse_genome_informatics_id VARCHAR(1023), ortholog VARCHAR(1023), exact_match VARCHAR(1023), mgi_gene_symbol VARCHAR(1023), strand_orientation VARCHAR(1023), instance_of VARCHAR(1023), cytogenetic_location VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), expressed_in VARCHAR(1023));\nCREATE TABLE biological_variant_of (label VARCHAR(1023), description VARCHAR(1023), entrez_gene_id VARCHAR(1023), hgnc_gene_symbol VARCHAR(1023), hgnc_id VARCHAR(1023), omim_id VARCHAR(1023), subclass_of VARCHAR(1023), ensembl_gene_id VARCHAR(1023), homologene_id VARCHAR(1023), ortholog VARCHAR(1023), refseq_rna_id VARCHAR(1023), ensembl_transcript_id VARCHAR(1023), image VARCHAR(1023), encodes VARCHAR(1023), genetic_association VARCHAR(1023), found_in_taxon VARCHAR(1023), exact_match VARCHAR(1023), chromosome VARCHAR(1023), strand_orientation VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), gene_atlas_image VARCHAR(1023), instance_of VARCHAR(1023), cytogenetic_location VARCHAR(1023), expressed_in VARCHAR(1023), civic_gene_id VARCHAR(1023));\nCREATE TABLE chromosome (label VARCHAR(1023), description VARCHAR(1023), subclass_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), freebase_id VARCHAR(1023), commons_category VARCHAR(1023), refseq_genome_id VARCHAR(1023), found_in_taxon VARCHAR(1023), instance_of VARCHAR(1023), short_name VARCHAR(1023), length DOUBLE, topics_main_category VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), mesh_tree_code VARCHAR(1023), microsoft_academic_id VARCHAR(1023), openalex_id VARCHAR(1023));",
        "Response": "Table: frameshift_truncation"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO people () VALUES (5, 'Eve Tatiana Cruz Oviedo', 19.0, 1.719999999999999974, 'Santo Domingo');\nDatabase State:\nCREATE TABLE gymnast (Gymnast_ID BIGINT, Floor_Exercise_Points DOUBLE, Pommel_Horse_Points DOUBLE, Rings_Points DOUBLE, Vault_Points DOUBLE, Parallel_Bars_Points DOUBLE, Horizontal_Bar_Points DOUBLE, Total_Points DOUBLE);",
        "Response": "Table: people"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO careplans () VALUES ('a2421cd6-2935-4725-947b-11723f28396d', '1999-12-22', NULL, '4b71c2cd-a861-4985-92f9-f3a38b9586fb', '4464cb93-9168-434a-bb56-6ce0d2efc66d', 266707007.0, 'Drug addiction therapy', 55680006, 'Drug overdose');\nDatabase State:\nCREATE TABLE all_prevalences (ITEM VARCHAR(1023), POPULATION_TYPE VARCHAR(1023), OCCURRENCES BIGINT, POPULATION_COUNT BIGINT, PREVALENCE_RATE DOUBLE, PREVALENCE_PERCENTAGE DOUBLE);\nCREATE TABLE procedures (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE careplans (ID VARCHAR(1023), START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE DOUBLE, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));",
        "Response": "Table: CarePlanDetails"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (117172, 818, 45919, 0, '2013-09-15 00:00:00.0', 'W', 5, 0.0, '2013-09-15 00:00:00.0');\nDatabase State:\nCREATE TABLE ScrapReason (ScrapReasonID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CountryRegionCurrency (CountryRegionCode VARCHAR(1023), CurrencyCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PersonCreditCard (BusinessEntityID BIGINT, CreditCardID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE SalesOrderDetail (SalesOrderID BIGINT, SalesOrderDetailID BIGINT, CarrierTrackingNumber VARCHAR(1023), OrderQty BIGINT, ProductID BIGINT, SpecialOfferID BIGINT, UnitPrice DOUBLE, UnitPriceDiscount DOUBLE, LineTotal DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductPhoto (ProductPhotoID BIGINT, ThumbNailPhoto BLOB, ThumbnailPhotoFileName VARCHAR(1023), LargePhoto BLOB, LargePhotoFileName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntity (BusinessEntityID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PhoneNumberType (PhoneNumberTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductDescription (ProductDescriptionID BIGINT, Description VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductModelProductDescriptionCulture (ProductModelID BIGINT, ProductDescriptionID BIGINT, CultureID VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE JobCandidate (JobCandidateID BIGINT, BusinessEntityID BIGINT, Resume VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CreditCard (CreditCardID BIGINT, CardType VARCHAR(1023), CardNumber VARCHAR(1023), ExpMonth BIGINT, ExpYear BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ProductListPriceHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, ListPrice DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Address (AddressID BIGINT, AddressLine1 VARCHAR(1023), AddressLine2 VARCHAR(1023), City VARCHAR(1023), StateProvinceID BIGINT, PostalCode VARCHAR(1023), SpatialLocation VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Document (DocumentNode VARCHAR(1023), DocumentLevel BIGINT, Title VARCHAR(1023), Owner BIGINT, FolderFlag BIGINT, FileName VARCHAR(1023), FileExtension VARCHAR(1023), Revision VARCHAR(1023), ChangeNumber BIGINT, Status BIGINT, DocumentSummary VARCHAR(1023), Document BLOB, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Shift (ShiftID BIGINT, Name VARCHAR(1023), StartTime VARCHAR(1023), EndTime VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderHeader (PurchaseOrderID BIGINT, RevisionNumber BIGINT, Status BIGINT, EmployeeID BIGINT, VendorID BIGINT, ShipMethodID BIGINT, OrderDate DATETIME, ShipDate DATETIME, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Vendor (BusinessEntityID BIGINT, AccountNumber VARCHAR(1023), Name VARCHAR(1023), CreditRating BIGINT, PreferredVendorStatus BIGINT, ActiveFlag BIGINT, PurchasingWebServiceURL VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeaderSalesReason (SalesOrderID BIGINT, SalesReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE EmailAddress (BusinessEntityID BIGINT, EmailAddressID BIGINT, EmailAddress VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE AddressType (AddressTypeID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE TransactionHistory (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Store (BusinessEntityID BIGINT, Name VARCHAR(1023), SalesPersonID BIGINT, Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductReview (ProductReviewID BIGINT, ProductID BIGINT, ReviewerName VARCHAR(1023), ReviewDate DATETIME, EmailAddress VARCHAR(1023), Rating BIGINT, Comments VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesReason (SalesReasonID BIGINT, Name VARCHAR(1023), ReasonType VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Department (DepartmentID BIGINT, Name VARCHAR(1023), GroupName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CurrencyRate (CurrencyRateID BIGINT, CurrencyRateDate DATETIME, FromCurrencyCode VARCHAR(1023), ToCurrencyCode VARCHAR(1023), AverageRate DOUBLE, EndOfDayRate DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE EmployeeDepartmentHistory (BusinessEntityID BIGINT, DepartmentID BIGINT, ShiftID BIGINT, StartDate DATE, EndDate DATE, ModifiedDate DATETIME);\nCREATE TABLE Currency (CurrencyCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Product (ProductID BIGINT, Name VARCHAR(1023), ProductNumber VARCHAR(1023), MakeFlag BIGINT, FinishedGoodsFlag BIGINT, Color VARCHAR(1023), SafetyStockLevel BIGINT, ReorderPoint BIGINT, StandardCost DOUBLE, ListPrice DOUBLE, Size VARCHAR(1023), SizeUnitMeasureCode VARCHAR(1023), WeightUnitMeasureCode VARCHAR(1023), Weight DOUBLE, DaysToManufacture BIGINT, ProductLine VARCHAR(1023), Class VARCHAR(1023), Style VARCHAR(1023), ProductSubcategoryID BIGINT, ProductModelID BIGINT, SellStartDate DATETIME, SellEndDate DATETIME, DiscontinuedDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Customer (CustomerID BIGINT, PersonID BIGINT, StoreID BIGINT, TerritoryID BIGINT, AccountNumber VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE StateProvince (StateProvinceID BIGINT, StateProvinceCode VARCHAR(1023), CountryRegionCode VARCHAR(1023), IsOnlyStateProvinceFlag BIGINT, Name VARCHAR(1023), TerritoryID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductModel (ProductModelID BIGINT, Name VARCHAR(1023), CatalogDescription VARCHAR(1023), Instructions VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTaxRate (SalesTaxRateID BIGINT, StateProvinceID BIGINT, TaxType BIGINT, TaxRate DOUBLE, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesPerson (BusinessEntityID BIGINT, TerritoryID BIGINT, SalesQuota DOUBLE, Bonus DOUBLE, CommissionPct DOUBLE, SalesYTD DOUBLE, SalesLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);",
        "Response": "Table: OrderTransactions"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (7, 'Clary Sermina Delgado Cid', 21.0, 1.75, 'Santiago de los Caballeros');\nDatabase State:\nCREATE TABLE gymnast (Gymnast_ID BIGINT, Floor_Exercise_Points DOUBLE, Pommel_Horse_Points DOUBLE, Rings_Points DOUBLE, Vault_Points DOUBLE, Parallel_Bars_Points DOUBLE, Horizontal_Bar_Points DOUBLE, Total_Points DOUBLE);\nCREATE TABLE people (People_ID BIGINT, Name VARCHAR(1023), Age DOUBLE, Height DOUBLE, Hometown VARCHAR(1023));",
        "Response": "Table: Residents"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO people () VALUES (9, 'Rosa Clarissa Ort\u00edz Melo', 23.0, 1.810000000000000053, 'La Romana');\nDatabase State:\nCREATE TABLE people (People_ID BIGINT, Name VARCHAR(1023), Age DOUBLE, Height DOUBLE, Hometown VARCHAR(1023));",
        "Response": "Table: people"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('2437', 'natural number', 'natural number', '2437 (number)', 2437.0, '2437', 4.0, '2437.0');\nDatabase State:\nCREATE TABLE prime_factor (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), prime_factor VARCHAR(1023), number_of_decimal_digits DOUBLE);\nCREATE TABLE centered_hexagonal_number (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), number_of_decimal_digits DOUBLE, prime_factor VARCHAR(1023));",
        "Response": "Table: CenteredHexagonalNumbers"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Five Nights at Pizzeria', 'GAME', 3.5, 1976, '21M', '100,000+', 'Free', '0', 'Teen', 'Action');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: playstore"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_REL () VALUES (2396870, 104, 24, 25);\nDatabase State:\nCREATE TABLE ATT_CLASSES (ATT_CLASS_ID BIGINT, ATT_CLASS VARCHAR(1023));\nCREATE TABLE IMG_OBJ_ATT (IMG_ID BIGINT, ATT_CLASS_ID BIGINT, OBJ_SAMPLE_ID BIGINT);\nCREATE TABLE IMG_OBJ (IMG_ID BIGINT, OBJ_SAMPLE_ID BIGINT, OBJ_CLASS_ID BIGINT, X BIGINT, Y BIGINT, W BIGINT, H BIGINT);\nCREATE TABLE OBJ_CLASSES (OBJ_CLASS_ID BIGINT, OBJ_CLASS VARCHAR(1023));",
        "Response": "Table: IMG_REL"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_OBJ () VALUES (2394994, 7, 204, 237, 216, 118, 12);\nDatabase State:\nCREATE TABLE ATT_CLASSES (ATT_CLASS_ID BIGINT, ATT_CLASS VARCHAR(1023));",
        "Response": "Table: IMG_OBJ"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Baby Panda Care', 'Thanks', 'Positive', '0.2', '0.2');\nDatabase State:\nCREATE TABLE user_reviews (App VARCHAR(1023), Translated_Review VARCHAR(1023), Sentiment VARCHAR(1023), Sentiment_Polarity VARCHAR(1023), Sentiment_Subjectivity VARCHAR(1023));",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (194028, 2011, 'B', 'X', '2y all', '304', '48', '71', '15.8', '23.4');\nDatabase State:\nCREATE TABLE state_sector_grads (stateid BIGINT, state VARCHAR(1023), state_abbr VARCHAR(1023), control VARCHAR(1023), level VARCHAR(1023), year BIGINT, gender VARCHAR(1023), race VARCHAR(1023), cohort VARCHAR(1023), grad_cohort VARCHAR(1023), grad_100 VARCHAR(1023), grad_150 VARCHAR(1023), grad_100_rate VARCHAR(1023), grad_150_rate VARCHAR(1023), grad_cohort_ct BIGINT);\nCREATE TABLE institution_grads (unitid BIGINT, year BIGINT, gender VARCHAR(1023), race VARCHAR(1023), cohort VARCHAR(1023), grad_cohort VARCHAR(1023), grad_100 VARCHAR(1023), grad_150 VARCHAR(1023), grad_100_rate VARCHAR(1023), grad_150_rate VARCHAR(1023));\nCREATE TABLE institution_details (unitid BIGINT, chronname VARCHAR(1023), city VARCHAR(1023), state VARCHAR(1023), level VARCHAR(1023), control VARCHAR(1023), basic VARCHAR(1023), hbcu VARCHAR(1023), flagship VARCHAR(1023), long_x DOUBLE, lat_y DOUBLE, site VARCHAR(1023), student_count BIGINT, awards_per_value DOUBLE, awards_per_state_value DOUBLE, awards_per_natl_value DOUBLE, exp_award_value BIGINT, exp_award_state_value BIGINT, exp_award_natl_value BIGINT, exp_award_percentile BIGINT, ft_pct DOUBLE, fte_value BIGINT, fte_percentile BIGINT, med_sat_value VARCHAR(1023), med_sat_percentile VARCHAR(1023), aid_value BIGINT, aid_percentile BIGINT, endow_value VARCHAR(1023), endow_percentile VARCHAR(1023), grad_100_value DOUBLE, grad_100_percentile BIGINT, grad_150_value DOUBLE, grad_150_percentile BIGINT, pell_value DOUBLE, pell_percentile BIGINT, retain_value DOUBLE, retain_percentile BIGINT, ft_fac_value DOUBLE, ft_fac_percentile BIGINT, vsa_year VARCHAR(1023), vsa_grad_after4_first VARCHAR(1023), vsa_grad_elsewhere_after4_first VARCHAR(1023), vsa_enroll_after4_first VARCHAR(1023), vsa_enroll_elsewhere_after4_first VARCHAR(1023), vsa_grad_after6_first VARCHAR(1023), vsa_grad_elsewhere_after6_first VARCHAR(1023), vsa_enroll_after6_first VARCHAR(1023), vsa_enroll_elsewhere_after6_first VARCHAR(1023), vsa_grad_after4_transfer VARCHAR(1023), vsa_grad_elsewhere_after4_transfer VARCHAR(1023), vsa_enroll_after4_transfer VARCHAR(1023), vsa_enroll_elsewhere_after4_transfer VARCHAR(1023), vsa_grad_after6_transfer VARCHAR(1023), vsa_grad_elsewhere_after6_transfer VARCHAR(1023), vsa_enroll_after6_transfer VARCHAR(1023), vsa_enroll_elsewhere_after6_transfer VARCHAR(1023), similar VARCHAR(1023), state_sector_ct BIGINT, carnegie_ct BIGINT, counted_pct VARCHAR(1023), nicknames VARCHAR(1023), cohort_size BIGINT);",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Director of the Office of Planning and Budget', 'government position in Uruguay', 'public office', 'nan', 'Uruguay', 'Cabinet of Uruguay', 'Office of Planning and Budget');\nDatabase State:\nCREATE TABLE organization (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), country VARCHAR(1023), office_held_by_head_of_the_organization VARCHAR(1023), inception VARCHAR(1023), headquarters_location VARCHAR(1023), official_website VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), google_knowledge_graph_id VARCHAR(1023));",
        "Response": "Table: cabinet_of_uruguay"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO SalesOrderDetail () VALUES (47033, 14831, '2797-46ED-BB', 3, 797, 1, 600.0, 0.0, 1801.0, 'A9BC814B-2FA3-497A-9503-6B8A3D9F1A70', '2012-06-30 00:00:00.0');\nDatabase State:\nCREATE TABLE PersonCreditCard (BusinessEntityID BIGINT, CreditCardID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ProductDocument (ProductID BIGINT, DocumentNode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ShoppingCartItem (ShoppingCartItemID BIGINT, ShoppingCartID VARCHAR(1023), Quantity BIGINT, ProductID BIGINT, DateCreated DATETIME, ModifiedDate DATETIME);\nCREATE TABLE ProductPhoto (ProductPhotoID BIGINT, ThumbNailPhoto BLOB, ThumbnailPhotoFileName VARCHAR(1023), LargePhoto BLOB, LargePhotoFileName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderHeader (PurchaseOrderID BIGINT, RevisionNumber BIGINT, Status BIGINT, EmployeeID BIGINT, VendorID BIGINT, ShipMethodID BIGINT, OrderDate DATETIME, ShipDate DATETIME, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityAddress (BusinessEntityID BIGINT, AddressID BIGINT, AddressTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SpecialOffer (SpecialOfferID BIGINT, Description VARCHAR(1023), DiscountPct DOUBLE, Type VARCHAR(1023), Category VARCHAR(1023), StartDate DATETIME, EndDate DATETIME, MinQty BIGINT, MaxQty BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ScrapReason (ScrapReasonID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityContact (BusinessEntityID BIGINT, PersonID BIGINT, ContactTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BillOfMaterials (BillOfMaterialsID BIGINT, ProductAssemblyID BIGINT, ComponentID BIGINT, StartDate DATETIME, EndDate DATETIME, UnitMeasureCode VARCHAR(1023), BOMLevel BIGINT, PerAssemblyQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Vendor (BusinessEntityID BIGINT, AccountNumber VARCHAR(1023), Name VARCHAR(1023), CreditRating BIGINT, PreferredVendorStatus BIGINT, ActiveFlag BIGINT, PurchasingWebServiceURL VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTerritory (TerritoryID BIGINT, Name VARCHAR(1023), CountryRegionCode VARCHAR(1023), Group VARCHAR(1023), SalesYTD DOUBLE, SalesLastYear DOUBLE, CostYTD DOUBLE, CostLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Employee (BusinessEntityID BIGINT, NationalIDNumber VARCHAR(1023), LoginID VARCHAR(1023), OrganizationNode VARCHAR(1023), OrganizationLevel BIGINT, JobTitle VARCHAR(1023), BirthDate DATE, MaritalStatus VARCHAR(1023), Gender VARCHAR(1023), HireDate DATE, SalariedFlag BIGINT, VacationHours BIGINT, SickLeaveHours BIGINT, CurrentFlag BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PhoneNumberType (PhoneNumberTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ShipMethod (ShipMethodID BIGINT, Name VARCHAR(1023), ShipBase DOUBLE, ShipRate DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntity (BusinessEntityID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Location (LocationID BIGINT, Name VARCHAR(1023), CostRate DOUBLE, Availability DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE AddressType (AddressTypeID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductListPriceHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, ListPrice DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Currency (CurrencyCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Shift (ShiftID BIGINT, Name VARCHAR(1023), StartTime VARCHAR(1023), EndTime VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductModelProductDescriptionCulture (ProductModelID BIGINT, ProductDescriptionID BIGINT, CultureID VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderDetail (SalesOrderID BIGINT, SalesOrderDetailID BIGINT, CarrierTrackingNumber VARCHAR(1023), OrderQty BIGINT, ProductID BIGINT, SpecialOfferID BIGINT, UnitPrice DOUBLE, UnitPriceDiscount DOUBLE, LineTotal DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Culture (CultureID VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CreditCard (CreditCardID BIGINT, CardType VARCHAR(1023), CardNumber VARCHAR(1023), ExpMonth BIGINT, ExpYear BIGINT, ModifiedDate DATETIME);\nCREATE TABLE WorkOrder (WorkOrderID BIGINT, ProductID BIGINT, OrderQty BIGINT, StockedQty BIGINT, ScrappedQty BIGINT, StartDate DATETIME, EndDate DATETIME, DueDate DATETIME, ScrapReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE SalesTerritoryHistory (BusinessEntityID BIGINT, TerritoryID BIGINT, StartDate DATETIME, EndDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Store (BusinessEntityID BIGINT, Name VARCHAR(1023), SalesPersonID BIGINT, Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CountryRegionCurrency (CountryRegionCode VARCHAR(1023), CurrencyCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductCategory (ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeaderSalesReason (SalesOrderID BIGINT, SalesReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE Password (BusinessEntityID BIGINT, PasswordHash VARCHAR(1023), PasswordSalt VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeader (SalesOrderID BIGINT, RevisionNumber BIGINT, OrderDate DATETIME, DueDate DATETIME, ShipDate DATETIME, Status BIGINT, OnlineOrderFlag BIGINT, SalesOrderNumber VARCHAR(1023), PurchaseOrderNumber VARCHAR(1023), AccountNumber VARCHAR(1023), CustomerID BIGINT, SalesPersonID BIGINT, TerritoryID BIGINT, BillToAddressID BIGINT, ShipToAddressID BIGINT, ShipMethodID BIGINT, CreditCardID BIGINT, CreditCardApprovalCode VARCHAR(1023), CurrencyRateID BIGINT, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, Comment VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmployeePayHistory (BusinessEntityID BIGINT, RateChangeDate DATETIME, Rate DOUBLE, PayFrequency BIGINT, ModifiedDate DATETIME);",
        "Response": "Table: SalesOrderDetail"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO pilot_record () VALUES (6, 1, 5, '2008/01/04');\nDatabase State:\nCREATE TABLE pilot (Pilot_ID BIGINT, Pilot_name VARCHAR(1023), Rank BIGINT, Age BIGINT, Nationality VARCHAR(1023), Position VARCHAR(1023), Join_Year BIGINT, Team VARCHAR(1023));",
        "Response": "Table: pilot_record"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Minister of National Defence of Uruguay', 'nan', 'position', 'defence minister', 'nan', 'Cabinet of Uruguay', 'Ministry of National Defense (Uruguay)');\nDatabase State:\nCREATE TABLE organization_leader (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), subclass_of VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), part_of VARCHAR(1023), organization_directed_by_the_office_or_position VARCHAR(1023));\nCREATE TABLE cabinet_of_uruguay (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), subclass_of VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), part_of VARCHAR(1023), organization_directed_by_the_office_or_position VARCHAR(1023));",
        "Response": "Table: cabinet_of_uruguay"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Minister of Public Health (Uruguay)', 'Ministerial position in Uruguay', 'public office', 'minister', 'Uruguay', 'Cabinet of Uruguay', 'Ministry of Public Health (Uruguay)');\nDatabase State:\nCREATE TABLE cabinet_of_uruguay (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), subclass_of VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), part_of VARCHAR(1023), organization_directed_by_the_office_or_position VARCHAR(1023));",
        "Response": "Table: UruguayanGovernmentPositions"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO immunizations () VALUES ('2008-04-26', 'a0d4fa87-43ff-420e-a1a8-b7d1a40a992b', '8721eede-529a-418a-9e81-f73cf7eb13cf', 83, 'Hep A  ped/adol  2 dose');\nDatabase State:\nCREATE TABLE all_prevalences (ITEM VARCHAR(1023), POPULATION_TYPE VARCHAR(1023), OCCURRENCES BIGINT, POPULATION_COUNT BIGINT, PREVALENCE_RATE DOUBLE, PREVALENCE_PERCENTAGE DOUBLE);",
        "Response": "Table: immunizations"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('BukuBayi - Perkembangan Bayi', 'very helpful for me and my wife in knowing the baby''s development', 'Positive', '0.2', '0.3');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO member_attendance () VALUES (7, 2, 3);\nDatabase State:\nCREATE TABLE member_attendance (Member_ID BIGINT, Performance_ID BIGINT, Num_of_Pieces BIGINT);",
        "Response": "Table: Attendance_Log"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO pilot () VALUES (1, 'Patrick O''Bryant', 13, 33, 'United States', 'Center Team', 2009, 'Bradley');\nDatabase State:\nCREATE TABLE pilot (Pilot_ID BIGINT, Pilot_name VARCHAR(1023), Rank BIGINT, Age BIGINT, Nationality VARCHAR(1023), Position VARCHAR(1023), Join_Year BIGINT, Team VARCHAR(1023));",
        "Response": "Table: NBA_Players"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO administrative_territorial_entity () VALUES ('Haifa Subdistrict', 'subdistrict in Haifa, Israel', 'Haifa District', 'Israel', 'subdistrict of Israel', NULL, 'nan', '32.8', 'Sub-district Haifa', 'nan', 'nan', 'nan', 'Haifa subdistrict in Israel.svg', 'nan', '294798.0', 294.0, 'nan');\nDatabase State:\nCREATE TABLE administrative_territorial_entity (label VARCHAR(1023), description VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), country VARCHAR(1023), instance_of VARCHAR(1023), population DOUBLE, freebase_id VARCHAR(1023), coordinate_location VARCHAR(1023), commons_category VARCHAR(1023), capital VARCHAR(1023), topics_main_category VARCHAR(1023), openstreetmap_relation_id VARCHAR(1023), locator_map_image VARCHAR(1023), official_website VARCHAR(1023), geonames_id VARCHAR(1023), area DOUBLE, inaturalist_place_id VARCHAR(1023));\nCREATE TABLE country (label VARCHAR(1023), description VARCHAR(1023), great_russian_encyclopedia_online_id VARCHAR(1023), wipo_st3 VARCHAR(1023), population DOUBLE, getty_thesaurus_of_geographic_names_id VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), wikimedia_outline VARCHAR(1023), ndl_authority_id VARCHAR(1023), currency VARCHAR(1023), new_york_times_topic_id VARCHAR(1023), geonames_id VARCHAR(1023), gnd_id VARCHAR(1023), unicode_character VARCHAR(1023), category_of_associated_people VARCHAR(1023), emergency_phone_number VARCHAR(1023), unesco_thesaurus_id VARCHAR(1023), electrical_plug_type VARCHAR(1023), licence_plate_code VARCHAR(1023), babelnet_id VARCHAR(1023), geography_of_topic VARCHAR(1023), iso_3166_1_alpha_3_code VARCHAR(1023), office_held_by_head_of_government VARCHAR(1023), quora_topic_id VARCHAR(1023), native_label VARCHAR(1023), basic_form_of_government VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), has_quality VARCHAR(1023), coat_of_arms_image VARCHAR(1023), uic_alphabetical_country_code VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), insee_countries_and_foreign_territories_code VARCHAR(1023), invasive_species_compendium_datasheet_id VARCHAR(1023), diplomatic_relation VARCHAR(1023), flag_image VARCHAR(1023), ituisoiec_object_identifier VARCHAR(1023), commons_gallery VARCHAR(1023), legislative_body VARCHAR(1023), trunk_prefix VARCHAR(1023), history_of_topic VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), stw_thesaurus_for_economics_id VARCHAR(1023), official_language VARCHAR(1023), viaf_id VARCHAR(1023), subreddit VARCHAR(1023), continent VARCHAR(1023), capital VARCHAR(1023), coat_of_arms VARCHAR(1023), demonym VARCHAR(1023), national_library_of_israel_id_old VARCHAR(1023), openstreetmap_relation_id VARCHAR(1023), on_focus_list_of_wikimedia_project VARCHAR(1023), omegawiki_defined_meaning VARCHAR(1023), coordinates_of_northernmost_point VARCHAR(1023), nkcr_aut_id VARCHAR(1023), comic_vine_id VARCHAR(1023), mobile_country_code VARCHAR(1023), total_fertility_rate DOUBLE, maritime_identification_digits VARCHAR(1023), us_national_archives_identifier VARCHAR(1023), shares_border_with VARCHAR(1023), marriageable_age DOUBLE, topics_main_category VARCHAR(1023), head_of_government VARCHAR(1023), biblioth\u00e8que_nationale_de_france_id VARCHAR(1023), category_of_people_buried_here VARCHAR(1023), locator_map_image VARCHAR(1023), bbc_things_id VARCHAR(1023), geoshape VARCHAR(1023), dewey_decimal_classification VARCHAR(1023), area DOUBLE, le_monde_diplomatique_subject_id VARCHAR(1023), ioc_country_code VARCHAR(1023), member_of VARCHAR(1023), official_name VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), railway_traffic_side VARCHAR(1023), gacs_id VARCHAR(1023), archinform_location_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), page_banner VARCHAR(1023), category_for_films_shot_at_this_location VARCHAR(1023), mains_voltage DOUBLE, executive_body VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), yso_id VARCHAR(1023), anthem VARCHAR(1023), office_held_by_head_of_state VARCHAR(1023), life_expectancy DOUBLE, part_of VARCHAR(1023), commons_category VARCHAR(1023), top_level_internet_domain VARCHAR(1023), instance_of VARCHAR(1023), highest_point VARCHAR(1023), category_for_people_born_here VARCHAR(1023), iab_code VARCHAR(1023), short_name VARCHAR(1023), number_of_out_of_school_children DOUBLE, driving_side VARCHAR(1023), head_of_state VARCHAR(1023), uic_numerical_country_code VARCHAR(1023), lowest_point VARCHAR(1023), idref_id VARCHAR(1023), iso_3166_1_numeric_code VARCHAR(1023), located_in_time_zone VARCHAR(1023), contains_the_administrative_territorial_entity VARCHAR(1023), itu_letter_code VARCHAR(1023), country_calling_code VARCHAR(1023), freebase_id VARCHAR(1023), statoids_id VARCHAR(1023), library_of_congress_authority_id VARCHAR(1023), iso_3166_1_alpha_2_code VARCHAR(1023), coordinate_location VARCHAR(1023), fips_10_4_countries_and_regions VARCHAR(1023), described_by_source VARCHAR(1023), isni VARCHAR(1023), civicus_monitor_country_entry VARCHAR(1023), brockhaus_enzyklop\u00e4die_online_id VARCHAR(1023), klexikon_article_id VARCHAR(1023), loc_and_marc_vocabularies_id VARCHAR(1023), central_bank VARCHAR(1023), language_used VARCHAR(1023), coordinates_of_westernmost_point VARCHAR(1023), whos_on_first_id VARCHAR(1023), the_top_tens_id VARCHAR(1023), world_encyclopedia_of_puppetry_arts_id VARCHAR(1023), official_website VARCHAR(1023), hds_id VARCHAR(1023), gs1_country_code VARCHAR(1023), culture VARCHAR(1023), coordinates_of_southernmost_point VARCHAR(1023), coordinates_of_easternmost_point VARCHAR(1023), geonlp_id VARCHAR(1023), category_for_maps VARCHAR(1023), treccanis_dizionario_di_storia_id VARCHAR(1023), vat_rate DOUBLE, french_vikidia_id VARCHAR(1023), english_vikidia_id VARCHAR(1023), spanish_vikidia_id VARCHAR(1023), pronunciation_audio VARCHAR(1023), eurovoc_id VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), open_data_portal VARCHAR(1023), grove_art_online_id VARCHAR(1023), rkd_thesaurus_id VARCHAR(1023), pm20_geo_code VARCHAR(1023), interlingual_index_id VARCHAR(1023), jewish_encyclopedia_id_russian VARCHAR(1023), bbc_news_topic_id VARCHAR(1023), tasteatlas_id VARCHAR(1023), inaturalist_place_id VARCHAR(1023), economy_of_topic VARCHAR(1023), flag VARCHAR(1023), uk_parliament_thesaurus_id VARCHAR(1023), yle_topic_id VARCHAR(1023), ysa_id VARCHAR(1023), inception VARCHAR(1023), bhcl_uuid VARCHAR(1023), github_topic VARCHAR(1023), wordnet_31_synset_id VARCHAR(1023), demographics_of_topic VARCHAR(1023), joconde_location_id VARCHAR(1023), idaigazetteer_id VARCHAR(1023), country VARCHAR(1023), armeniapedia_id VARCHAR(1023), krugosvet_article VARCHAR(1023), schoenberg_database_of_manuscripts_place_id VARCHAR(1023), the_world_factbook_country_id VARCHAR(1023), colon_classification VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), democracy_index DOUBLE, online_pwn_encyclopedia_id VARCHAR(1023), treccani_id VARCHAR(1023), postimees_topic_id VARCHAR(1023), museum_digital_place_id VARCHAR(1023), wikisimpsons_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), urban_electric_transit_country_id VARCHAR(1023), m49_code VARCHAR(1023), alltrails_trail_id VARCHAR(1023), human_development_index DOUBLE, national_historical_museums_of_sweden_id VARCHAR(1023), eu_knowledge_graph_item_id VARCHAR(1023), hashtag VARCHAR(1023), gini_coefficient DOUBLE, obo_gazetteer_id VARCHAR(1023), openstreetmap_element VARCHAR(1023), happy_planet_index_score DOUBLE, namuwiki_id VARCHAR(1023), curlie_id VARCHAR(1023), unemployment_rate DOUBLE, nalt_id VARCHAR(1023), age_of_majority DOUBLE, fast_id VARCHAR(1023), dr_topic_id VARCHAR(1023), der_spiegel_topic_id VARCHAR(1023));",
        "Response": "Table: Regions"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (2358985, 691, 14);\nDatabase State:\nCREATE TABLE OBJ_CLASSES (OBJ_CLASS_ID BIGINT, OBJ_CLASS VARCHAR(1023));\nCREATE TABLE PRED_CLASSES (PRED_CLASS_ID BIGINT, PRED_CLASS VARCHAR(1023));\nCREATE TABLE IMG_OBJ (IMG_ID BIGINT, OBJ_SAMPLE_ID BIGINT, OBJ_CLASS_ID BIGINT, X BIGINT, Y BIGINT, W BIGINT, H BIGINT);\nCREATE TABLE IMG_REL (IMG_ID BIGINT, PRED_CLASS_ID BIGINT, OBJ1_SAMPLE_ID BIGINT, OBJ2_SAMPLE_ID BIGINT);\nCREATE TABLE ATT_CLASSES (ATT_CLASS_ID BIGINT, ATT_CLASS VARCHAR(1023));",
        "Response": "Table: IMG_OBJ_ATT"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('9616c9df-c595-4625-8326-5b0c947a2ea4', '2011-06-19', '602eaf94-38f9-4258-817f-30640c41c24d', 170258001, 'Outpatient Encounter', NULL, NULL);\nDatabase State:\nCREATE TABLE procedures (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE all_prevalences (ITEM VARCHAR(1023), POPULATION_TYPE VARCHAR(1023), OCCURRENCES BIGINT, POPULATION_COUNT BIGINT, PREVALENCE_RATE DOUBLE, PREVALENCE_PERCENTAGE DOUBLE);\nCREATE TABLE immunizations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE encounters (ID VARCHAR(1023), DATE DATE, PATIENT VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE claims (ID VARCHAR(1023), PATIENT VARCHAR(1023), BILLABLEPERIOD DATE, ORGANIZATION VARCHAR(1023), ENCOUNTER VARCHAR(1023), DIAGNOSIS VARCHAR(1023), TOTAL BIGINT);\nCREATE TABLE careplans (ID VARCHAR(1023), START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE DOUBLE, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE patients (patient VARCHAR(1023), birthdate DATE, deathdate DATE, ssn VARCHAR(1023), drivers VARCHAR(1023), passport VARCHAR(1023), prefix VARCHAR(1023), first VARCHAR(1023), last VARCHAR(1023), suffix VARCHAR(1023), maiden VARCHAR(1023), marital VARCHAR(1023), race VARCHAR(1023), ethnicity VARCHAR(1023), gender VARCHAR(1023), birthplace VARCHAR(1023), address VARCHAR(1023));\nCREATE TABLE conditions (START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE allergies (START VARCHAR(1023), STOP VARCHAR(1023), PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE observations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE VARCHAR(1023), DESCRIPTION VARCHAR(1023), VALUE DOUBLE, UNITS VARCHAR(1023));\nCREATE TABLE medications (START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));",
        "Response": "Table: MedicalEncounters"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (61486, 841, 49855, 12, '2013-02-28 00:00:00.0', 'S', 5, 39.0, '2013-02-28 00:00:00.0');\nDatabase State:\nCREATE TABLE BusinessEntityContact (BusinessEntityID BIGINT, PersonID BIGINT, ContactTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CurrencyRate (CurrencyRateID BIGINT, CurrencyRateDate DATETIME, FromCurrencyCode VARCHAR(1023), ToCurrencyCode VARCHAR(1023), AverageRate DOUBLE, EndOfDayRate DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE WorkOrderRouting (WorkOrderID BIGINT, ProductID BIGINT, OperationSequence BIGINT, LocationID BIGINT, ScheduledStartDate DATETIME, ScheduledEndDate DATETIME, ActualStartDate DATETIME, ActualEndDate DATETIME, ActualResourceHrs DOUBLE, PlannedCost DOUBLE, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ScrapReason (ScrapReasonID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTaxRate (SalesTaxRateID BIGINT, StateProvinceID BIGINT, TaxType BIGINT, TaxRate DOUBLE, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SpecialOfferProduct (SpecialOfferID BIGINT, ProductID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE JobCandidate (JobCandidateID BIGINT, BusinessEntityID BIGINT, Resume VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductCategory (ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeader (SalesOrderID BIGINT, RevisionNumber BIGINT, OrderDate DATETIME, DueDate DATETIME, ShipDate DATETIME, Status BIGINT, OnlineOrderFlag BIGINT, SalesOrderNumber VARCHAR(1023), PurchaseOrderNumber VARCHAR(1023), AccountNumber VARCHAR(1023), CustomerID BIGINT, SalesPersonID BIGINT, TerritoryID BIGINT, BillToAddressID BIGINT, ShipToAddressID BIGINT, ShipMethodID BIGINT, CreditCardID BIGINT, CreditCardApprovalCode VARCHAR(1023), CurrencyRateID BIGINT, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, Comment VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SpecialOffer (SpecialOfferID BIGINT, Description VARCHAR(1023), DiscountPct DOUBLE, Type VARCHAR(1023), Category VARCHAR(1023), StartDate DATETIME, EndDate DATETIME, MinQty BIGINT, MaxQty BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Shift (ShiftID BIGINT, Name VARCHAR(1023), StartTime VARCHAR(1023), EndTime VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Customer (CustomerID BIGINT, PersonID BIGINT, StoreID BIGINT, TerritoryID BIGINT, AccountNumber VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Location (LocationID BIGINT, Name VARCHAR(1023), CostRate DOUBLE, Availability DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE SalesTerritory (TerritoryID BIGINT, Name VARCHAR(1023), CountryRegionCode VARCHAR(1023), Group VARCHAR(1023), SalesYTD DOUBLE, SalesLastYear DOUBLE, CostYTD DOUBLE, CostLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductReview (ProductReviewID BIGINT, ProductID BIGINT, ReviewerName VARCHAR(1023), ReviewDate DATETIME, EmailAddress VARCHAR(1023), Rating BIGINT, Comments VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BillOfMaterials (BillOfMaterialsID BIGINT, ProductAssemblyID BIGINT, ComponentID BIGINT, StartDate DATETIME, EndDate DATETIME, UnitMeasureCode VARCHAR(1023), BOMLevel BIGINT, PerAssemblyQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Password (BusinessEntityID BIGINT, PasswordHash VARCHAR(1023), PasswordSalt VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesPersonQuotaHistory (BusinessEntityID BIGINT, QuotaDate DATETIME, SalesQuota DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductSubcategory (ProductSubcategoryID BIGINT, ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Document (DocumentNode VARCHAR(1023), DocumentLevel BIGINT, Title VARCHAR(1023), Owner BIGINT, FolderFlag BIGINT, FileName VARCHAR(1023), FileExtension VARCHAR(1023), Revision VARCHAR(1023), ChangeNumber BIGINT, Status BIGINT, DocumentSummary VARCHAR(1023), Document BLOB, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductModelProductDescriptionCulture (ProductModelID BIGINT, ProductDescriptionID BIGINT, CultureID VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Culture (CultureID VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderHeader (PurchaseOrderID BIGINT, RevisionNumber BIGINT, Status BIGINT, EmployeeID BIGINT, VendorID BIGINT, ShipMethodID BIGINT, OrderDate DATETIME, ShipDate DATETIME, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Employee (BusinessEntityID BIGINT, NationalIDNumber VARCHAR(1023), LoginID VARCHAR(1023), OrganizationNode VARCHAR(1023), OrganizationLevel BIGINT, JobTitle VARCHAR(1023), BirthDate DATE, MaritalStatus VARCHAR(1023), Gender VARCHAR(1023), HireDate DATE, SalariedFlag BIGINT, VacationHours BIGINT, SickLeaveHours BIGINT, CurrentFlag BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ShoppingCartItem (ShoppingCartItemID BIGINT, ShoppingCartID VARCHAR(1023), Quantity BIGINT, ProductID BIGINT, DateCreated DATETIME, ModifiedDate DATETIME);\nCREATE TABLE TransactionHistoryArchive (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE CreditCard (CreditCardID BIGINT, CardType VARCHAR(1023), CardNumber VARCHAR(1023), ExpMonth BIGINT, ExpYear BIGINT, ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeaderSalesReason (SalesOrderID BIGINT, SalesReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ProductPhoto (ProductPhotoID BIGINT, ThumbNailPhoto BLOB, ThumbnailPhotoFileName VARCHAR(1023), LargePhoto BLOB, LargePhotoFileName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesPerson (BusinessEntityID BIGINT, TerritoryID BIGINT, SalesQuota DOUBLE, Bonus DOUBLE, CommissionPct DOUBLE, SalesYTD DOUBLE, SalesLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductCostHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, StandardCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityAddress (BusinessEntityID BIGINT, AddressID BIGINT, AddressTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE UnitMeasure (UnitMeasureCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntity (BusinessEntityID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductInventory (ProductID BIGINT, LocationID BIGINT, Shelf VARCHAR(1023), Bin BIGINT, Quantity BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE WorkOrder (WorkOrderID BIGINT, ProductID BIGINT, OrderQty BIGINT, StockedQty BIGINT, ScrappedQty BIGINT, StartDate DATETIME, EndDate DATETIME, DueDate DATETIME, ScrapReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ProductProductPhoto (ProductID BIGINT, ProductPhotoID BIGINT, Primary BIGINT, ModifiedDate DATETIME);\nCREATE TABLE PersonCreditCard (BusinessEntityID BIGINT, CreditCardID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE Department (DepartmentID BIGINT, Name VARCHAR(1023), GroupName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ShipMethod (ShipMethodID BIGINT, Name VARCHAR(1023), ShipBase DOUBLE, ShipRate DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Vendor (BusinessEntityID BIGINT, AccountNumber VARCHAR(1023), Name VARCHAR(1023), CreditRating BIGINT, PreferredVendorStatus BIGINT, ActiveFlag BIGINT, PurchasingWebServiceURL VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTerritoryHistory (BusinessEntityID BIGINT, TerritoryID BIGINT, StartDate DATETIME, EndDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE TransactionHistory (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ProductListPriceHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, ListPrice DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ProductVendor (ProductID BIGINT, BusinessEntityID BIGINT, AverageLeadTime BIGINT, StandardPrice DOUBLE, LastReceiptCost DOUBLE, LastReceiptDate DATETIME, MinOrderQty BIGINT, MaxOrderQty BIGINT, OnOrderQty BIGINT, UnitMeasureCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductModel (ProductModelID BIGINT, Name VARCHAR(1023), CatalogDescription VARCHAR(1023), Instructions VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CountryRegion (CountryRegionCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmailAddress (BusinessEntityID BIGINT, EmailAddressID BIGINT, EmailAddress VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CountryRegionCurrency (CountryRegionCode VARCHAR(1023), CurrencyCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductDescription (ProductDescriptionID BIGINT, Description VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Address (AddressID BIGINT, AddressLine1 VARCHAR(1023), AddressLine2 VARCHAR(1023), City VARCHAR(1023), StateProvinceID BIGINT, PostalCode VARCHAR(1023), SpatialLocation VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Store (BusinessEntityID BIGINT, Name VARCHAR(1023), SalesPersonID BIGINT, Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesReason (SalesReasonID BIGINT, Name VARCHAR(1023), ReasonType VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmployeeDepartmentHistory (BusinessEntityID BIGINT, DepartmentID BIGINT, ShiftID BIGINT, StartDate DATE, EndDate DATE, ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderDetail (PurchaseOrderID BIGINT, PurchaseOrderDetailID BIGINT, DueDate DATETIME, OrderQty BIGINT, ProductID BIGINT, UnitPrice DOUBLE, LineTotal DOUBLE, ReceivedQty DOUBLE, RejectedQty DOUBLE, StockedQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE EmployeePayHistory (BusinessEntityID BIGINT, RateChangeDate DATETIME, Rate DOUBLE, PayFrequency BIGINT, ModifiedDate DATETIME);\nCREATE TABLE Person (BusinessEntityID BIGINT, PersonType VARCHAR(1023), NameStyle BIGINT, Title VARCHAR(1023), FirstName VARCHAR(1023), MiddleName VARCHAR(1023), LastName VARCHAR(1023), Suffix VARCHAR(1023), EmailPromotion BIGINT, AdditionalContactInfo VARCHAR(1023), Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE AddressType (AddressTypeID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE StateProvince (StateProvinceID BIGINT, StateProvinceCode VARCHAR(1023), CountryRegionCode VARCHAR(1023), IsOnlyStateProvinceFlag BIGINT, Name VARCHAR(1023), TerritoryID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Product (ProductID BIGINT, Name VARCHAR(1023), ProductNumber VARCHAR(1023), MakeFlag BIGINT, FinishedGoodsFlag BIGINT, Color VARCHAR(1023), SafetyStockLevel BIGINT, ReorderPoint BIGINT, StandardCost DOUBLE, ListPrice DOUBLE, Size VARCHAR(1023), SizeUnitMeasureCode VARCHAR(1023), WeightUnitMeasureCode VARCHAR(1023), Weight DOUBLE, DaysToManufacture BIGINT, ProductLine VARCHAR(1023), Class VARCHAR(1023), Style VARCHAR(1023), ProductSubcategoryID BIGINT, ProductModelID BIGINT, SellStartDate DATETIME, SellEndDate DATETIME, DiscontinuedDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderDetail (SalesOrderID BIGINT, SalesOrderDetailID BIGINT, CarrierTrackingNumber VARCHAR(1023), OrderQty BIGINT, ProductID BIGINT, SpecialOfferID BIGINT, UnitPrice DOUBLE, UnitPriceDiscount DOUBLE, LineTotal DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PhoneNumberType (PhoneNumberTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Currency (CurrencyCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductDocument (ProductID BIGINT, DocumentNode VARCHAR(1023), ModifiedDate DATETIME);",
        "Response": "Table: TransactionHistoryArchive"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO centered_hexagonal_number () VALUES ('61', 'natural number', 'natural number', '61 (number)', 61.0, '61', 2.0, '61.0');\nDatabase State:\nCREATE TABLE prime_factor (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), prime_factor VARCHAR(1023), number_of_decimal_digits DOUBLE);",
        "Response": "Table: centered_hexagonal_number"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO member () VALUES ('9', 'John Eubanks', 'United States', 'Cello');\nDatabase State:\nCREATE TABLE member (Member_ID VARCHAR(1023), Name VARCHAR(1023), Nationality VARCHAR(1023), Role VARCHAR(1023));",
        "Response": "Table: orchestra_members"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (6, 1996, '125cc', 'Honda', 'RS125', 126.0, 7);\nDatabase State:\nCREATE TABLE repair (repair_ID BIGINT, name VARCHAR(1023), Launch_Date VARCHAR(1023), Notes VARCHAR(1023));",
        "Response": "Table: machine"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO EmailAddress () VALUES (4874, 4069, 'charles26@adventure-works.com', '0D08C7C3-62CD-4FEF-B6E9-E40ADCB06061', '2013-09-11 00:00:00.0');\nDatabase State:\nCREATE TABLE ProductModelProductDescriptionCulture (ProductModelID BIGINT, ProductDescriptionID BIGINT, CultureID VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductProductPhoto (ProductID BIGINT, ProductPhotoID BIGINT, Primary BIGINT, ModifiedDate DATETIME);\nCREATE TABLE Shift (ShiftID BIGINT, Name VARCHAR(1023), StartTime VARCHAR(1023), EndTime VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ShoppingCartItem (ShoppingCartItemID BIGINT, ShoppingCartID VARCHAR(1023), Quantity BIGINT, ProductID BIGINT, DateCreated DATETIME, ModifiedDate DATETIME);\nCREATE TABLE CountryRegion (CountryRegionCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesPersonQuotaHistory (BusinessEntityID BIGINT, QuotaDate DATETIME, SalesQuota DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PersonCreditCard (BusinessEntityID BIGINT, CreditCardID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE SalesReason (SalesReasonID BIGINT, Name VARCHAR(1023), ReasonType VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Document (DocumentNode VARCHAR(1023), DocumentLevel BIGINT, Title VARCHAR(1023), Owner BIGINT, FolderFlag BIGINT, FileName VARCHAR(1023), FileExtension VARCHAR(1023), Revision VARCHAR(1023), ChangeNumber BIGINT, Status BIGINT, DocumentSummary VARCHAR(1023), Document BLOB, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ScrapReason (ScrapReasonID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderDetail (PurchaseOrderID BIGINT, PurchaseOrderDetailID BIGINT, DueDate DATETIME, OrderQty BIGINT, ProductID BIGINT, UnitPrice DOUBLE, LineTotal DOUBLE, ReceivedQty DOUBLE, RejectedQty DOUBLE, StockedQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ProductListPriceHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, ListPrice DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE StateProvince (StateProvinceID BIGINT, StateProvinceCode VARCHAR(1023), CountryRegionCode VARCHAR(1023), IsOnlyStateProvinceFlag BIGINT, Name VARCHAR(1023), TerritoryID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Customer (CustomerID BIGINT, PersonID BIGINT, StoreID BIGINT, TerritoryID BIGINT, AccountNumber VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductReview (ProductReviewID BIGINT, ProductID BIGINT, ReviewerName VARCHAR(1023), ReviewDate DATETIME, EmailAddress VARCHAR(1023), Rating BIGINT, Comments VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityContact (BusinessEntityID BIGINT, PersonID BIGINT, ContactTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductDocument (ProductID BIGINT, DocumentNode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SpecialOfferProduct (SpecialOfferID BIGINT, ProductID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PhoneNumberType (PhoneNumberTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesPerson (BusinessEntityID BIGINT, TerritoryID BIGINT, SalesQuota DOUBLE, Bonus DOUBLE, CommissionPct DOUBLE, SalesYTD DOUBLE, SalesLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Currency (CurrencyCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ShipMethod (ShipMethodID BIGINT, Name VARCHAR(1023), ShipBase DOUBLE, ShipRate DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmployeePayHistory (BusinessEntityID BIGINT, RateChangeDate DATETIME, Rate DOUBLE, PayFrequency BIGINT, ModifiedDate DATETIME);\nCREATE TABLE SpecialOffer (SpecialOfferID BIGINT, Description VARCHAR(1023), DiscountPct DOUBLE, Type VARCHAR(1023), Category VARCHAR(1023), StartDate DATETIME, EndDate DATETIME, MinQty BIGINT, MaxQty BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE TransactionHistory (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE TransactionHistoryArchive (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE EmployeeDepartmentHistory (BusinessEntityID BIGINT, DepartmentID BIGINT, ShiftID BIGINT, StartDate DATE, EndDate DATE, ModifiedDate DATETIME);\nCREATE TABLE Person (BusinessEntityID BIGINT, PersonType VARCHAR(1023), NameStyle BIGINT, Title VARCHAR(1023), FirstName VARCHAR(1023), MiddleName VARCHAR(1023), LastName VARCHAR(1023), Suffix VARCHAR(1023), EmailPromotion BIGINT, AdditionalContactInfo VARCHAR(1023), Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Employee (BusinessEntityID BIGINT, NationalIDNumber VARCHAR(1023), LoginID VARCHAR(1023), OrganizationNode VARCHAR(1023), OrganizationLevel BIGINT, JobTitle VARCHAR(1023), BirthDate DATE, MaritalStatus VARCHAR(1023), Gender VARCHAR(1023), HireDate DATE, SalariedFlag BIGINT, VacationHours BIGINT, SickLeaveHours BIGINT, CurrentFlag BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityAddress (BusinessEntityID BIGINT, AddressID BIGINT, AddressTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Store (BusinessEntityID BIGINT, Name VARCHAR(1023), SalesPersonID BIGINT, Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE WorkOrder (WorkOrderID BIGINT, ProductID BIGINT, OrderQty BIGINT, StockedQty BIGINT, ScrappedQty BIGINT, StartDate DATETIME, EndDate DATETIME, DueDate DATETIME, ScrapReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE Culture (CultureID VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Password (BusinessEntityID BIGINT, PasswordHash VARCHAR(1023), PasswordSalt VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE UnitMeasure (UnitMeasureCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Department (DepartmentID BIGINT, Name VARCHAR(1023), GroupName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeader (SalesOrderID BIGINT, RevisionNumber BIGINT, OrderDate DATETIME, DueDate DATETIME, ShipDate DATETIME, Status BIGINT, OnlineOrderFlag BIGINT, SalesOrderNumber VARCHAR(1023), PurchaseOrderNumber VARCHAR(1023), AccountNumber VARCHAR(1023), CustomerID BIGINT, SalesPersonID BIGINT, TerritoryID BIGINT, BillToAddressID BIGINT, ShipToAddressID BIGINT, ShipMethodID BIGINT, CreditCardID BIGINT, CreditCardApprovalCode VARCHAR(1023), CurrencyRateID BIGINT, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, Comment VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Address (AddressID BIGINT, AddressLine1 VARCHAR(1023), AddressLine2 VARCHAR(1023), City VARCHAR(1023), StateProvinceID BIGINT, PostalCode VARCHAR(1023), SpatialLocation VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Product (ProductID BIGINT, Name VARCHAR(1023), ProductNumber VARCHAR(1023), MakeFlag BIGINT, FinishedGoodsFlag BIGINT, Color VARCHAR(1023), SafetyStockLevel BIGINT, ReorderPoint BIGINT, StandardCost DOUBLE, ListPrice DOUBLE, Size VARCHAR(1023), SizeUnitMeasureCode VARCHAR(1023), WeightUnitMeasureCode VARCHAR(1023), Weight DOUBLE, DaysToManufacture BIGINT, ProductLine VARCHAR(1023), Class VARCHAR(1023), Style VARCHAR(1023), ProductSubcategoryID BIGINT, ProductModelID BIGINT, SellStartDate DATETIME, SellEndDate DATETIME, DiscontinuedDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderDetail (SalesOrderID BIGINT, SalesOrderDetailID BIGINT, CarrierTrackingNumber VARCHAR(1023), OrderQty BIGINT, ProductID BIGINT, SpecialOfferID BIGINT, UnitPrice DOUBLE, UnitPriceDiscount DOUBLE, LineTotal DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeaderSalesReason (SalesOrderID BIGINT, SalesReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE Vendor (BusinessEntityID BIGINT, AccountNumber VARCHAR(1023), Name VARCHAR(1023), CreditRating BIGINT, PreferredVendorStatus BIGINT, ActiveFlag BIGINT, PurchasingWebServiceURL VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductSubcategory (ProductSubcategoryID BIGINT, ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CountryRegionCurrency (CountryRegionCode VARCHAR(1023), CurrencyCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductModel (ProductModelID BIGINT, Name VARCHAR(1023), CatalogDescription VARCHAR(1023), Instructions VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE AddressType (AddressTypeID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductDescription (ProductDescriptionID BIGINT, Description VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ContactType (ContactTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductCostHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, StandardCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE SalesTaxRate (SalesTaxRateID BIGINT, StateProvinceID BIGINT, TaxType BIGINT, TaxRate DOUBLE, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderHeader (PurchaseOrderID BIGINT, RevisionNumber BIGINT, Status BIGINT, EmployeeID BIGINT, VendorID BIGINT, ShipMethodID BIGINT, OrderDate DATETIME, ShipDate DATETIME, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE SalesTerritoryHistory (BusinessEntityID BIGINT, TerritoryID BIGINT, StartDate DATETIME, EndDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTerritory (TerritoryID BIGINT, Name VARCHAR(1023), CountryRegionCode VARCHAR(1023), Group VARCHAR(1023), SalesYTD DOUBLE, SalesLastYear DOUBLE, CostYTD DOUBLE, CostLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductPhoto (ProductPhotoID BIGINT, ThumbNailPhoto BLOB, ThumbnailPhotoFileName VARCHAR(1023), LargePhoto BLOB, LargePhotoFileName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CurrencyRate (CurrencyRateID BIGINT, CurrencyRateDate DATETIME, FromCurrencyCode VARCHAR(1023), ToCurrencyCode VARCHAR(1023), AverageRate DOUBLE, EndOfDayRate DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE CreditCard (CreditCardID BIGINT, CardType VARCHAR(1023), CardNumber VARCHAR(1023), ExpMonth BIGINT, ExpYear BIGINT, ModifiedDate DATETIME);\nCREATE TABLE BillOfMaterials (BillOfMaterialsID BIGINT, ProductAssemblyID BIGINT, ComponentID BIGINT, StartDate DATETIME, EndDate DATETIME, UnitMeasureCode VARCHAR(1023), BOMLevel BIGINT, PerAssemblyQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ProductVendor (ProductID BIGINT, BusinessEntityID BIGINT, AverageLeadTime BIGINT, StandardPrice DOUBLE, LastReceiptCost DOUBLE, LastReceiptDate DATETIME, MinOrderQty BIGINT, MaxOrderQty BIGINT, OnOrderQty BIGINT, UnitMeasureCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductCategory (ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntity (BusinessEntityID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductInventory (ProductID BIGINT, LocationID BIGINT, Shelf VARCHAR(1023), Bin BIGINT, Quantity BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Location (LocationID BIGINT, Name VARCHAR(1023), CostRate DOUBLE, Availability DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE WorkOrderRouting (WorkOrderID BIGINT, ProductID BIGINT, OperationSequence BIGINT, LocationID BIGINT, ScheduledStartDate DATETIME, ScheduledEndDate DATETIME, ActualStartDate DATETIME, ActualEndDate DATETIME, ActualResourceHrs DOUBLE, PlannedCost DOUBLE, ActualCost DOUBLE, ModifiedDate DATETIME);",
        "Response": "Table: EmailAddress"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO pilot () VALUES (4, 'Charles Oakley', 34, 22, 'United Kindom', 'Forward Team', 2001, 'Virginia Union');\nDatabase State:\nCREATE TABLE pilot_record (Record_ID BIGINT, Pilot_ID BIGINT, Aircraft_ID BIGINT, Date VARCHAR(1023));",
        "Response": "Table: pilot"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO TransactionHistory () VALUES (182751, 332, 2418, 1, '2014-03-27 00:00:00.0', 'P', 550, 11.0, '2014-03-27 00:00:00.0');\nDatabase State:\nCREATE TABLE SalesOrderDetail (SalesOrderID BIGINT, SalesOrderDetailID BIGINT, CarrierTrackingNumber VARCHAR(1023), OrderQty BIGINT, ProductID BIGINT, SpecialOfferID BIGINT, UnitPrice DOUBLE, UnitPriceDiscount DOUBLE, LineTotal DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmployeeDepartmentHistory (BusinessEntityID BIGINT, DepartmentID BIGINT, ShiftID BIGINT, StartDate DATE, EndDate DATE, ModifiedDate DATETIME);\nCREATE TABLE TransactionHistoryArchive (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ProductVendor (ProductID BIGINT, BusinessEntityID BIGINT, AverageLeadTime BIGINT, StandardPrice DOUBLE, LastReceiptCost DOUBLE, LastReceiptDate DATETIME, MinOrderQty BIGINT, MaxOrderQty BIGINT, OnOrderQty BIGINT, UnitMeasureCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductProductPhoto (ProductID BIGINT, ProductPhotoID BIGINT, Primary BIGINT, ModifiedDate DATETIME);\nCREATE TABLE Employee (BusinessEntityID BIGINT, NationalIDNumber VARCHAR(1023), LoginID VARCHAR(1023), OrganizationNode VARCHAR(1023), OrganizationLevel BIGINT, JobTitle VARCHAR(1023), BirthDate DATE, MaritalStatus VARCHAR(1023), Gender VARCHAR(1023), HireDate DATE, SalariedFlag BIGINT, VacationHours BIGINT, SickLeaveHours BIGINT, CurrentFlag BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PersonCreditCard (BusinessEntityID BIGINT, CreditCardID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE BillOfMaterials (BillOfMaterialsID BIGINT, ProductAssemblyID BIGINT, ComponentID BIGINT, StartDate DATETIME, EndDate DATETIME, UnitMeasureCode VARCHAR(1023), BOMLevel BIGINT, PerAssemblyQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ShipMethod (ShipMethodID BIGINT, Name VARCHAR(1023), ShipBase DOUBLE, ShipRate DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesPerson (BusinessEntityID BIGINT, TerritoryID BIGINT, SalesQuota DOUBLE, Bonus DOUBLE, CommissionPct DOUBLE, SalesYTD DOUBLE, SalesLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductPhoto (ProductPhotoID BIGINT, ThumbNailPhoto BLOB, ThumbnailPhotoFileName VARCHAR(1023), LargePhoto BLOB, LargePhotoFileName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CreditCard (CreditCardID BIGINT, CardType VARCHAR(1023), CardNumber VARCHAR(1023), ExpMonth BIGINT, ExpYear BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ProductModel (ProductModelID BIGINT, Name VARCHAR(1023), CatalogDescription VARCHAR(1023), Instructions VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE JobCandidate (JobCandidateID BIGINT, BusinessEntityID BIGINT, Resume VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityContact (BusinessEntityID BIGINT, PersonID BIGINT, ContactTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CountryRegionCurrency (CountryRegionCode VARCHAR(1023), CurrencyCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE UnitMeasure (UnitMeasureCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Person (BusinessEntityID BIGINT, PersonType VARCHAR(1023), NameStyle BIGINT, Title VARCHAR(1023), FirstName VARCHAR(1023), MiddleName VARCHAR(1023), LastName VARCHAR(1023), Suffix VARCHAR(1023), EmailPromotion BIGINT, AdditionalContactInfo VARCHAR(1023), Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Department (DepartmentID BIGINT, Name VARCHAR(1023), GroupName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SpecialOffer (SpecialOfferID BIGINT, Description VARCHAR(1023), DiscountPct DOUBLE, Type VARCHAR(1023), Category VARCHAR(1023), StartDate DATETIME, EndDate DATETIME, MinQty BIGINT, MaxQty BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesReason (SalesReasonID BIGINT, Name VARCHAR(1023), ReasonType VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Password (BusinessEntityID BIGINT, PasswordHash VARCHAR(1023), PasswordSalt VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Shift (ShiftID BIGINT, Name VARCHAR(1023), StartTime VARCHAR(1023), EndTime VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Vendor (BusinessEntityID BIGINT, AccountNumber VARCHAR(1023), Name VARCHAR(1023), CreditRating BIGINT, PreferredVendorStatus BIGINT, ActiveFlag BIGINT, PurchasingWebServiceURL VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductReview (ProductReviewID BIGINT, ProductID BIGINT, ReviewerName VARCHAR(1023), ReviewDate DATETIME, EmailAddress VARCHAR(1023), Rating BIGINT, Comments VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmployeePayHistory (BusinessEntityID BIGINT, RateChangeDate DATETIME, Rate DOUBLE, PayFrequency BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ScrapReason (ScrapReasonID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderHeader (PurchaseOrderID BIGINT, RevisionNumber BIGINT, Status BIGINT, EmployeeID BIGINT, VendorID BIGINT, ShipMethodID BIGINT, OrderDate DATETIME, ShipDate DATETIME, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE SpecialOfferProduct (SpecialOfferID BIGINT, ProductID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);",
        "Response": "Table: TransactionHistory"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (2, 9.69999999999999928, 9.625, 9.625, 9.65000000000000035, 9.58699999999999975, 9.73700000000000009, 57.92399999999999949);\nDatabase State:\nCREATE TABLE gymnast (Gymnast_ID BIGINT, Floor_Exercise_Points DOUBLE, Pommel_Horse_Points DOUBLE, Rings_Points DOUBLE, Vault_Points DOUBLE, Parallel_Bars_Points DOUBLE, Horizontal_Bar_Points DOUBLE, Total_Points DOUBLE);",
        "Response": "Table: Gymnastics_Scores"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO prime_factor () VALUES ('31', 'natural number', 'natural number', '31 (number)', 31.0, '31', '31', 2.0);\nDatabase State:\nCREATE TABLE prime_factor (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), prime_factor VARCHAR(1023), number_of_decimal_digits DOUBLE);",
        "Response": "Table: Prime_Numbers"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO SalesOrderHeader () VALUES (57625, 8, '2013-10-07 00:00:00.0', '2013-10-19 00:00:00.0', '2013-10-14 00:00:00.0', 5, 1, 'SO57625', NULL, '10-4030-019948', 19948, NULL, 9, 21466, 21466, 1, 2771, '1238140Vi14426', 9830, 2443.34999999999991, 195.4679999999999894, 61.08379999999999655, 2699.901800000000093, NULL, 'EC247C2E-2B66-40B2-B60F-63AA6D0B01D0', '2013-10-14 00:00:00.0');\nDatabase State:\nCREATE TABLE SalesTaxRate (SalesTaxRateID BIGINT, StateProvinceID BIGINT, TaxType BIGINT, TaxRate DOUBLE, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Product (ProductID BIGINT, Name VARCHAR(1023), ProductNumber VARCHAR(1023), MakeFlag BIGINT, FinishedGoodsFlag BIGINT, Color VARCHAR(1023), SafetyStockLevel BIGINT, ReorderPoint BIGINT, StandardCost DOUBLE, ListPrice DOUBLE, Size VARCHAR(1023), SizeUnitMeasureCode VARCHAR(1023), WeightUnitMeasureCode VARCHAR(1023), Weight DOUBLE, DaysToManufacture BIGINT, ProductLine VARCHAR(1023), Class VARCHAR(1023), Style VARCHAR(1023), ProductSubcategoryID BIGINT, ProductModelID BIGINT, SellStartDate DATETIME, SellEndDate DATETIME, DiscontinuedDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderHeader (PurchaseOrderID BIGINT, RevisionNumber BIGINT, Status BIGINT, EmployeeID BIGINT, VendorID BIGINT, ShipMethodID BIGINT, OrderDate DATETIME, ShipDate DATETIME, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ProductModel (ProductModelID BIGINT, Name VARCHAR(1023), CatalogDescription VARCHAR(1023), Instructions VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductCostHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, StandardCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeader (SalesOrderID BIGINT, RevisionNumber BIGINT, OrderDate DATETIME, DueDate DATETIME, ShipDate DATETIME, Status BIGINT, OnlineOrderFlag BIGINT, SalesOrderNumber VARCHAR(1023), PurchaseOrderNumber VARCHAR(1023), AccountNumber VARCHAR(1023), CustomerID BIGINT, SalesPersonID BIGINT, TerritoryID BIGINT, BillToAddressID BIGINT, ShipToAddressID BIGINT, ShipMethodID BIGINT, CreditCardID BIGINT, CreditCardApprovalCode VARCHAR(1023), CurrencyRateID BIGINT, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, Comment VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductReview (ProductReviewID BIGINT, ProductID BIGINT, ReviewerName VARCHAR(1023), ReviewDate DATETIME, EmailAddress VARCHAR(1023), Rating BIGINT, Comments VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Shift (ShiftID BIGINT, Name VARCHAR(1023), StartTime VARCHAR(1023), EndTime VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductPhoto (ProductPhotoID BIGINT, ThumbNailPhoto BLOB, ThumbnailPhotoFileName VARCHAR(1023), LargePhoto BLOB, LargePhotoFileName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesPersonQuotaHistory (BusinessEntityID BIGINT, QuotaDate DATETIME, SalesQuota DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmployeeDepartmentHistory (BusinessEntityID BIGINT, DepartmentID BIGINT, ShiftID BIGINT, StartDate DATE, EndDate DATE, ModifiedDate DATETIME);\nCREATE TABLE ProductListPriceHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, ListPrice DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE WorkOrderRouting (WorkOrderID BIGINT, ProductID BIGINT, OperationSequence BIGINT, LocationID BIGINT, ScheduledStartDate DATETIME, ScheduledEndDate DATETIME, ActualStartDate DATETIME, ActualEndDate DATETIME, ActualResourceHrs DOUBLE, PlannedCost DOUBLE, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE StateProvince (StateProvinceID BIGINT, StateProvinceCode VARCHAR(1023), CountryRegionCode VARCHAR(1023), IsOnlyStateProvinceFlag BIGINT, Name VARCHAR(1023), TerritoryID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmailAddress (BusinessEntityID BIGINT, EmailAddressID BIGINT, EmailAddress VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ScrapReason (ScrapReasonID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntity (BusinessEntityID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityContact (BusinessEntityID BIGINT, PersonID BIGINT, ContactTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Currency (CurrencyCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderDetail (SalesOrderID BIGINT, SalesOrderDetailID BIGINT, CarrierTrackingNumber VARCHAR(1023), OrderQty BIGINT, ProductID BIGINT, SpecialOfferID BIGINT, UnitPrice DOUBLE, UnitPriceDiscount DOUBLE, LineTotal DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE JobCandidate (JobCandidateID BIGINT, BusinessEntityID BIGINT, Resume VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductSubcategory (ProductSubcategoryID BIGINT, ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CurrencyRate (CurrencyRateID BIGINT, CurrencyRateDate DATETIME, FromCurrencyCode VARCHAR(1023), ToCurrencyCode VARCHAR(1023), AverageRate DOUBLE, EndOfDayRate DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Store (BusinessEntityID BIGINT, Name VARCHAR(1023), SalesPersonID BIGINT, Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductCategory (ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SpecialOffer (SpecialOfferID BIGINT, Description VARCHAR(1023), DiscountPct DOUBLE, Type VARCHAR(1023), Category VARCHAR(1023), StartDate DATETIME, EndDate DATETIME, MinQty BIGINT, MaxQty BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Location (LocationID BIGINT, Name VARCHAR(1023), CostRate DOUBLE, Availability DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Vendor (BusinessEntityID BIGINT, AccountNumber VARCHAR(1023), Name VARCHAR(1023), CreditRating BIGINT, PreferredVendorStatus BIGINT, ActiveFlag BIGINT, PurchasingWebServiceURL VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CreditCard (CreditCardID BIGINT, CardType VARCHAR(1023), CardNumber VARCHAR(1023), ExpMonth BIGINT, ExpYear BIGINT, ModifiedDate DATETIME);\nCREATE TABLE CountryRegionCurrency (CountryRegionCode VARCHAR(1023), CurrencyCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductVendor (ProductID BIGINT, BusinessEntityID BIGINT, AverageLeadTime BIGINT, StandardPrice DOUBLE, LastReceiptCost DOUBLE, LastReceiptDate DATETIME, MinOrderQty BIGINT, MaxOrderQty BIGINT, OnOrderQty BIGINT, UnitMeasureCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductInventory (ProductID BIGINT, LocationID BIGINT, Shelf VARCHAR(1023), Bin BIGINT, Quantity BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE TransactionHistory (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Person (BusinessEntityID BIGINT, PersonType VARCHAR(1023), NameStyle BIGINT, Title VARCHAR(1023), FirstName VARCHAR(1023), MiddleName VARCHAR(1023), LastName VARCHAR(1023), Suffix VARCHAR(1023), EmailPromotion BIGINT, AdditionalContactInfo VARCHAR(1023), Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductDescription (ProductDescriptionID BIGINT, Description VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductDocument (ProductID BIGINT, DocumentNode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE AddressType (AddressTypeID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityAddress (BusinessEntityID BIGINT, AddressID BIGINT, AddressTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PhoneNumberType (PhoneNumberTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SpecialOfferProduct (SpecialOfferID BIGINT, ProductID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BillOfMaterials (BillOfMaterialsID BIGINT, ProductAssemblyID BIGINT, ComponentID BIGINT, StartDate DATETIME, EndDate DATETIME, UnitMeasureCode VARCHAR(1023), BOMLevel BIGINT, PerAssemblyQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ShoppingCartItem (ShoppingCartItemID BIGINT, ShoppingCartID VARCHAR(1023), Quantity BIGINT, ProductID BIGINT, DateCreated DATETIME, ModifiedDate DATETIME);\nCREATE TABLE CountryRegion (CountryRegionCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Document (DocumentNode VARCHAR(1023), DocumentLevel BIGINT, Title VARCHAR(1023), Owner BIGINT, FolderFlag BIGINT, FileName VARCHAR(1023), FileExtension VARCHAR(1023), Revision VARCHAR(1023), ChangeNumber BIGINT, Status BIGINT, DocumentSummary VARCHAR(1023), Document BLOB, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE UnitMeasure (UnitMeasureCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Customer (CustomerID BIGINT, PersonID BIGINT, StoreID BIGINT, TerritoryID BIGINT, AccountNumber VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Employee (BusinessEntityID BIGINT, NationalIDNumber VARCHAR(1023), LoginID VARCHAR(1023), OrganizationNode VARCHAR(1023), OrganizationLevel BIGINT, JobTitle VARCHAR(1023), BirthDate DATE, MaritalStatus VARCHAR(1023), Gender VARCHAR(1023), HireDate DATE, SalariedFlag BIGINT, VacationHours BIGINT, SickLeaveHours BIGINT, CurrentFlag BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Password (BusinessEntityID BIGINT, PasswordHash VARCHAR(1023), PasswordSalt VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Department (DepartmentID BIGINT, Name VARCHAR(1023), GroupName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTerritory (TerritoryID BIGINT, Name VARCHAR(1023), CountryRegionCode VARCHAR(1023), Group VARCHAR(1023), SalesYTD DOUBLE, SalesLastYear DOUBLE, CostYTD DOUBLE, CostLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductProductPhoto (ProductID BIGINT, ProductPhotoID BIGINT, Primary BIGINT, ModifiedDate DATETIME);\nCREATE TABLE PersonCreditCard (BusinessEntityID BIGINT, CreditCardID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ShipMethod (ShipMethodID BIGINT, Name VARCHAR(1023), ShipBase DOUBLE, ShipRate DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesReason (SalesReasonID BIGINT, Name VARCHAR(1023), ReasonType VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE TransactionHistoryArchive (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeaderSalesReason (SalesOrderID BIGINT, SalesReasonID BIGINT, ModifiedDate DATETIME);",
        "Response": "Table: SalesOrderHeader"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (173124, 2012, 'B', 'B', '4y other', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');\nDatabase State:\nCREATE TABLE state_sector_details (stateid BIGINT, state VARCHAR(1023), state_post VARCHAR(1023), level VARCHAR(1023), control VARCHAR(1023), schools_count BIGINT, counted_pct VARCHAR(1023), awards_per_state_value VARCHAR(1023), awards_per_natl_value DOUBLE, exp_award_state_value VARCHAR(1023), exp_award_natl_value BIGINT, state_appr_value VARCHAR(1023), state_appr_rank VARCHAR(1023), grad_rate_rank VARCHAR(1023), awards_per_rank VARCHAR(1023));\nCREATE TABLE state_sector_grads (stateid BIGINT, state VARCHAR(1023), state_abbr VARCHAR(1023), control VARCHAR(1023), level VARCHAR(1023), year BIGINT, gender VARCHAR(1023), race VARCHAR(1023), cohort VARCHAR(1023), grad_cohort VARCHAR(1023), grad_100 VARCHAR(1023), grad_150 VARCHAR(1023), grad_100_rate VARCHAR(1023), grad_150_rate VARCHAR(1023), grad_cohort_ct BIGINT);\nCREATE TABLE institution_details (unitid BIGINT, chronname VARCHAR(1023), city VARCHAR(1023), state VARCHAR(1023), level VARCHAR(1023), control VARCHAR(1023), basic VARCHAR(1023), hbcu VARCHAR(1023), flagship VARCHAR(1023), long_x DOUBLE, lat_y DOUBLE, site VARCHAR(1023), student_count BIGINT, awards_per_value DOUBLE, awards_per_state_value DOUBLE, awards_per_natl_value DOUBLE, exp_award_value BIGINT, exp_award_state_value BIGINT, exp_award_natl_value BIGINT, exp_award_percentile BIGINT, ft_pct DOUBLE, fte_value BIGINT, fte_percentile BIGINT, med_sat_value VARCHAR(1023), med_sat_percentile VARCHAR(1023), aid_value BIGINT, aid_percentile BIGINT, endow_value VARCHAR(1023), endow_percentile VARCHAR(1023), grad_100_value DOUBLE, grad_100_percentile BIGINT, grad_150_value DOUBLE, grad_150_percentile BIGINT, pell_value DOUBLE, pell_percentile BIGINT, retain_value DOUBLE, retain_percentile BIGINT, ft_fac_value DOUBLE, ft_fac_percentile BIGINT, vsa_year VARCHAR(1023), vsa_grad_after4_first VARCHAR(1023), vsa_grad_elsewhere_after4_first VARCHAR(1023), vsa_enroll_after4_first VARCHAR(1023), vsa_enroll_elsewhere_after4_first VARCHAR(1023), vsa_grad_after6_first VARCHAR(1023), vsa_grad_elsewhere_after6_first VARCHAR(1023), vsa_enroll_after6_first VARCHAR(1023), vsa_enroll_elsewhere_after6_first VARCHAR(1023), vsa_grad_after4_transfer VARCHAR(1023), vsa_grad_elsewhere_after4_transfer VARCHAR(1023), vsa_enroll_after4_transfer VARCHAR(1023), vsa_enroll_elsewhere_after4_transfer VARCHAR(1023), vsa_grad_after6_transfer VARCHAR(1023), vsa_grad_elsewhere_after6_transfer VARCHAR(1023), vsa_enroll_after6_transfer VARCHAR(1023), vsa_enroll_elsewhere_after6_transfer VARCHAR(1023), similar VARCHAR(1023), state_sector_ct BIGINT, carnegie_ct BIGINT, counted_pct VARCHAR(1023), nicknames VARCHAR(1023), cohort_size BIGINT);",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO aircraft () VALUES (5, 2002, 'Gillig', 'Advantage (Low Floor)', '482-492 (11)', 'Cummins ISL Allison WB-400R', 'Diesel');\nDatabase State:\nCREATE TABLE pilot (Pilot_ID BIGINT, Pilot_name VARCHAR(1023), Rank BIGINT, Age BIGINT, Nationality VARCHAR(1023), Position VARCHAR(1023), Join_Year BIGINT, Team VARCHAR(1023));\nCREATE TABLE aircraft (Aircraft_ID BIGINT, Order_Year BIGINT, Manufacturer VARCHAR(1023), Model VARCHAR(1023), Fleet_Series VARCHAR(1023), Powertrain VARCHAR(1023), Fuel_Propulsion VARCHAR(1023));\nCREATE TABLE pilot_record (Record_ID BIGINT, Pilot_ID BIGINT, Aircraft_ID BIGINT, Date VARCHAR(1023));",
        "Response": "Table: aircraft"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Ministry of Tourism (Uruguay)', 'government ministry promoting tourism to Uruguay', 'tourism ministry', 'Uruguay', 'Minister of Tourism (Uruguay)', '+1986-12-24T00:00:00Z', 'Montevideo', 'https://www.gub.uy/ministerio-turismo/', 'Uruguay', '/g/1237d753');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: organization"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO user_reviews () VALUES ('Cooking Fever', 'Highly addictive game! Gets harder harder get training!', 'Negative', '-0.18125', '0.325');\nDatabase State:\nCREATE TABLE user_reviews (App VARCHAR(1023), Translated_Review VARCHAR(1023), Sentiment VARCHAR(1023), Sentiment_Polarity VARCHAR(1023), Sentiment_Subjectivity VARCHAR(1023));\nCREATE TABLE playstore (App VARCHAR(1023), Category VARCHAR(1023), Rating DOUBLE, Reviews BIGINT, Size VARCHAR(1023), Installs VARCHAR(1023), Type VARCHAR(1023), Price VARCHAR(1023), Content_Rating VARCHAR(1023), Genres VARCHAR(1023));",
        "Response": "Table: AppReviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('human chromosome 21', 'human chromosome', 'autosome', 'human genome', 'human chromosome 20', 'human chromosome 22', '/m/08qwvm', 'Human chromosome 21', 'NC_000021.9', 'Homo sapiens', 'chromosome', '21', 46709983.0, 'nan', 'D002891', 'A11.284.187.520.300.505.510', '137555145.0', 'C137555145');\nDatabase State:\nCREATE TABLE frameshift_truncation (label VARCHAR(1023), description VARCHAR(1023), biological_variant_of VARCHAR(1023), civic_variant_id VARCHAR(1023), chromosome VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), instance_of VARCHAR(1023), hgvs_nomenclature VARCHAR(1023));\nCREATE TABLE biological_variant_of (label VARCHAR(1023), description VARCHAR(1023), entrez_gene_id VARCHAR(1023), hgnc_gene_symbol VARCHAR(1023), hgnc_id VARCHAR(1023), omim_id VARCHAR(1023), subclass_of VARCHAR(1023), ensembl_gene_id VARCHAR(1023), homologene_id VARCHAR(1023), ortholog VARCHAR(1023), refseq_rna_id VARCHAR(1023), ensembl_transcript_id VARCHAR(1023), image VARCHAR(1023), encodes VARCHAR(1023), genetic_association VARCHAR(1023), found_in_taxon VARCHAR(1023), exact_match VARCHAR(1023), chromosome VARCHAR(1023), strand_orientation VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), gene_atlas_image VARCHAR(1023), instance_of VARCHAR(1023), cytogenetic_location VARCHAR(1023), expressed_in VARCHAR(1023), civic_gene_id VARCHAR(1023));\nCREATE TABLE orthology (label VARCHAR(1023), description VARCHAR(1023), entrez_gene_id VARCHAR(1023), subclass_of VARCHAR(1023), ensembl_gene_id VARCHAR(1023), homologene_id VARCHAR(1023), found_in_taxon VARCHAR(1023), refseq_rna_id VARCHAR(1023), ensembl_transcript_id VARCHAR(1023), chromosome VARCHAR(1023), encodes VARCHAR(1023), mouse_genome_informatics_id VARCHAR(1023), ortholog VARCHAR(1023), exact_match VARCHAR(1023), mgi_gene_symbol VARCHAR(1023), strand_orientation VARCHAR(1023), instance_of VARCHAR(1023), cytogenetic_location VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), expressed_in VARCHAR(1023));",
        "Response": "Table: chromosome"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_REL () VALUES (2401900, 137, 6, 13);\nDatabase State:\nCREATE TABLE ATT_CLASSES (ATT_CLASS_ID BIGINT, ATT_CLASS VARCHAR(1023));\nCREATE TABLE IMG_OBJ (IMG_ID BIGINT, OBJ_SAMPLE_ID BIGINT, OBJ_CLASS_ID BIGINT, X BIGINT, Y BIGINT, W BIGINT, H BIGINT);\nCREATE TABLE IMG_OBJ_ATT (IMG_ID BIGINT, ATT_CLASS_ID BIGINT, OBJ_SAMPLE_ID BIGINT);\nCREATE TABLE OBJ_CLASSES (OBJ_CLASS_ID BIGINT, OBJ_CLASS VARCHAR(1023));\nCREATE TABLE IMG_REL (IMG_ID BIGINT, PRED_CLASS_ID BIGINT, OBJ1_SAMPLE_ID BIGINT, OBJ2_SAMPLE_ID BIGINT);",
        "Response": "Table: IMG_REL"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO observations () VALUES ('2015-11-26', '239f2aeb-5c0d-4884-9e68-a6a2d6307b9a', 'a7ed8738-0284-43ae-a0b1-4903db8ef40f', '39156-5', 'Body Mass Index', 45.53999999999999915, 'kg/m2');\nDatabase State:\nCREATE TABLE all_prevalences (ITEM VARCHAR(1023), POPULATION_TYPE VARCHAR(1023), OCCURRENCES BIGINT, POPULATION_COUNT BIGINT, PREVALENCE_RATE DOUBLE, PREVALENCE_PERCENTAGE DOUBLE);\nCREATE TABLE patients (patient VARCHAR(1023), birthdate DATE, deathdate DATE, ssn VARCHAR(1023), drivers VARCHAR(1023), passport VARCHAR(1023), prefix VARCHAR(1023), first VARCHAR(1023), last VARCHAR(1023), suffix VARCHAR(1023), maiden VARCHAR(1023), marital VARCHAR(1023), race VARCHAR(1023), ethnicity VARCHAR(1023), gender VARCHAR(1023), birthplace VARCHAR(1023), address VARCHAR(1023));\nCREATE TABLE encounters (ID VARCHAR(1023), DATE DATE, PATIENT VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE observations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE VARCHAR(1023), DESCRIPTION VARCHAR(1023), VALUE DOUBLE, UNITS VARCHAR(1023));\nCREATE TABLE immunizations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE allergies (START VARCHAR(1023), STOP VARCHAR(1023), PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE claims (ID VARCHAR(1023), PATIENT VARCHAR(1023), BILLABLEPERIOD DATE, ORGANIZATION VARCHAR(1023), ENCOUNTER VARCHAR(1023), DIAGNOSIS VARCHAR(1023), TOTAL BIGINT);\nCREATE TABLE careplans (ID VARCHAR(1023), START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE DOUBLE, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));",
        "Response": "Table: observations"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO head_of_state () VALUES ('Carl XVI Gustaf of Sweden', 'current king of Sweden (1973\u2013)', '66442200', 'Carl XVI Gustaf', 'n79043923', '119168014', '+1946-04-30T00:00:00Z', 'Haga Palace', 'nan', 'Sweden', 'human', 'Monarch of Sweden', 'naval officer', 'Carl', 'Crafoord Prize D81 9141 (42282165922) (cropped).jpg', 'Swedish', 'Carl XVI Gustaf', 'Queen Silvia of Sweden', 'Uppsala University', '0000 0000 7860 7524', 'male', 'lccn-n79043923', '671.0', 'Q45068');\nDatabase State:\nCREATE TABLE place_of_birth (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), coordinate_location VARCHAR(1023), topics_main_category VARCHAR(1023), freebase_id VARCHAR(1023), image VARCHAR(1023), geonames_id VARCHAR(1023), elevation_above_sea_level DOUBLE, category_of_associated_people VARCHAR(1023), official_website VARCHAR(1023), area DOUBLE, population DOUBLE, whos_on_first_id VARCHAR(1023));\nCREATE TABLE twin_town (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), coordinate_location VARCHAR(1023), freebase_id VARCHAR(1023), twinned_administrative_body VARCHAR(1023), geonames_id VARCHAR(1023), instance_of VARCHAR(1023), topics_main_category VARCHAR(1023), capital_of VARCHAR(1023), viaf_id VARCHAR(1023), elevation_above_sea_level DOUBLE, commons_category VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), quora_topic_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), located_in_time_zone VARCHAR(1023), image VARCHAR(1023), category_of_associated_people VARCHAR(1023), area DOUBLE, library_of_congress_authority_id VARCHAR(1023), coat_of_arms_image VARCHAR(1023), whos_on_first_id VARCHAR(1023), population DOUBLE, postal_code VARCHAR(1023), official_website VARCHAR(1023), worldcat_identities_id VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), page_banner VARCHAR(1023), head_of_government VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), gnd_id VARCHAR(1023), commons_gallery VARCHAR(1023), facebook_places_id VARCHAR(1023), native_label VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), category_for_maps VARCHAR(1023), factgrid_item_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), online_pwn_encyclopedia_id VARCHAR(1023), local_dialing_code VARCHAR(1023), nkcr_aut_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023));\nCREATE TABLE head_of_state (label VARCHAR(1023), description VARCHAR(1023), viaf_id VARCHAR(1023), commons_category VARCHAR(1023), library_of_congress_authority_id VARCHAR(1023), gnd_id VARCHAR(1023), date_of_birth VARCHAR(1023), place_of_birth VARCHAR(1023), member_of_political_party VARCHAR(1023), country_of_citizenship VARCHAR(1023), instance_of VARCHAR(1023), position_held VARCHAR(1023), occupation VARCHAR(1023), given_name VARCHAR(1023), image VARCHAR(1023), languages_spoken_written_or_signed VARCHAR(1023), name_in_native_language VARCHAR(1023), spouse VARCHAR(1023), educated_at VARCHAR(1023), isni VARCHAR(1023), sex_or_gender VARCHAR(1023), worldcat_identities_id VARCHAR(1023), munzinger_person_id VARCHAR(1023), opensanctions_id VARCHAR(1023));\nCREATE TABLE capital_city (label VARCHAR(1023), description VARCHAR(1023), twinned_administrative_body VARCHAR(1023), commons_category VARCHAR(1023), country VARCHAR(1023), image VARCHAR(1023), postal_code VARCHAR(1023), located_in_time_zone VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), coordinate_location VARCHAR(1023), page_banner VARCHAR(1023), topics_main_category VARCHAR(1023), instance_of VARCHAR(1023), freebase_id VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), gnd_id VARCHAR(1023), viaf_id VARCHAR(1023), geonames_id VARCHAR(1023), official_website VARCHAR(1023), category_of_associated_people VARCHAR(1023), capital_of VARCHAR(1023), area DOUBLE, population DOUBLE, elevation_above_sea_level DOUBLE, library_of_congress_authority_id VARCHAR(1023), native_label VARCHAR(1023), official_name VARCHAR(1023), great_russian_encyclopedia_online_id VARCHAR(1023), whos_on_first_id VARCHAR(1023), category_for_maps VARCHAR(1023), nkcr_aut_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), online_pwn_encyclopedia_id VARCHAR(1023));",
        "Response": "Table: head_of_state"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO repair_assignment () VALUES (1, 4, 7);\nDatabase State:\nCREATE TABLE machine (Machine_ID BIGINT, Making_Year BIGINT, Class VARCHAR(1023), Team VARCHAR(1023), Machine_series VARCHAR(1023), value_points DOUBLE, quality_rank BIGINT);\nCREATE TABLE repair (repair_ID BIGINT, name VARCHAR(1023), Launch_Date VARCHAR(1023), Notes VARCHAR(1023));",
        "Response": "Table: repair_assignment"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO SalesOrderDetail () VALUES (68821, 100782, NULL, 1, 707, 1, 35.0, 0.0, 35.0, '9AF9AAC2-B9B0-42F7-854C-755A5A53C11D', '2014-03-23 00:00:00.0');\nDatabase State:\nCREATE TABLE Culture (CultureID VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductSubcategory (ProductSubcategoryID BIGINT, ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Department (DepartmentID BIGINT, Name VARCHAR(1023), GroupName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Customer (CustomerID BIGINT, PersonID BIGINT, StoreID BIGINT, TerritoryID BIGINT, AccountNumber VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntity (BusinessEntityID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTerritory (TerritoryID BIGINT, Name VARCHAR(1023), CountryRegionCode VARCHAR(1023), Group VARCHAR(1023), SalesYTD DOUBLE, SalesLastYear DOUBLE, CostYTD DOUBLE, CostLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE UnitMeasure (UnitMeasureCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderHeader (PurchaseOrderID BIGINT, RevisionNumber BIGINT, Status BIGINT, EmployeeID BIGINT, VendorID BIGINT, ShipMethodID BIGINT, OrderDate DATETIME, ShipDate DATETIME, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Currency (CurrencyCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesReason (SalesReasonID BIGINT, Name VARCHAR(1023), ReasonType VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Employee (BusinessEntityID BIGINT, NationalIDNumber VARCHAR(1023), LoginID VARCHAR(1023), OrganizationNode VARCHAR(1023), OrganizationLevel BIGINT, JobTitle VARCHAR(1023), BirthDate DATE, MaritalStatus VARCHAR(1023), Gender VARCHAR(1023), HireDate DATE, SalariedFlag BIGINT, VacationHours BIGINT, SickLeaveHours BIGINT, CurrentFlag BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityContact (BusinessEntityID BIGINT, PersonID BIGINT, ContactTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderDetail (PurchaseOrderID BIGINT, PurchaseOrderDetailID BIGINT, DueDate DATETIME, OrderQty BIGINT, ProductID BIGINT, UnitPrice DOUBLE, LineTotal DOUBLE, ReceivedQty DOUBLE, RejectedQty DOUBLE, StockedQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityAddress (BusinessEntityID BIGINT, AddressID BIGINT, AddressTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductPhoto (ProductPhotoID BIGINT, ThumbNailPhoto BLOB, ThumbnailPhotoFileName VARCHAR(1023), LargePhoto BLOB, LargePhotoFileName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductProductPhoto (ProductID BIGINT, ProductPhotoID BIGINT, Primary BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ContactType (ContactTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BillOfMaterials (BillOfMaterialsID BIGINT, ProductAssemblyID BIGINT, ComponentID BIGINT, StartDate DATETIME, EndDate DATETIME, UnitMeasureCode VARCHAR(1023), BOMLevel BIGINT, PerAssemblyQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE AddressType (AddressTypeID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PhoneNumberType (PhoneNumberTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Product (ProductID BIGINT, Name VARCHAR(1023), ProductNumber VARCHAR(1023), MakeFlag BIGINT, FinishedGoodsFlag BIGINT, Color VARCHAR(1023), SafetyStockLevel BIGINT, ReorderPoint BIGINT, StandardCost DOUBLE, ListPrice DOUBLE, Size VARCHAR(1023), SizeUnitMeasureCode VARCHAR(1023), WeightUnitMeasureCode VARCHAR(1023), Weight DOUBLE, DaysToManufacture BIGINT, ProductLine VARCHAR(1023), Class VARCHAR(1023), Style VARCHAR(1023), ProductSubcategoryID BIGINT, ProductModelID BIGINT, SellStartDate DATETIME, SellEndDate DATETIME, DiscontinuedDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesPersonQuotaHistory (BusinessEntityID BIGINT, QuotaDate DATETIME, SalesQuota DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CountryRegionCurrency (CountryRegionCode VARCHAR(1023), CurrencyCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeader (SalesOrderID BIGINT, RevisionNumber BIGINT, OrderDate DATETIME, DueDate DATETIME, ShipDate DATETIME, Status BIGINT, OnlineOrderFlag BIGINT, SalesOrderNumber VARCHAR(1023), PurchaseOrderNumber VARCHAR(1023), AccountNumber VARCHAR(1023), CustomerID BIGINT, SalesPersonID BIGINT, TerritoryID BIGINT, BillToAddressID BIGINT, ShipToAddressID BIGINT, ShipMethodID BIGINT, CreditCardID BIGINT, CreditCardApprovalCode VARCHAR(1023), CurrencyRateID BIGINT, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, Comment VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmployeeDepartmentHistory (BusinessEntityID BIGINT, DepartmentID BIGINT, ShiftID BIGINT, StartDate DATE, EndDate DATE, ModifiedDate DATETIME);\nCREATE TABLE StateProvince (StateProvinceID BIGINT, StateProvinceCode VARCHAR(1023), CountryRegionCode VARCHAR(1023), IsOnlyStateProvinceFlag BIGINT, Name VARCHAR(1023), TerritoryID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Vendor (BusinessEntityID BIGINT, AccountNumber VARCHAR(1023), Name VARCHAR(1023), CreditRating BIGINT, PreferredVendorStatus BIGINT, ActiveFlag BIGINT, PurchasingWebServiceURL VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CurrencyRate (CurrencyRateID BIGINT, CurrencyRateDate DATETIME, FromCurrencyCode VARCHAR(1023), ToCurrencyCode VARCHAR(1023), AverageRate DOUBLE, EndOfDayRate DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Address (AddressID BIGINT, AddressLine1 VARCHAR(1023), AddressLine2 VARCHAR(1023), City VARCHAR(1023), StateProvinceID BIGINT, PostalCode VARCHAR(1023), SpatialLocation VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductModelProductDescriptionCulture (ProductModelID BIGINT, ProductDescriptionID BIGINT, CultureID VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE WorkOrderRouting (WorkOrderID BIGINT, ProductID BIGINT, OperationSequence BIGINT, LocationID BIGINT, ScheduledStartDate DATETIME, ScheduledEndDate DATETIME, ActualStartDate DATETIME, ActualEndDate DATETIME, ActualResourceHrs DOUBLE, PlannedCost DOUBLE, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Person (BusinessEntityID BIGINT, PersonType VARCHAR(1023), NameStyle BIGINT, Title VARCHAR(1023), FirstName VARCHAR(1023), MiddleName VARCHAR(1023), LastName VARCHAR(1023), Suffix VARCHAR(1023), EmailPromotion BIGINT, AdditionalContactInfo VARCHAR(1023), Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Store (BusinessEntityID BIGINT, Name VARCHAR(1023), SalesPersonID BIGINT, Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Location (LocationID BIGINT, Name VARCHAR(1023), CostRate DOUBLE, Availability DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE SalesPerson (BusinessEntityID BIGINT, TerritoryID BIGINT, SalesQuota DOUBLE, Bonus DOUBLE, CommissionPct DOUBLE, SalesYTD DOUBLE, SalesLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeaderSalesReason (SalesOrderID BIGINT, SalesReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ProductVendor (ProductID BIGINT, BusinessEntityID BIGINT, AverageLeadTime BIGINT, StandardPrice DOUBLE, LastReceiptCost DOUBLE, LastReceiptDate DATETIME, MinOrderQty BIGINT, MaxOrderQty BIGINT, OnOrderQty BIGINT, UnitMeasureCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PersonCreditCard (BusinessEntityID BIGINT, CreditCardID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ScrapReason (ScrapReasonID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductCostHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, StandardCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ShipMethod (ShipMethodID BIGINT, Name VARCHAR(1023), ShipBase DOUBLE, ShipRate DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ShoppingCartItem (ShoppingCartItemID BIGINT, ShoppingCartID VARCHAR(1023), Quantity BIGINT, ProductID BIGINT, DateCreated DATETIME, ModifiedDate DATETIME);\nCREATE TABLE Password (BusinessEntityID BIGINT, PasswordHash VARCHAR(1023), PasswordSalt VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);",
        "Response": "Table: SalesOrderDetail"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO follows () VALUES ('971', 'year', '971', 'year', '970s', '970', '972', 'Category:971', '+0971-01-01T00:00:00Z', 'list of state leaders in 971');\nDatabase State:\nCREATE TABLE follows (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));",
        "Response": "Table: follows"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (24744, 827, 1, 1, 0, '2012-11-10 00:00:00.0', '2012-12-04 00:00:00.0', '2012-11-21 00:00:00.0', NULL, '2012-12-04 00:00:00.0');\nDatabase State:\nCREATE TABLE SalesPersonQuotaHistory (BusinessEntityID BIGINT, QuotaDate DATETIME, SalesQuota DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Address (AddressID BIGINT, AddressLine1 VARCHAR(1023), AddressLine2 VARCHAR(1023), City VARCHAR(1023), StateProvinceID BIGINT, PostalCode VARCHAR(1023), SpatialLocation VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductReview (ProductReviewID BIGINT, ProductID BIGINT, ReviewerName VARCHAR(1023), ReviewDate DATETIME, EmailAddress VARCHAR(1023), Rating BIGINT, Comments VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesPerson (BusinessEntityID BIGINT, TerritoryID BIGINT, SalesQuota DOUBLE, Bonus DOUBLE, CommissionPct DOUBLE, SalesYTD DOUBLE, SalesLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CurrencyRate (CurrencyRateID BIGINT, CurrencyRateDate DATETIME, FromCurrencyCode VARCHAR(1023), ToCurrencyCode VARCHAR(1023), AverageRate DOUBLE, EndOfDayRate DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ProductListPriceHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, ListPrice DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ShipMethod (ShipMethodID BIGINT, Name VARCHAR(1023), ShipBase DOUBLE, ShipRate DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductModel (ProductModelID BIGINT, Name VARCHAR(1023), CatalogDescription VARCHAR(1023), Instructions VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BillOfMaterials (BillOfMaterialsID BIGINT, ProductAssemblyID BIGINT, ComponentID BIGINT, StartDate DATETIME, EndDate DATETIME, UnitMeasureCode VARCHAR(1023), BOMLevel BIGINT, PerAssemblyQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE PhoneNumberType (PhoneNumberTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityContact (BusinessEntityID BIGINT, PersonID BIGINT, ContactTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CountryRegion (CountryRegionCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE TransactionHistory (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE CreditCard (CreditCardID BIGINT, CardType VARCHAR(1023), CardNumber VARCHAR(1023), ExpMonth BIGINT, ExpYear BIGINT, ModifiedDate DATETIME);\nCREATE TABLE WorkOrderRouting (WorkOrderID BIGINT, ProductID BIGINT, OperationSequence BIGINT, LocationID BIGINT, ScheduledStartDate DATETIME, ScheduledEndDate DATETIME, ActualStartDate DATETIME, ActualEndDate DATETIME, ActualResourceHrs DOUBLE, PlannedCost DOUBLE, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE StateProvince (StateProvinceID BIGINT, StateProvinceCode VARCHAR(1023), CountryRegionCode VARCHAR(1023), IsOnlyStateProvinceFlag BIGINT, Name VARCHAR(1023), TerritoryID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderDetail (PurchaseOrderID BIGINT, PurchaseOrderDetailID BIGINT, DueDate DATETIME, OrderQty BIGINT, ProductID BIGINT, UnitPrice DOUBLE, LineTotal DOUBLE, ReceivedQty DOUBLE, RejectedQty DOUBLE, StockedQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Password (BusinessEntityID BIGINT, PasswordHash VARCHAR(1023), PasswordSalt VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Currency (CurrencyCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityAddress (BusinessEntityID BIGINT, AddressID BIGINT, AddressTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductDescription (ProductDescriptionID BIGINT, Description VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Product (ProductID BIGINT, Name VARCHAR(1023), ProductNumber VARCHAR(1023), MakeFlag BIGINT, FinishedGoodsFlag BIGINT, Color VARCHAR(1023), SafetyStockLevel BIGINT, ReorderPoint BIGINT, StandardCost DOUBLE, ListPrice DOUBLE, Size VARCHAR(1023), SizeUnitMeasureCode VARCHAR(1023), WeightUnitMeasureCode VARCHAR(1023), Weight DOUBLE, DaysToManufacture BIGINT, ProductLine VARCHAR(1023), Class VARCHAR(1023), Style VARCHAR(1023), ProductSubcategoryID BIGINT, ProductModelID BIGINT, SellStartDate DATETIME, SellEndDate DATETIME, DiscontinuedDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductProductPhoto (ProductID BIGINT, ProductPhotoID BIGINT, Primary BIGINT, ModifiedDate DATETIME);\nCREATE TABLE JobCandidate (JobCandidateID BIGINT, BusinessEntityID BIGINT, Resume VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Culture (CultureID VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Shift (ShiftID BIGINT, Name VARCHAR(1023), StartTime VARCHAR(1023), EndTime VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeader (SalesOrderID BIGINT, RevisionNumber BIGINT, OrderDate DATETIME, DueDate DATETIME, ShipDate DATETIME, Status BIGINT, OnlineOrderFlag BIGINT, SalesOrderNumber VARCHAR(1023), PurchaseOrderNumber VARCHAR(1023), AccountNumber VARCHAR(1023), CustomerID BIGINT, SalesPersonID BIGINT, TerritoryID BIGINT, BillToAddressID BIGINT, ShipToAddressID BIGINT, ShipMethodID BIGINT, CreditCardID BIGINT, CreditCardApprovalCode VARCHAR(1023), CurrencyRateID BIGINT, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, Comment VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CountryRegionCurrency (CountryRegionCode VARCHAR(1023), CurrencyCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ScrapReason (ScrapReasonID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductPhoto (ProductPhotoID BIGINT, ThumbNailPhoto BLOB, ThumbnailPhotoFileName VARCHAR(1023), LargePhoto BLOB, LargePhotoFileName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntity (BusinessEntityID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Document (DocumentNode VARCHAR(1023), DocumentLevel BIGINT, Title VARCHAR(1023), Owner BIGINT, FolderFlag BIGINT, FileName VARCHAR(1023), FileExtension VARCHAR(1023), Revision VARCHAR(1023), ChangeNumber BIGINT, Status BIGINT, DocumentSummary VARCHAR(1023), Document BLOB, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmployeeDepartmentHistory (BusinessEntityID BIGINT, DepartmentID BIGINT, ShiftID BIGINT, StartDate DATE, EndDate DATE, ModifiedDate DATETIME);\nCREATE TABLE WorkOrder (WorkOrderID BIGINT, ProductID BIGINT, OrderQty BIGINT, StockedQty BIGINT, ScrappedQty BIGINT, StartDate DATETIME, EndDate DATETIME, DueDate DATETIME, ScrapReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE Employee (BusinessEntityID BIGINT, NationalIDNumber VARCHAR(1023), LoginID VARCHAR(1023), OrganizationNode VARCHAR(1023), OrganizationLevel BIGINT, JobTitle VARCHAR(1023), BirthDate DATE, MaritalStatus VARCHAR(1023), Gender VARCHAR(1023), HireDate DATE, SalariedFlag BIGINT, VacationHours BIGINT, SickLeaveHours BIGINT, CurrentFlag BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductVendor (ProductID BIGINT, BusinessEntityID BIGINT, AverageLeadTime BIGINT, StandardPrice DOUBLE, LastReceiptCost DOUBLE, LastReceiptDate DATETIME, MinOrderQty BIGINT, MaxOrderQty BIGINT, OnOrderQty BIGINT, UnitMeasureCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ContactType (ContactTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Vendor (BusinessEntityID BIGINT, AccountNumber VARCHAR(1023), Name VARCHAR(1023), CreditRating BIGINT, PreferredVendorStatus BIGINT, ActiveFlag BIGINT, PurchasingWebServiceURL VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE UnitMeasure (UnitMeasureCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SpecialOffer (SpecialOfferID BIGINT, Description VARCHAR(1023), DiscountPct DOUBLE, Type VARCHAR(1023), Category VARCHAR(1023), StartDate DATETIME, EndDate DATETIME, MinQty BIGINT, MaxQty BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductCostHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, StandardCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE SalesTaxRate (SalesTaxRateID BIGINT, StateProvinceID BIGINT, TaxType BIGINT, TaxRate DOUBLE, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE TransactionHistoryArchive (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE SpecialOfferProduct (SpecialOfferID BIGINT, ProductID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeaderSalesReason (SalesOrderID BIGINT, SalesReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ProductModelProductDescriptionCulture (ProductModelID BIGINT, ProductDescriptionID BIGINT, CultureID VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Customer (CustomerID BIGINT, PersonID BIGINT, StoreID BIGINT, TerritoryID BIGINT, AccountNumber VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductDocument (ProductID BIGINT, DocumentNode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE AddressType (AddressTypeID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductSubcategory (ProductSubcategoryID BIGINT, ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductInventory (ProductID BIGINT, LocationID BIGINT, Shelf VARCHAR(1023), Bin BIGINT, Quantity BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderDetail (SalesOrderID BIGINT, SalesOrderDetailID BIGINT, CarrierTrackingNumber VARCHAR(1023), OrderQty BIGINT, ProductID BIGINT, SpecialOfferID BIGINT, UnitPrice DOUBLE, UnitPriceDiscount DOUBLE, LineTotal DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesReason (SalesReasonID BIGINT, Name VARCHAR(1023), ReasonType VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderHeader (PurchaseOrderID BIGINT, RevisionNumber BIGINT, Status BIGINT, EmployeeID BIGINT, VendorID BIGINT, ShipMethodID BIGINT, OrderDate DATETIME, ShipDate DATETIME, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE SalesTerritory (TerritoryID BIGINT, Name VARCHAR(1023), CountryRegionCode VARCHAR(1023), Group VARCHAR(1023), SalesYTD DOUBLE, SalesLastYear DOUBLE, CostYTD DOUBLE, CostLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PersonCreditCard (BusinessEntityID BIGINT, CreditCardID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ProductCategory (ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Person (BusinessEntityID BIGINT, PersonType VARCHAR(1023), NameStyle BIGINT, Title VARCHAR(1023), FirstName VARCHAR(1023), MiddleName VARCHAR(1023), LastName VARCHAR(1023), Suffix VARCHAR(1023), EmailPromotion BIGINT, AdditionalContactInfo VARCHAR(1023), Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTerritoryHistory (BusinessEntityID BIGINT, TerritoryID BIGINT, StartDate DATETIME, EndDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ShoppingCartItem (ShoppingCartItemID BIGINT, ShoppingCartID VARCHAR(1023), Quantity BIGINT, ProductID BIGINT, DateCreated DATETIME, ModifiedDate DATETIME);\nCREATE TABLE EmployeePayHistory (BusinessEntityID BIGINT, RateChangeDate DATETIME, Rate DOUBLE, PayFrequency BIGINT, ModifiedDate DATETIME);\nCREATE TABLE EmailAddress (BusinessEntityID BIGINT, EmailAddressID BIGINT, EmailAddress VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);",
        "Response": "Table: WorkOrder"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (4, 3, 6, '2006/01/04');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: pilot_record"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('A&E - Watch Full Episodes of TV Shows', 'It''s I thought would', 'Neutral', '0.0', '0.0');\nDatabase State:\nCREATE TABLE user_reviews (App VARCHAR(1023), Translated_Review VARCHAR(1023), Sentiment VARCHAR(1023), Sentiment_Polarity VARCHAR(1023), Sentiment_Subjectivity VARCHAR(1023));",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO orthology () VALUES ('Notch1', 'protein-coding gene in the species Mus musculus', '18128', 'protein-coding gene', 'ENSMUSG00000026923', '32049', 'house mouse', 'NM_008714', 'ENSMUST00000028288', 'mouse chromosome 2', 'Notch 1', 'MGI:97363', 'Notch1', 'http://identifiers.org/ncbigene/18128', 'Notch1', 'reverse strand', 'gene', '2 A3|2 18.91 cM', '26347915', '26406675', 'hair follicle');\nDatabase State:\nCREATE TABLE orthology (label VARCHAR(1023), description VARCHAR(1023), entrez_gene_id VARCHAR(1023), subclass_of VARCHAR(1023), ensembl_gene_id VARCHAR(1023), homologene_id VARCHAR(1023), found_in_taxon VARCHAR(1023), refseq_rna_id VARCHAR(1023), ensembl_transcript_id VARCHAR(1023), chromosome VARCHAR(1023), encodes VARCHAR(1023), mouse_genome_informatics_id VARCHAR(1023), ortholog VARCHAR(1023), exact_match VARCHAR(1023), mgi_gene_symbol VARCHAR(1023), strand_orientation VARCHAR(1023), instance_of VARCHAR(1023), cytogenetic_location VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), expressed_in VARCHAR(1023));",
        "Response": "Table: orthology"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_REL () VALUES (2367678, 142, 15, 9);\nDatabase State:\nCREATE TABLE IMG_REL (IMG_ID BIGINT, PRED_CLASS_ID BIGINT, OBJ1_SAMPLE_ID BIGINT, OBJ2_SAMPLE_ID BIGINT);\nCREATE TABLE ATT_CLASSES (ATT_CLASS_ID BIGINT, ATT_CLASS VARCHAR(1023));\nCREATE TABLE OBJ_CLASSES (OBJ_CLASS_ID BIGINT, OBJ_CLASS VARCHAR(1023));\nCREATE TABLE PRED_CLASSES (PRED_CLASS_ID BIGINT, PRED_CLASS VARCHAR(1023));",
        "Response": "Table: IMG_REL"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO administrative_territorial_entity () VALUES ('Kosovska Mitrovica District', 'district of Kosovo', 'Kosovo', 'Serbia', 'district of Kosovo', NULL, '/m/05zmgc', '42.89', 'Kosovska Mitrovica District', 'Mitrovica', 'Category:District of Mitrovica', '6898597.0', 'Kosovska Mitrovica in Kosovo (Kosovo independent).svg', 'nan', '10097358.0', 2077.0, '12467.0');\nDatabase State:\nCREATE TABLE twin_town (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), coordinate_location VARCHAR(1023), freebase_id VARCHAR(1023), twinned_administrative_body VARCHAR(1023), geonames_id VARCHAR(1023), instance_of VARCHAR(1023), topics_main_category VARCHAR(1023), capital_of VARCHAR(1023), viaf_id VARCHAR(1023), elevation_above_sea_level DOUBLE, commons_category VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), quora_topic_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), located_in_time_zone VARCHAR(1023), image VARCHAR(1023), category_of_associated_people VARCHAR(1023), area DOUBLE, library_of_congress_authority_id VARCHAR(1023), coat_of_arms_image VARCHAR(1023), whos_on_first_id VARCHAR(1023), population DOUBLE, postal_code VARCHAR(1023), official_website VARCHAR(1023), worldcat_identities_id VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), page_banner VARCHAR(1023), head_of_government VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), gnd_id VARCHAR(1023), commons_gallery VARCHAR(1023), facebook_places_id VARCHAR(1023), native_label VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), category_for_maps VARCHAR(1023), factgrid_item_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), online_pwn_encyclopedia_id VARCHAR(1023), local_dialing_code VARCHAR(1023), nkcr_aut_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023));\nCREATE TABLE wiki_loves_monuments_2015 (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), country VARCHAR(1023), part_of VARCHAR(1023), commons_category VARCHAR(1023), part_of_the_series VARCHAR(1023), start_time VARCHAR(1023), end_time VARCHAR(1023));\nCREATE TABLE country (label VARCHAR(1023), description VARCHAR(1023), great_russian_encyclopedia_online_id VARCHAR(1023), wipo_st3 VARCHAR(1023), population DOUBLE, getty_thesaurus_of_geographic_names_id VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), wikimedia_outline VARCHAR(1023), ndl_authority_id VARCHAR(1023), currency VARCHAR(1023), new_york_times_topic_id VARCHAR(1023), geonames_id VARCHAR(1023), gnd_id VARCHAR(1023), unicode_character VARCHAR(1023), category_of_associated_people VARCHAR(1023), emergency_phone_number VARCHAR(1023), unesco_thesaurus_id VARCHAR(1023), electrical_plug_type VARCHAR(1023), licence_plate_code VARCHAR(1023), babelnet_id VARCHAR(1023), geography_of_topic VARCHAR(1023), iso_3166_1_alpha_3_code VARCHAR(1023), office_held_by_head_of_government VARCHAR(1023), quora_topic_id VARCHAR(1023), native_label VARCHAR(1023), basic_form_of_government VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), has_quality VARCHAR(1023), coat_of_arms_image VARCHAR(1023), uic_alphabetical_country_code VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), insee_countries_and_foreign_territories_code VARCHAR(1023), invasive_species_compendium_datasheet_id VARCHAR(1023), diplomatic_relation VARCHAR(1023), flag_image VARCHAR(1023), ituisoiec_object_identifier VARCHAR(1023), commons_gallery VARCHAR(1023), legislative_body VARCHAR(1023), trunk_prefix VARCHAR(1023), history_of_topic VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), stw_thesaurus_for_economics_id VARCHAR(1023), official_language VARCHAR(1023), viaf_id VARCHAR(1023), subreddit VARCHAR(1023), continent VARCHAR(1023), capital VARCHAR(1023), coat_of_arms VARCHAR(1023), demonym VARCHAR(1023), national_library_of_israel_id_old VARCHAR(1023), openstreetmap_relation_id VARCHAR(1023), on_focus_list_of_wikimedia_project VARCHAR(1023), omegawiki_defined_meaning VARCHAR(1023), coordinates_of_northernmost_point VARCHAR(1023), nkcr_aut_id VARCHAR(1023), comic_vine_id VARCHAR(1023), mobile_country_code VARCHAR(1023), total_fertility_rate DOUBLE, maritime_identification_digits VARCHAR(1023), us_national_archives_identifier VARCHAR(1023), shares_border_with VARCHAR(1023), marriageable_age DOUBLE, topics_main_category VARCHAR(1023), head_of_government VARCHAR(1023), biblioth\u00e8que_nationale_de_france_id VARCHAR(1023), category_of_people_buried_here VARCHAR(1023), locator_map_image VARCHAR(1023), bbc_things_id VARCHAR(1023), geoshape VARCHAR(1023), dewey_decimal_classification VARCHAR(1023), area DOUBLE, le_monde_diplomatique_subject_id VARCHAR(1023), ioc_country_code VARCHAR(1023), member_of VARCHAR(1023), official_name VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), railway_traffic_side VARCHAR(1023), gacs_id VARCHAR(1023), archinform_location_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), page_banner VARCHAR(1023), category_for_films_shot_at_this_location VARCHAR(1023), mains_voltage DOUBLE, executive_body VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), yso_id VARCHAR(1023), anthem VARCHAR(1023), office_held_by_head_of_state VARCHAR(1023), life_expectancy DOUBLE, part_of VARCHAR(1023), commons_category VARCHAR(1023), top_level_internet_domain VARCHAR(1023), instance_of VARCHAR(1023), highest_point VARCHAR(1023), category_for_people_born_here VARCHAR(1023), iab_code VARCHAR(1023), short_name VARCHAR(1023), number_of_out_of_school_children DOUBLE, driving_side VARCHAR(1023), head_of_state VARCHAR(1023), uic_numerical_country_code VARCHAR(1023), lowest_point VARCHAR(1023), idref_id VARCHAR(1023), iso_3166_1_numeric_code VARCHAR(1023), located_in_time_zone VARCHAR(1023), contains_the_administrative_territorial_entity VARCHAR(1023), itu_letter_code VARCHAR(1023), country_calling_code VARCHAR(1023), freebase_id VARCHAR(1023), statoids_id VARCHAR(1023), library_of_congress_authority_id VARCHAR(1023), iso_3166_1_alpha_2_code VARCHAR(1023), coordinate_location VARCHAR(1023), fips_10_4_countries_and_regions VARCHAR(1023), described_by_source VARCHAR(1023), isni VARCHAR(1023), civicus_monitor_country_entry VARCHAR(1023), brockhaus_enzyklop\u00e4die_online_id VARCHAR(1023), klexikon_article_id VARCHAR(1023), loc_and_marc_vocabularies_id VARCHAR(1023), central_bank VARCHAR(1023), language_used VARCHAR(1023), coordinates_of_westernmost_point VARCHAR(1023), whos_on_first_id VARCHAR(1023), the_top_tens_id VARCHAR(1023), world_encyclopedia_of_puppetry_arts_id VARCHAR(1023), official_website VARCHAR(1023), hds_id VARCHAR(1023), gs1_country_code VARCHAR(1023), culture VARCHAR(1023), coordinates_of_southernmost_point VARCHAR(1023), coordinates_of_easternmost_point VARCHAR(1023), geonlp_id VARCHAR(1023), category_for_maps VARCHAR(1023), treccanis_dizionario_di_storia_id VARCHAR(1023), vat_rate DOUBLE, french_vikidia_id VARCHAR(1023), english_vikidia_id VARCHAR(1023), spanish_vikidia_id VARCHAR(1023), pronunciation_audio VARCHAR(1023), eurovoc_id VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), open_data_portal VARCHAR(1023), grove_art_online_id VARCHAR(1023), rkd_thesaurus_id VARCHAR(1023), pm20_geo_code VARCHAR(1023), interlingual_index_id VARCHAR(1023), jewish_encyclopedia_id_russian VARCHAR(1023), bbc_news_topic_id VARCHAR(1023), tasteatlas_id VARCHAR(1023), inaturalist_place_id VARCHAR(1023), economy_of_topic VARCHAR(1023), flag VARCHAR(1023), uk_parliament_thesaurus_id VARCHAR(1023), yle_topic_id VARCHAR(1023), ysa_id VARCHAR(1023), inception VARCHAR(1023), bhcl_uuid VARCHAR(1023), github_topic VARCHAR(1023), wordnet_31_synset_id VARCHAR(1023), demographics_of_topic VARCHAR(1023), joconde_location_id VARCHAR(1023), idaigazetteer_id VARCHAR(1023), country VARCHAR(1023), armeniapedia_id VARCHAR(1023), krugosvet_article VARCHAR(1023), schoenberg_database_of_manuscripts_place_id VARCHAR(1023), the_world_factbook_country_id VARCHAR(1023), colon_classification VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), democracy_index DOUBLE, online_pwn_encyclopedia_id VARCHAR(1023), treccani_id VARCHAR(1023), postimees_topic_id VARCHAR(1023), museum_digital_place_id VARCHAR(1023), wikisimpsons_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), urban_electric_transit_country_id VARCHAR(1023), m49_code VARCHAR(1023), alltrails_trail_id VARCHAR(1023), human_development_index DOUBLE, national_historical_museums_of_sweden_id VARCHAR(1023), eu_knowledge_graph_item_id VARCHAR(1023), hashtag VARCHAR(1023), gini_coefficient DOUBLE, obo_gazetteer_id VARCHAR(1023), openstreetmap_element VARCHAR(1023), happy_planet_index_score DOUBLE, namuwiki_id VARCHAR(1023), curlie_id VARCHAR(1023), unemployment_rate DOUBLE, nalt_id VARCHAR(1023), age_of_majority DOUBLE, fast_id VARCHAR(1023), dr_topic_id VARCHAR(1023), der_spiegel_topic_id VARCHAR(1023));\nCREATE TABLE part (label VARCHAR(1023), description VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), commons_category VARCHAR(1023), topics_main_category VARCHAR(1023), page_banner VARCHAR(1023), freebase_id VARCHAR(1023), instance_of VARCHAR(1023), coordinate_location VARCHAR(1023), locator_map_image VARCHAR(1023), viaf_id VARCHAR(1023), quora_topic_id VARCHAR(1023), yso_id VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), has_parts VARCHAR(1023), part_of VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), gnd_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), nkcr_aut_id VARCHAR(1023), mapycz_id VARCHAR(1023));\nCREATE TABLE place_of_birth (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), coordinate_location VARCHAR(1023), topics_main_category VARCHAR(1023), freebase_id VARCHAR(1023), image VARCHAR(1023), geonames_id VARCHAR(1023), elevation_above_sea_level DOUBLE, category_of_associated_people VARCHAR(1023), official_website VARCHAR(1023), area DOUBLE, population DOUBLE, whos_on_first_id VARCHAR(1023));\nCREATE TABLE series (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023));",
        "Response": "Table: administrative_territorial_entity"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO institution_grads () VALUES (147411, 2004, 'M', 'X', '2y all', '132', 'NULL', '19', 'NULL', '14.4');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (148849, 2009, 'B', 'H', '4y other', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');\nDatabase State:\nCREATE TABLE institution_grads (unitid BIGINT, year BIGINT, gender VARCHAR(1023), race VARCHAR(1023), cohort VARCHAR(1023), grad_cohort VARCHAR(1023), grad_100 VARCHAR(1023), grad_150 VARCHAR(1023), grad_100_rate VARCHAR(1023), grad_150_rate VARCHAR(1023));",
        "Response": "Table: Institution_Graduation_Statistics"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('971', 'year', '971', 'year', '970s', '970', '972', 'Category:971', '+0971-01-01T00:00:00Z', 'list of state leaders in 971');\nDatabase State:\nCREATE TABLE follows (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));\nCREATE TABLE 970s (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));\nCREATE TABLE followed_by (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));",
        "Response": "Table: followed_by"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('972', 'year', '972', 'year', '970s', '971', '973', 'Category:972', '+0972-01-01T00:00:00Z', 'list of state leaders in 972');\nDatabase State:\nCREATE TABLE 970s (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));\nCREATE TABLE follows (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));",
        "Response": "Table: 970s"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO machine () VALUES (3, 1993, '125cc', 'Marlboro Pileri - Honda', 'RS125', 129.0, 4);\nDatabase State:\nCREATE TABLE machine (Machine_ID BIGINT, Making_Year BIGINT, Class VARCHAR(1023), Team VARCHAR(1023), Machine_series VARCHAR(1023), value_points DOUBLE, quality_rank BIGINT);\nCREATE TABLE repair (repair_ID BIGINT, name VARCHAR(1023), Launch_Date VARCHAR(1023), Notes VARCHAR(1023));\nCREATE TABLE technician (technician_id DOUBLE, Name VARCHAR(1023), Team VARCHAR(1023), Starting_Year DOUBLE, Age BIGINT);\nCREATE TABLE repair_assignment (technician_id BIGINT, repair_ID BIGINT, Machine_ID BIGINT);",
        "Response": "Table: machine"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_OBJ_ATT () VALUES (2384923, 697, 8);\nDatabase State:\nCREATE TABLE IMG_OBJ (IMG_ID BIGINT, OBJ_SAMPLE_ID BIGINT, OBJ_CLASS_ID BIGINT, X BIGINT, Y BIGINT, W BIGINT, H BIGINT);",
        "Response": "Table: IMG_OBJ_ATT"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO pilot () VALUES (5, 'Hakeem Olajuwon', 34, 32, 'Nigeria', 'Center Team', 2010, 'Houston');\nDatabase State:\nCREATE TABLE pilot_record (Record_ID BIGINT, Pilot_ID BIGINT, Aircraft_ID BIGINT, Date VARCHAR(1023));\nCREATE TABLE aircraft (Aircraft_ID BIGINT, Order_Year BIGINT, Manufacturer VARCHAR(1023), Model VARCHAR(1023), Fleet_Series VARCHAR(1023), Powertrain VARCHAR(1023), Fuel_Propulsion VARCHAR(1023));\nCREATE TABLE pilot (Pilot_ID BIGINT, Pilot_name VARCHAR(1023), Rank BIGINT, Age BIGINT, Nationality VARCHAR(1023), Position VARCHAR(1023), Join_Year BIGINT, Team VARCHAR(1023));",
        "Response": "Table: pilot"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (2, 2, 1, '2004/01/04');\nDatabase State:\nCREATE TABLE aircraft (Aircraft_ID BIGINT, Order_Year BIGINT, Manufacturer VARCHAR(1023), Model VARCHAR(1023), Fleet_Series VARCHAR(1023), Powertrain VARCHAR(1023), Fuel_Propulsion VARCHAR(1023));\nCREATE TABLE pilot (Pilot_ID BIGINT, Pilot_name VARCHAR(1023), Rank BIGINT, Age BIGINT, Nationality VARCHAR(1023), Position VARCHAR(1023), Join_Year BIGINT, Team VARCHAR(1023));\nCREATE TABLE pilot_record (Record_ID BIGINT, Pilot_ID BIGINT, Aircraft_ID BIGINT, Date VARCHAR(1023));",
        "Response": "Table: Pilot_Aircraft_Logs"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Wiki Loves Monuments in Tunisia', 'nan', 'recurring event', 'Wiki Loves Monuments', 'Tunisia', 'Wiki Loves Monuments in Tunisia');\nDatabase State:\nCREATE TABLE series (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023));\nCREATE TABLE capital_city (label VARCHAR(1023), description VARCHAR(1023), twinned_administrative_body VARCHAR(1023), commons_category VARCHAR(1023), country VARCHAR(1023), image VARCHAR(1023), postal_code VARCHAR(1023), located_in_time_zone VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), coordinate_location VARCHAR(1023), page_banner VARCHAR(1023), topics_main_category VARCHAR(1023), instance_of VARCHAR(1023), freebase_id VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), gnd_id VARCHAR(1023), viaf_id VARCHAR(1023), geonames_id VARCHAR(1023), official_website VARCHAR(1023), category_of_associated_people VARCHAR(1023), capital_of VARCHAR(1023), area DOUBLE, population DOUBLE, elevation_above_sea_level DOUBLE, library_of_congress_authority_id VARCHAR(1023), native_label VARCHAR(1023), official_name VARCHAR(1023), great_russian_encyclopedia_online_id VARCHAR(1023), whos_on_first_id VARCHAR(1023), category_for_maps VARCHAR(1023), nkcr_aut_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), online_pwn_encyclopedia_id VARCHAR(1023));\nCREATE TABLE place_of_birth (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), coordinate_location VARCHAR(1023), topics_main_category VARCHAR(1023), freebase_id VARCHAR(1023), image VARCHAR(1023), geonames_id VARCHAR(1023), elevation_above_sea_level DOUBLE, category_of_associated_people VARCHAR(1023), official_website VARCHAR(1023), area DOUBLE, population DOUBLE, whos_on_first_id VARCHAR(1023));\nCREATE TABLE wiki_loves_monuments_2015 (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), country VARCHAR(1023), part_of VARCHAR(1023), commons_category VARCHAR(1023), part_of_the_series VARCHAR(1023), start_time VARCHAR(1023), end_time VARCHAR(1023));\nCREATE TABLE twin_town (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), coordinate_location VARCHAR(1023), freebase_id VARCHAR(1023), twinned_administrative_body VARCHAR(1023), geonames_id VARCHAR(1023), instance_of VARCHAR(1023), topics_main_category VARCHAR(1023), capital_of VARCHAR(1023), viaf_id VARCHAR(1023), elevation_above_sea_level DOUBLE, commons_category VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), quora_topic_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), located_in_time_zone VARCHAR(1023), image VARCHAR(1023), category_of_associated_people VARCHAR(1023), area DOUBLE, library_of_congress_authority_id VARCHAR(1023), coat_of_arms_image VARCHAR(1023), whos_on_first_id VARCHAR(1023), population DOUBLE, postal_code VARCHAR(1023), official_website VARCHAR(1023), worldcat_identities_id VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), page_banner VARCHAR(1023), head_of_government VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), gnd_id VARCHAR(1023), commons_gallery VARCHAR(1023), facebook_places_id VARCHAR(1023), native_label VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), category_for_maps VARCHAR(1023), factgrid_item_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), online_pwn_encyclopedia_id VARCHAR(1023), local_dialing_code VARCHAR(1023), nkcr_aut_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023));\nCREATE TABLE part (label VARCHAR(1023), description VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), commons_category VARCHAR(1023), topics_main_category VARCHAR(1023), page_banner VARCHAR(1023), freebase_id VARCHAR(1023), instance_of VARCHAR(1023), coordinate_location VARCHAR(1023), locator_map_image VARCHAR(1023), viaf_id VARCHAR(1023), quora_topic_id VARCHAR(1023), yso_id VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), has_parts VARCHAR(1023), part_of VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), gnd_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), nkcr_aut_id VARCHAR(1023), mapycz_id VARCHAR(1023));\nCREATE TABLE head_of_state (label VARCHAR(1023), description VARCHAR(1023), viaf_id VARCHAR(1023), commons_category VARCHAR(1023), library_of_congress_authority_id VARCHAR(1023), gnd_id VARCHAR(1023), date_of_birth VARCHAR(1023), place_of_birth VARCHAR(1023), member_of_political_party VARCHAR(1023), country_of_citizenship VARCHAR(1023), instance_of VARCHAR(1023), position_held VARCHAR(1023), occupation VARCHAR(1023), given_name VARCHAR(1023), image VARCHAR(1023), languages_spoken_written_or_signed VARCHAR(1023), name_in_native_language VARCHAR(1023), spouse VARCHAR(1023), educated_at VARCHAR(1023), isni VARCHAR(1023), sex_or_gender VARCHAR(1023), worldcat_identities_id VARCHAR(1023), munzinger_person_id VARCHAR(1023), opensanctions_id VARCHAR(1023));\nCREATE TABLE country (label VARCHAR(1023), description VARCHAR(1023), great_russian_encyclopedia_online_id VARCHAR(1023), wipo_st3 VARCHAR(1023), population DOUBLE, getty_thesaurus_of_geographic_names_id VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), wikimedia_outline VARCHAR(1023), ndl_authority_id VARCHAR(1023), currency VARCHAR(1023), new_york_times_topic_id VARCHAR(1023), geonames_id VARCHAR(1023), gnd_id VARCHAR(1023), unicode_character VARCHAR(1023), category_of_associated_people VARCHAR(1023), emergency_phone_number VARCHAR(1023), unesco_thesaurus_id VARCHAR(1023), electrical_plug_type VARCHAR(1023), licence_plate_code VARCHAR(1023), babelnet_id VARCHAR(1023), geography_of_topic VARCHAR(1023), iso_3166_1_alpha_3_code VARCHAR(1023), office_held_by_head_of_government VARCHAR(1023), quora_topic_id VARCHAR(1023), native_label VARCHAR(1023), basic_form_of_government VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), has_quality VARCHAR(1023), coat_of_arms_image VARCHAR(1023), uic_alphabetical_country_code VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), insee_countries_and_foreign_territories_code VARCHAR(1023), invasive_species_compendium_datasheet_id VARCHAR(1023), diplomatic_relation VARCHAR(1023), flag_image VARCHAR(1023), ituisoiec_object_identifier VARCHAR(1023), commons_gallery VARCHAR(1023), legislative_body VARCHAR(1023), trunk_prefix VARCHAR(1023), history_of_topic VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), stw_thesaurus_for_economics_id VARCHAR(1023), official_language VARCHAR(1023), viaf_id VARCHAR(1023), subreddit VARCHAR(1023), continent VARCHAR(1023), capital VARCHAR(1023), coat_of_arms VARCHAR(1023), demonym VARCHAR(1023), national_library_of_israel_id_old VARCHAR(1023), openstreetmap_relation_id VARCHAR(1023), on_focus_list_of_wikimedia_project VARCHAR(1023), omegawiki_defined_meaning VARCHAR(1023), coordinates_of_northernmost_point VARCHAR(1023), nkcr_aut_id VARCHAR(1023), comic_vine_id VARCHAR(1023), mobile_country_code VARCHAR(1023), total_fertility_rate DOUBLE, maritime_identification_digits VARCHAR(1023), us_national_archives_identifier VARCHAR(1023), shares_border_with VARCHAR(1023), marriageable_age DOUBLE, topics_main_category VARCHAR(1023), head_of_government VARCHAR(1023), biblioth\u00e8que_nationale_de_france_id VARCHAR(1023), category_of_people_buried_here VARCHAR(1023), locator_map_image VARCHAR(1023), bbc_things_id VARCHAR(1023), geoshape VARCHAR(1023), dewey_decimal_classification VARCHAR(1023), area DOUBLE, le_monde_diplomatique_subject_id VARCHAR(1023), ioc_country_code VARCHAR(1023), member_of VARCHAR(1023), official_name VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), railway_traffic_side VARCHAR(1023), gacs_id VARCHAR(1023), archinform_location_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), page_banner VARCHAR(1023), category_for_films_shot_at_this_location VARCHAR(1023), mains_voltage DOUBLE, executive_body VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), yso_id VARCHAR(1023), anthem VARCHAR(1023), office_held_by_head_of_state VARCHAR(1023), life_expectancy DOUBLE, part_of VARCHAR(1023), commons_category VARCHAR(1023), top_level_internet_domain VARCHAR(1023), instance_of VARCHAR(1023), highest_point VARCHAR(1023), category_for_people_born_here VARCHAR(1023), iab_code VARCHAR(1023), short_name VARCHAR(1023), number_of_out_of_school_children DOUBLE, driving_side VARCHAR(1023), head_of_state VARCHAR(1023), uic_numerical_country_code VARCHAR(1023), lowest_point VARCHAR(1023), idref_id VARCHAR(1023), iso_3166_1_numeric_code VARCHAR(1023), located_in_time_zone VARCHAR(1023), contains_the_administrative_territorial_entity VARCHAR(1023), itu_letter_code VARCHAR(1023), country_calling_code VARCHAR(1023), freebase_id VARCHAR(1023), statoids_id VARCHAR(1023), library_of_congress_authority_id VARCHAR(1023), iso_3166_1_alpha_2_code VARCHAR(1023), coordinate_location VARCHAR(1023), fips_10_4_countries_and_regions VARCHAR(1023), described_by_source VARCHAR(1023), isni VARCHAR(1023), civicus_monitor_country_entry VARCHAR(1023), brockhaus_enzyklop\u00e4die_online_id VARCHAR(1023), klexikon_article_id VARCHAR(1023), loc_and_marc_vocabularies_id VARCHAR(1023), central_bank VARCHAR(1023), language_used VARCHAR(1023), coordinates_of_westernmost_point VARCHAR(1023), whos_on_first_id VARCHAR(1023), the_top_tens_id VARCHAR(1023), world_encyclopedia_of_puppetry_arts_id VARCHAR(1023), official_website VARCHAR(1023), hds_id VARCHAR(1023), gs1_country_code VARCHAR(1023), culture VARCHAR(1023), coordinates_of_southernmost_point VARCHAR(1023), coordinates_of_easternmost_point VARCHAR(1023), geonlp_id VARCHAR(1023), category_for_maps VARCHAR(1023), treccanis_dizionario_di_storia_id VARCHAR(1023), vat_rate DOUBLE, french_vikidia_id VARCHAR(1023), english_vikidia_id VARCHAR(1023), spanish_vikidia_id VARCHAR(1023), pronunciation_audio VARCHAR(1023), eurovoc_id VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), open_data_portal VARCHAR(1023), grove_art_online_id VARCHAR(1023), rkd_thesaurus_id VARCHAR(1023), pm20_geo_code VARCHAR(1023), interlingual_index_id VARCHAR(1023), jewish_encyclopedia_id_russian VARCHAR(1023), bbc_news_topic_id VARCHAR(1023), tasteatlas_id VARCHAR(1023), inaturalist_place_id VARCHAR(1023), economy_of_topic VARCHAR(1023), flag VARCHAR(1023), uk_parliament_thesaurus_id VARCHAR(1023), yle_topic_id VARCHAR(1023), ysa_id VARCHAR(1023), inception VARCHAR(1023), bhcl_uuid VARCHAR(1023), github_topic VARCHAR(1023), wordnet_31_synset_id VARCHAR(1023), demographics_of_topic VARCHAR(1023), joconde_location_id VARCHAR(1023), idaigazetteer_id VARCHAR(1023), country VARCHAR(1023), armeniapedia_id VARCHAR(1023), krugosvet_article VARCHAR(1023), schoenberg_database_of_manuscripts_place_id VARCHAR(1023), the_world_factbook_country_id VARCHAR(1023), colon_classification VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), democracy_index DOUBLE, online_pwn_encyclopedia_id VARCHAR(1023), treccani_id VARCHAR(1023), postimees_topic_id VARCHAR(1023), museum_digital_place_id VARCHAR(1023), wikisimpsons_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), urban_electric_transit_country_id VARCHAR(1023), m49_code VARCHAR(1023), alltrails_trail_id VARCHAR(1023), human_development_index DOUBLE, national_historical_museums_of_sweden_id VARCHAR(1023), eu_knowledge_graph_item_id VARCHAR(1023), hashtag VARCHAR(1023), gini_coefficient DOUBLE, obo_gazetteer_id VARCHAR(1023), openstreetmap_element VARCHAR(1023), happy_planet_index_score DOUBLE, namuwiki_id VARCHAR(1023), curlie_id VARCHAR(1023), unemployment_rate DOUBLE, nalt_id VARCHAR(1023), age_of_majority DOUBLE, fast_id VARCHAR(1023), dr_topic_id VARCHAR(1023), der_spiegel_topic_id VARCHAR(1023));\nCREATE TABLE administrative_territorial_entity (label VARCHAR(1023), description VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), country VARCHAR(1023), instance_of VARCHAR(1023), population DOUBLE, freebase_id VARCHAR(1023), coordinate_location VARCHAR(1023), commons_category VARCHAR(1023), capital VARCHAR(1023), topics_main_category VARCHAR(1023), openstreetmap_relation_id VARCHAR(1023), locator_map_image VARCHAR(1023), official_website VARCHAR(1023), geonames_id VARCHAR(1023), area DOUBLE, inaturalist_place_id VARCHAR(1023));",
        "Response": "Table: Wiki_Loves_Monuments"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO repair () VALUES (1, 'Discoverer', '21 Jan 2009', 'repair Failed. Failed to achieve orbit');\nDatabase State:\nCREATE TABLE repair (repair_ID BIGINT, name VARCHAR(1023), Launch_Date VARCHAR(1023), Notes VARCHAR(1023));\nCREATE TABLE repair_assignment (technician_id BIGINT, repair_ID BIGINT, Machine_ID BIGINT);",
        "Response": "Table: Satellites"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('2013-08-03', NULL, '6e09f851-718e-4e49-9888-53cc094b5fbe', '7e124f54-a77d-498a-9251-5a2ce7b0e7c7', 22298006, 'Myocardial Infarction');\nDatabase State:\nCREATE TABLE allergies (START VARCHAR(1023), STOP VARCHAR(1023), PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE observations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE VARCHAR(1023), DESCRIPTION VARCHAR(1023), VALUE DOUBLE, UNITS VARCHAR(1023));\nCREATE TABLE claims (ID VARCHAR(1023), PATIENT VARCHAR(1023), BILLABLEPERIOD DATE, ORGANIZATION VARCHAR(1023), ENCOUNTER VARCHAR(1023), DIAGNOSIS VARCHAR(1023), TOTAL BIGINT);\nCREATE TABLE careplans (ID VARCHAR(1023), START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE DOUBLE, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE procedures (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE all_prevalences (ITEM VARCHAR(1023), POPULATION_TYPE VARCHAR(1023), OCCURRENCES BIGINT, POPULATION_COUNT BIGINT, PREVALENCE_RATE DOUBLE, PREVALENCE_PERCENTAGE DOUBLE);\nCREATE TABLE encounters (ID VARCHAR(1023), DATE DATE, PATIENT VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE medications (START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE patients (patient VARCHAR(1023), birthdate DATE, deathdate DATE, ssn VARCHAR(1023), drivers VARCHAR(1023), passport VARCHAR(1023), prefix VARCHAR(1023), first VARCHAR(1023), last VARCHAR(1023), suffix VARCHAR(1023), maiden VARCHAR(1023), marital VARCHAR(1023), race VARCHAR(1023), ethnicity VARCHAR(1023), gender VARCHAR(1023), birthplace VARCHAR(1023), address VARCHAR(1023));",
        "Response": "Table: conditions"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO playstore () VALUES ('Super Cars Wallpapers And Backgrounds', 'AUTO_AND_VEHICLES', 4.599999999999999644, 197, '3.4M', '50,000+', 'Free', '0', 'Everyone', 'Auto & Vehicles');\nDatabase State:\nCREATE TABLE playstore (App VARCHAR(1023), Category VARCHAR(1023), Rating DOUBLE, Reviews BIGINT, Size VARCHAR(1023), Installs VARCHAR(1023), Type VARCHAR(1023), Price VARCHAR(1023), Content_Rating VARCHAR(1023), Genres VARCHAR(1023));",
        "Response": "Table: playstore"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO centered_hexagonal_number () VALUES ('5941', 'number', 'natural number', 'nan', 5941.0, '5941', 4.0, '13.0');\nDatabase State:\nCREATE TABLE prime_factor (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), prime_factor VARCHAR(1023), number_of_decimal_digits DOUBLE);",
        "Response": "Table: centered_hexagonal_number"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (147165, 2004, 'M', 'W', '4y other', '0', 'NULL', '0', 'NULL', 'NULL');\nDatabase State:\nCREATE TABLE institution_details (unitid BIGINT, chronname VARCHAR(1023), city VARCHAR(1023), state VARCHAR(1023), level VARCHAR(1023), control VARCHAR(1023), basic VARCHAR(1023), hbcu VARCHAR(1023), flagship VARCHAR(1023), long_x DOUBLE, lat_y DOUBLE, site VARCHAR(1023), student_count BIGINT, awards_per_value DOUBLE, awards_per_state_value DOUBLE, awards_per_natl_value DOUBLE, exp_award_value BIGINT, exp_award_state_value BIGINT, exp_award_natl_value BIGINT, exp_award_percentile BIGINT, ft_pct DOUBLE, fte_value BIGINT, fte_percentile BIGINT, med_sat_value VARCHAR(1023), med_sat_percentile VARCHAR(1023), aid_value BIGINT, aid_percentile BIGINT, endow_value VARCHAR(1023), endow_percentile VARCHAR(1023), grad_100_value DOUBLE, grad_100_percentile BIGINT, grad_150_value DOUBLE, grad_150_percentile BIGINT, pell_value DOUBLE, pell_percentile BIGINT, retain_value DOUBLE, retain_percentile BIGINT, ft_fac_value DOUBLE, ft_fac_percentile BIGINT, vsa_year VARCHAR(1023), vsa_grad_after4_first VARCHAR(1023), vsa_grad_elsewhere_after4_first VARCHAR(1023), vsa_enroll_after4_first VARCHAR(1023), vsa_enroll_elsewhere_after4_first VARCHAR(1023), vsa_grad_after6_first VARCHAR(1023), vsa_grad_elsewhere_after6_first VARCHAR(1023), vsa_enroll_after6_first VARCHAR(1023), vsa_enroll_elsewhere_after6_first VARCHAR(1023), vsa_grad_after4_transfer VARCHAR(1023), vsa_grad_elsewhere_after4_transfer VARCHAR(1023), vsa_enroll_after4_transfer VARCHAR(1023), vsa_enroll_elsewhere_after4_transfer VARCHAR(1023), vsa_grad_after6_transfer VARCHAR(1023), vsa_grad_elsewhere_after6_transfer VARCHAR(1023), vsa_enroll_after6_transfer VARCHAR(1023), vsa_enroll_elsewhere_after6_transfer VARCHAR(1023), similar VARCHAR(1023), state_sector_ct BIGINT, carnegie_ct BIGINT, counted_pct VARCHAR(1023), nicknames VARCHAR(1023), cohort_size BIGINT);\nCREATE TABLE state_sector_details (stateid BIGINT, state VARCHAR(1023), state_post VARCHAR(1023), level VARCHAR(1023), control VARCHAR(1023), schools_count BIGINT, counted_pct VARCHAR(1023), awards_per_state_value VARCHAR(1023), awards_per_natl_value DOUBLE, exp_award_state_value VARCHAR(1023), exp_award_natl_value BIGINT, state_appr_value VARCHAR(1023), state_appr_rank VARCHAR(1023), grad_rate_rank VARCHAR(1023), awards_per_rank VARCHAR(1023));\nCREATE TABLE state_sector_grads (stateid BIGINT, state VARCHAR(1023), state_abbr VARCHAR(1023), control VARCHAR(1023), level VARCHAR(1023), year BIGINT, gender VARCHAR(1023), race VARCHAR(1023), cohort VARCHAR(1023), grad_cohort VARCHAR(1023), grad_100 VARCHAR(1023), grad_150 VARCHAR(1023), grad_100_rate VARCHAR(1023), grad_150_rate VARCHAR(1023), grad_cohort_ct BIGINT);\nCREATE TABLE institution_grads (unitid BIGINT, year BIGINT, gender VARCHAR(1023), race VARCHAR(1023), cohort VARCHAR(1023), grad_cohort VARCHAR(1023), grad_100 VARCHAR(1023), grad_150 VARCHAR(1023), grad_100_rate VARCHAR(1023), grad_150_rate VARCHAR(1023));",
        "Response": "Table: StudentGraduationRates"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('8911', 'number', 'natural number', '8911 (number)', 8911.0, '8911', 4.0, '7.0');\nDatabase State:\nCREATE TABLE centered_hexagonal_number (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), number_of_decimal_digits DOUBLE, prime_factor VARCHAR(1023));",
        "Response": "Table: CenteredHexagonalNumbers"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO country () VALUES ('France', 'country in Western Europe', '4721849', 'FR', 67749632.0, '1000070', 'Portal:France', 'outline of France', '563689', 'euro', 'destination/france', '3017382', '4018145-5', '\ud83c\uddeb\ud83c\uddf7', 'Category:French people', '112', 'concept902', 'Europlug', 'F', '00036202n', 'geography of France', 'FRA', 'Prime Minister of France', 'France', 'R\u00e9publique fran\u00e7aise', 'semi-presidential system', '08310658-51eb-3801-80de-5a0739207115', 'free country', 'Armoiries r\u00e9publique fran\u00e7aise.svg', 'F', 'D005602', 'nan', '108429.0', 'Albania', 'Flag of France (1794\u20131815, 1830\u20131974, 2020\u2013present).svg', '2.16.250', 'France', 'French Parliament', '0.0', 'history of France', '27948', '17255-3', 'French', '264091107', 'france', 'Europe', 'Paris', 'coat of arms of France', '\u0444\u0440\u0430\u043d\u0446\u0443\u0437', '974208.0', '2202162', 'Wikipedia:List of articles all languages should have', '7955', '51.089', 'ge129152', '4020-55778', '208.0', 1.989999999999999992, '226.0', '10035788', 'Kingdom of the Netherlands', 0.0, 'Category:France', '\u00c9lisabeth Borne', '152383070', 'Category:Burials in France', 'EU-France (orthographic projection).svg', '61ef4416-de68-49ff-9c97-e0779dafd9d2', 'Data:France.map', '2--44', 643801.0, 'pays/france', 'FRA', 'European Union', 'Francouzsk\u00e1 republika', 'Frankrike', 'left', '619.0', '2984', 'place/France', 'Sainte-Enimie-Gorges du Tarn France banner.jpg', 'Category:Films shot in France', 230.0, 'Government of France', 'Category:Deaths in France', '104968', 'La Marseillaise', 'President of the French Republic', 82.27316999999999325, 'Western Europe', 'France', '.fr', 'country', 'Mont Blanc', 'Category:Births in France', '1295.0', 'France', 29418.0, 'right', 'Emmanuel Macron', '87.0', '\u00c9tang de Lavalduc', '026378329', '250.0', 'UTC+01:00', 'Clipperton Island', 'F', '33', '/m/0f8l9c', 'ufr', 'n79006404', 'FR', '47.0', 'FR', 'Catholic Encyclopedia', 'nan', 'france', 'frankreich', 'Frankreich', 'countries/fr', 'Bank of France', 'standard French', '48.445833333333', '85633147', '49.0', 'france', 'https://www.gouvernement.fr/', '3354.0', '300-379', 'culture of France', '41.33354648385013', '42.282222222222', 'JfFJmZ', 'Category:Maps of France', 'francia', 20.0, 'France', 'France', 'Francia', 'Hu-francia.ogg', '1085', 'lccn-n79006404', 'France', 'data.gouv.fr', 'T029314', '455.0', 'A28', 'i83644', '14344.0', 'c302m85qenyt', 'france', '6753', 'economy of France', 'flag of France', '10352', '18-193871', 'Y104968', '+1792-00-00T00:00:00Z', '00e4cc53-5b5d-4636-a60e-addf9f452f94', 'france', '08949695-n', 'demographics of France', 'T84-742', '2076466.0', 'France', '3938.0', 'strany_mira/FRANTSIYA.html', '13.0', 'france', 'SG--53', '9.870075525332051e+17', 7.990000000000000213, '4169037', 'nan', '2706.0', '330', '16355', 'Frankrig', '29.0', '250.0', 'france', 0.9030000000000000248, 'geo/CF4D8D5F-9DE6-4C9C-9F25-F4B3BAC86493', 'Q20', 'France', 33.10000000000000142, '2940', 'node/291222598', 51.79999999999999716, '\ud504\ub791\uc2a4', 'Regional/Europe/France/', 10.0, '7039.0', 18.0, '1204289.0', 'frankrig', 'frankreich');\nDatabase State:\nCREATE TABLE country (label VARCHAR(1023), description VARCHAR(1023), great_russian_encyclopedia_online_id VARCHAR(1023), wipo_st3 VARCHAR(1023), population DOUBLE, getty_thesaurus_of_geographic_names_id VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), wikimedia_outline VARCHAR(1023), ndl_authority_id VARCHAR(1023), currency VARCHAR(1023), new_york_times_topic_id VARCHAR(1023), geonames_id VARCHAR(1023), gnd_id VARCHAR(1023), unicode_character VARCHAR(1023), category_of_associated_people VARCHAR(1023), emergency_phone_number VARCHAR(1023), unesco_thesaurus_id VARCHAR(1023), electrical_plug_type VARCHAR(1023), licence_plate_code VARCHAR(1023), babelnet_id VARCHAR(1023), geography_of_topic VARCHAR(1023), iso_3166_1_alpha_3_code VARCHAR(1023), office_held_by_head_of_government VARCHAR(1023), quora_topic_id VARCHAR(1023), native_label VARCHAR(1023), basic_form_of_government VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), has_quality VARCHAR(1023), coat_of_arms_image VARCHAR(1023), uic_alphabetical_country_code VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), insee_countries_and_foreign_territories_code VARCHAR(1023), invasive_species_compendium_datasheet_id VARCHAR(1023), diplomatic_relation VARCHAR(1023), flag_image VARCHAR(1023), ituisoiec_object_identifier VARCHAR(1023), commons_gallery VARCHAR(1023), legislative_body VARCHAR(1023), trunk_prefix VARCHAR(1023), history_of_topic VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), stw_thesaurus_for_economics_id VARCHAR(1023), official_language VARCHAR(1023), viaf_id VARCHAR(1023), subreddit VARCHAR(1023), continent VARCHAR(1023), capital VARCHAR(1023), coat_of_arms VARCHAR(1023), demonym VARCHAR(1023), national_library_of_israel_id_old VARCHAR(1023), openstreetmap_relation_id VARCHAR(1023), on_focus_list_of_wikimedia_project VARCHAR(1023), omegawiki_defined_meaning VARCHAR(1023), coordinates_of_northernmost_point VARCHAR(1023), nkcr_aut_id VARCHAR(1023), comic_vine_id VARCHAR(1023), mobile_country_code VARCHAR(1023), total_fertility_rate DOUBLE, maritime_identification_digits VARCHAR(1023), us_national_archives_identifier VARCHAR(1023), shares_border_with VARCHAR(1023), marriageable_age DOUBLE, topics_main_category VARCHAR(1023), head_of_government VARCHAR(1023), biblioth\u00e8que_nationale_de_france_id VARCHAR(1023), category_of_people_buried_here VARCHAR(1023), locator_map_image VARCHAR(1023), bbc_things_id VARCHAR(1023), geoshape VARCHAR(1023), dewey_decimal_classification VARCHAR(1023), area DOUBLE, le_monde_diplomatique_subject_id VARCHAR(1023), ioc_country_code VARCHAR(1023), member_of VARCHAR(1023), official_name VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), railway_traffic_side VARCHAR(1023), gacs_id VARCHAR(1023), archinform_location_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), page_banner VARCHAR(1023), category_for_films_shot_at_this_location VARCHAR(1023), mains_voltage DOUBLE, executive_body VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), yso_id VARCHAR(1023), anthem VARCHAR(1023), office_held_by_head_of_state VARCHAR(1023), life_expectancy DOUBLE, part_of VARCHAR(1023), commons_category VARCHAR(1023), top_level_internet_domain VARCHAR(1023), instance_of VARCHAR(1023), highest_point VARCHAR(1023), category_for_people_born_here VARCHAR(1023), iab_code VARCHAR(1023), short_name VARCHAR(1023), number_of_out_of_school_children DOUBLE, driving_side VARCHAR(1023), head_of_state VARCHAR(1023), uic_numerical_country_code VARCHAR(1023), lowest_point VARCHAR(1023), idref_id VARCHAR(1023), iso_3166_1_numeric_code VARCHAR(1023), located_in_time_zone VARCHAR(1023), contains_the_administrative_territorial_entity VARCHAR(1023), itu_letter_code VARCHAR(1023), country_calling_code VARCHAR(1023), freebase_id VARCHAR(1023), statoids_id VARCHAR(1023), library_of_congress_authority_id VARCHAR(1023), iso_3166_1_alpha_2_code VARCHAR(1023), coordinate_location VARCHAR(1023), fips_10_4_countries_and_regions VARCHAR(1023), described_by_source VARCHAR(1023), isni VARCHAR(1023), civicus_monitor_country_entry VARCHAR(1023), brockhaus_enzyklop\u00e4die_online_id VARCHAR(1023), klexikon_article_id VARCHAR(1023), loc_and_marc_vocabularies_id VARCHAR(1023), central_bank VARCHAR(1023), language_used VARCHAR(1023), coordinates_of_westernmost_point VARCHAR(1023), whos_on_first_id VARCHAR(1023), the_top_tens_id VARCHAR(1023), world_encyclopedia_of_puppetry_arts_id VARCHAR(1023), official_website VARCHAR(1023), hds_id VARCHAR(1023), gs1_country_code VARCHAR(1023), culture VARCHAR(1023), coordinates_of_southernmost_point VARCHAR(1023), coordinates_of_easternmost_point VARCHAR(1023), geonlp_id VARCHAR(1023), category_for_maps VARCHAR(1023), treccanis_dizionario_di_storia_id VARCHAR(1023), vat_rate DOUBLE, french_vikidia_id VARCHAR(1023), english_vikidia_id VARCHAR(1023), spanish_vikidia_id VARCHAR(1023), pronunciation_audio VARCHAR(1023), eurovoc_id VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), open_data_portal VARCHAR(1023), grove_art_online_id VARCHAR(1023), rkd_thesaurus_id VARCHAR(1023), pm20_geo_code VARCHAR(1023), interlingual_index_id VARCHAR(1023), jewish_encyclopedia_id_russian VARCHAR(1023), bbc_news_topic_id VARCHAR(1023), tasteatlas_id VARCHAR(1023), inaturalist_place_id VARCHAR(1023), economy_of_topic VARCHAR(1023), flag VARCHAR(1023), uk_parliament_thesaurus_id VARCHAR(1023), yle_topic_id VARCHAR(1023), ysa_id VARCHAR(1023), inception VARCHAR(1023), bhcl_uuid VARCHAR(1023), github_topic VARCHAR(1023), wordnet_31_synset_id VARCHAR(1023), demographics_of_topic VARCHAR(1023), joconde_location_id VARCHAR(1023), idaigazetteer_id VARCHAR(1023), country VARCHAR(1023), armeniapedia_id VARCHAR(1023), krugosvet_article VARCHAR(1023), schoenberg_database_of_manuscripts_place_id VARCHAR(1023), the_world_factbook_country_id VARCHAR(1023), colon_classification VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), democracy_index DOUBLE, online_pwn_encyclopedia_id VARCHAR(1023), treccani_id VARCHAR(1023), postimees_topic_id VARCHAR(1023), museum_digital_place_id VARCHAR(1023), wikisimpsons_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), urban_electric_transit_country_id VARCHAR(1023), m49_code VARCHAR(1023), alltrails_trail_id VARCHAR(1023), human_development_index DOUBLE, national_historical_museums_of_sweden_id VARCHAR(1023), eu_knowledge_graph_item_id VARCHAR(1023), hashtag VARCHAR(1023), gini_coefficient DOUBLE, obo_gazetteer_id VARCHAR(1023), openstreetmap_element VARCHAR(1023), happy_planet_index_score DOUBLE, namuwiki_id VARCHAR(1023), curlie_id VARCHAR(1023), unemployment_rate DOUBLE, nalt_id VARCHAR(1023), age_of_majority DOUBLE, fast_id VARCHAR(1023), dr_topic_id VARCHAR(1023), der_spiegel_topic_id VARCHAR(1023));\nCREATE TABLE part (label VARCHAR(1023), description VARCHAR(1023), topics_main_wikimedia_portal VARCHAR(1023), commons_category VARCHAR(1023), topics_main_category VARCHAR(1023), page_banner VARCHAR(1023), freebase_id VARCHAR(1023), instance_of VARCHAR(1023), coordinate_location VARCHAR(1023), locator_map_image VARCHAR(1023), viaf_id VARCHAR(1023), quora_topic_id VARCHAR(1023), yso_id VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), has_parts VARCHAR(1023), part_of VARCHAR(1023), worldcat_identities_id VARCHAR(1023), kbpedia_id VARCHAR(1023), gnd_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023), nkcr_aut_id VARCHAR(1023), mapycz_id VARCHAR(1023));\nCREATE TABLE twin_town (label VARCHAR(1023), description VARCHAR(1023), country VARCHAR(1023), coordinate_location VARCHAR(1023), freebase_id VARCHAR(1023), twinned_administrative_body VARCHAR(1023), geonames_id VARCHAR(1023), instance_of VARCHAR(1023), topics_main_category VARCHAR(1023), capital_of VARCHAR(1023), viaf_id VARCHAR(1023), elevation_above_sea_level DOUBLE, commons_category VARCHAR(1023), located_in_the_administrative_territorial_entity VARCHAR(1023), quora_topic_id VARCHAR(1023), encyclop\u00e6dia_britannica_online_id VARCHAR(1023), located_in_time_zone VARCHAR(1023), image VARCHAR(1023), category_of_associated_people VARCHAR(1023), area DOUBLE, library_of_congress_authority_id VARCHAR(1023), coat_of_arms_image VARCHAR(1023), whos_on_first_id VARCHAR(1023), population DOUBLE, postal_code VARCHAR(1023), official_website VARCHAR(1023), worldcat_identities_id VARCHAR(1023), musicbrainz_area_id VARCHAR(1023), national_library_of_israel_j9u_id VARCHAR(1023), page_banner VARCHAR(1023), head_of_government VARCHAR(1023), category_for_people_who_died_here VARCHAR(1023), gnd_id VARCHAR(1023), commons_gallery VARCHAR(1023), facebook_places_id VARCHAR(1023), native_label VARCHAR(1023), gran_enciclop\u00e8dia_catalana_id VARCHAR(1023), category_for_maps VARCHAR(1023), factgrid_item_id VARCHAR(1023), den_store_danske_id VARCHAR(1023), online_pwn_encyclopedia_id VARCHAR(1023), local_dialing_code VARCHAR(1023), nkcr_aut_id VARCHAR(1023), store_norske_leksikon_id VARCHAR(1023));\nCREATE TABLE head_of_state (label VARCHAR(1023), description VARCHAR(1023), viaf_id VARCHAR(1023), commons_category VARCHAR(1023), library_of_congress_authority_id VARCHAR(1023), gnd_id VARCHAR(1023), date_of_birth VARCHAR(1023), place_of_birth VARCHAR(1023), member_of_political_party VARCHAR(1023), country_of_citizenship VARCHAR(1023), instance_of VARCHAR(1023), position_held VARCHAR(1023), occupation VARCHAR(1023), given_name VARCHAR(1023), image VARCHAR(1023), languages_spoken_written_or_signed VARCHAR(1023), name_in_native_language VARCHAR(1023), spouse VARCHAR(1023), educated_at VARCHAR(1023), isni VARCHAR(1023), sex_or_gender VARCHAR(1023), worldcat_identities_id VARCHAR(1023), munzinger_person_id VARCHAR(1023), opensanctions_id VARCHAR(1023));",
        "Response": "Table: country"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Caviar - Food Delivery', 'The estimated delivery times way off.', 'Neutral', '0.0', '0.0');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO observations () VALUES ('2015-05-22', 'dfd22f38-6436-42c3-ad9a-bd1ed48d7bd0', 'df4ecedc-3a2f-4caf-b3aa-19728907b383', '2093-3', 'Total Cholesterol', 239.0, 'mg/dL');\nDatabase State:\nCREATE TABLE observations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE VARCHAR(1023), DESCRIPTION VARCHAR(1023), VALUE DOUBLE, UNITS VARCHAR(1023));\nCREATE TABLE encounters (ID VARCHAR(1023), DATE DATE, PATIENT VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE careplans (ID VARCHAR(1023), START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE DOUBLE, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));",
        "Response": "Table: observations"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO frameshift_truncation () VALUES ('MLH1 Q426FS', 'genetic variant', 'MLH1', '744', 'human chromosome 3', '37067365.0', '37067365.0', 'Frameshift Truncation', 'ENST00000231790.2:c.1276delC');\nDatabase State:\nCREATE TABLE chromosome (label VARCHAR(1023), description VARCHAR(1023), subclass_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), freebase_id VARCHAR(1023), commons_category VARCHAR(1023), refseq_genome_id VARCHAR(1023), found_in_taxon VARCHAR(1023), instance_of VARCHAR(1023), short_name VARCHAR(1023), length DOUBLE, topics_main_category VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), mesh_tree_code VARCHAR(1023), microsoft_academic_id VARCHAR(1023), openalex_id VARCHAR(1023));\nCREATE TABLE frameshift_truncation (label VARCHAR(1023), description VARCHAR(1023), biological_variant_of VARCHAR(1023), civic_variant_id VARCHAR(1023), chromosome VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), instance_of VARCHAR(1023), hgvs_nomenclature VARCHAR(1023));\nCREATE TABLE orthology (label VARCHAR(1023), description VARCHAR(1023), entrez_gene_id VARCHAR(1023), subclass_of VARCHAR(1023), ensembl_gene_id VARCHAR(1023), homologene_id VARCHAR(1023), found_in_taxon VARCHAR(1023), refseq_rna_id VARCHAR(1023), ensembl_transcript_id VARCHAR(1023), chromosome VARCHAR(1023), encodes VARCHAR(1023), mouse_genome_informatics_id VARCHAR(1023), ortholog VARCHAR(1023), exact_match VARCHAR(1023), mgi_gene_symbol VARCHAR(1023), strand_orientation VARCHAR(1023), instance_of VARCHAR(1023), cytogenetic_location VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), expressed_in VARCHAR(1023));\nCREATE TABLE biological_variant_of (label VARCHAR(1023), description VARCHAR(1023), entrez_gene_id VARCHAR(1023), hgnc_gene_symbol VARCHAR(1023), hgnc_id VARCHAR(1023), omim_id VARCHAR(1023), subclass_of VARCHAR(1023), ensembl_gene_id VARCHAR(1023), homologene_id VARCHAR(1023), ortholog VARCHAR(1023), refseq_rna_id VARCHAR(1023), ensembl_transcript_id VARCHAR(1023), image VARCHAR(1023), encodes VARCHAR(1023), genetic_association VARCHAR(1023), found_in_taxon VARCHAR(1023), exact_match VARCHAR(1023), chromosome VARCHAR(1023), strand_orientation VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), gene_atlas_image VARCHAR(1023), instance_of VARCHAR(1023), cytogenetic_location VARCHAR(1023), expressed_in VARCHAR(1023), civic_gene_id VARCHAR(1023));",
        "Response": "Table: GeneticVariants"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('4447', 'number', 'natural number', '4447 (number)', 4447.0, '4447', '4447', 4.0);\nDatabase State:\nCREATE TABLE prime_factor (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), prime_factor VARCHAR(1023), number_of_decimal_digits DOUBLE);\nCREATE TABLE centered_hexagonal_number (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), commons_category VARCHAR(1023), numeric_value DOUBLE, kit_linked_open_numbers_id VARCHAR(1023), number_of_decimal_digits DOUBLE, prime_factor VARCHAR(1023));",
        "Response": "Table: prime_factor"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO frameshift_truncation () VALUES ('RB1 M695FS*26', 'genetic variant', 'RB1', '638', 'human chromosome 13', '49033946.0', '49033947.0', 'Frameshift Truncation', 'ENST00000267163.4:c.2083_2084insA');\nDatabase State:\nCREATE TABLE chromosome (label VARCHAR(1023), description VARCHAR(1023), subclass_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), freebase_id VARCHAR(1023), commons_category VARCHAR(1023), refseq_genome_id VARCHAR(1023), found_in_taxon VARCHAR(1023), instance_of VARCHAR(1023), short_name VARCHAR(1023), length DOUBLE, topics_main_category VARCHAR(1023), mesh_descriptor_id VARCHAR(1023), mesh_tree_code VARCHAR(1023), microsoft_academic_id VARCHAR(1023), openalex_id VARCHAR(1023));\nCREATE TABLE frameshift_truncation (label VARCHAR(1023), description VARCHAR(1023), biological_variant_of VARCHAR(1023), civic_variant_id VARCHAR(1023), chromosome VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), instance_of VARCHAR(1023), hgvs_nomenclature VARCHAR(1023));",
        "Response": "Table: frameshift_truncation"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('977', 'year', '977', 'year', '970s', '976', '978', 'Category:977', '+0977-01-01T00:00:00Z', 'list of state leaders in 977');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: follows"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO member_attendance () VALUES (11, 3, 2);\nDatabase State:\nCREATE TABLE member (Member_ID VARCHAR(1023), Name VARCHAR(1023), Nationality VARCHAR(1023), Role VARCHAR(1023));",
        "Response": "Table: member_attendance"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO user_reviews () VALUES ('Anger of stick 5 : zombie', 'nan', 'nan', 'nan', 'nan');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO member_attendance () VALUES (2, 1, 1);\nDatabase State:\nCREATE TABLE member (Member_ID VARCHAR(1023), Name VARCHAR(1023), Nationality VARCHAR(1023), Role VARCHAR(1023));",
        "Response": "Table: member_attendance"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (6, 'OPS 3754', '19 Jun 2014', 'Out-of-focus area on some film.');\nDatabase State:\nCREATE TABLE machine (Machine_ID BIGINT, Making_Year BIGINT, Class VARCHAR(1023), Team VARCHAR(1023), Machine_series VARCHAR(1023), value_points DOUBLE, quality_rank BIGINT);\nCREATE TABLE repair (repair_ID BIGINT, name VARCHAR(1023), Launch_Date VARCHAR(1023), Notes VARCHAR(1023));\nCREATE TABLE repair_assignment (technician_id BIGINT, repair_ID BIGINT, Machine_ID BIGINT);\nCREATE TABLE technician (technician_id DOUBLE, Name VARCHAR(1023), Team VARCHAR(1023), Starting_Year DOUBLE, Age BIGINT);",
        "Response": "Table: Satellites"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (9, 1999, '125cc', 'Team Givi- Honda LCR', 'RS125', 171.0, 11);\nDatabase State:\nCREATE TABLE machine (Machine_ID BIGINT, Making_Year BIGINT, Class VARCHAR(1023), Team VARCHAR(1023), Machine_series VARCHAR(1023), value_points DOUBLE, quality_rank BIGINT);\nCREATE TABLE repair (repair_ID BIGINT, name VARCHAR(1023), Launch_Date VARCHAR(1023), Notes VARCHAR(1023));",
        "Response": "Table: machine"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (219790, 2011, 'M', 'A', '4y other', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');\nDatabase State:\nCREATE TABLE institution_details (unitid BIGINT, chronname VARCHAR(1023), city VARCHAR(1023), state VARCHAR(1023), level VARCHAR(1023), control VARCHAR(1023), basic VARCHAR(1023), hbcu VARCHAR(1023), flagship VARCHAR(1023), long_x DOUBLE, lat_y DOUBLE, site VARCHAR(1023), student_count BIGINT, awards_per_value DOUBLE, awards_per_state_value DOUBLE, awards_per_natl_value DOUBLE, exp_award_value BIGINT, exp_award_state_value BIGINT, exp_award_natl_value BIGINT, exp_award_percentile BIGINT, ft_pct DOUBLE, fte_value BIGINT, fte_percentile BIGINT, med_sat_value VARCHAR(1023), med_sat_percentile VARCHAR(1023), aid_value BIGINT, aid_percentile BIGINT, endow_value VARCHAR(1023), endow_percentile VARCHAR(1023), grad_100_value DOUBLE, grad_100_percentile BIGINT, grad_150_value DOUBLE, grad_150_percentile BIGINT, pell_value DOUBLE, pell_percentile BIGINT, retain_value DOUBLE, retain_percentile BIGINT, ft_fac_value DOUBLE, ft_fac_percentile BIGINT, vsa_year VARCHAR(1023), vsa_grad_after4_first VARCHAR(1023), vsa_grad_elsewhere_after4_first VARCHAR(1023), vsa_enroll_after4_first VARCHAR(1023), vsa_enroll_elsewhere_after4_first VARCHAR(1023), vsa_grad_after6_first VARCHAR(1023), vsa_grad_elsewhere_after6_first VARCHAR(1023), vsa_enroll_after6_first VARCHAR(1023), vsa_enroll_elsewhere_after6_first VARCHAR(1023), vsa_grad_after4_transfer VARCHAR(1023), vsa_grad_elsewhere_after4_transfer VARCHAR(1023), vsa_enroll_after4_transfer VARCHAR(1023), vsa_enroll_elsewhere_after4_transfer VARCHAR(1023), vsa_grad_after6_transfer VARCHAR(1023), vsa_grad_elsewhere_after6_transfer VARCHAR(1023), vsa_enroll_after6_transfer VARCHAR(1023), vsa_enroll_elsewhere_after6_transfer VARCHAR(1023), similar VARCHAR(1023), state_sector_ct BIGINT, carnegie_ct BIGINT, counted_pct VARCHAR(1023), nicknames VARCHAR(1023), cohort_size BIGINT);\nCREATE TABLE state_sector_details (stateid BIGINT, state VARCHAR(1023), state_post VARCHAR(1023), level VARCHAR(1023), control VARCHAR(1023), schools_count BIGINT, counted_pct VARCHAR(1023), awards_per_state_value VARCHAR(1023), awards_per_natl_value DOUBLE, exp_award_state_value VARCHAR(1023), exp_award_natl_value BIGINT, state_appr_value VARCHAR(1023), state_appr_rank VARCHAR(1023), grad_rate_rank VARCHAR(1023), awards_per_rank VARCHAR(1023));\nCREATE TABLE institution_grads (unitid BIGINT, year BIGINT, gender VARCHAR(1023), race VARCHAR(1023), cohort VARCHAR(1023), grad_cohort VARCHAR(1023), grad_100 VARCHAR(1023), grad_150 VARCHAR(1023), grad_100_rate VARCHAR(1023), grad_150_rate VARCHAR(1023));",
        "Response": "Table: InstitutionalGraduationRates"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO member () VALUES ('8', 'Corey Allen', 'United States', 'Cello');\nDatabase State:\nCREATE TABLE member (Member_ID VARCHAR(1023), Name VARCHAR(1023), Nationality VARCHAR(1023), Role VARCHAR(1023));\nCREATE TABLE member_attendance (Member_ID BIGINT, Performance_ID BIGINT, Num_of_Pieces BIGINT);",
        "Response": "Table: orchestra_members"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO 970s () VALUES ('970', 'year', '970', 'year', '970s', '969', '971', 'Category:970', '+0970-01-01T00:00:00Z', 'list of state leaders in 970');\nDatabase State:\nCREATE TABLE 970s (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));\nCREATE TABLE follows (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));",
        "Response": "Table: 970s"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO frameshift_truncation () VALUES ('VHL A56fs (c.166_167insA)', 'genetic variant', 'VHL', '1785', 'human chromosome 3', '10183697.0', '10183698.0', 'Frameshift Truncation', 'NC_000003.11:g.10183697_10183698insA');\nDatabase State:\nCREATE TABLE frameshift_truncation (label VARCHAR(1023), description VARCHAR(1023), biological_variant_of VARCHAR(1023), civic_variant_id VARCHAR(1023), chromosome VARCHAR(1023), genomic_start VARCHAR(1023), genomic_end VARCHAR(1023), instance_of VARCHAR(1023), hgvs_nomenclature VARCHAR(1023));",
        "Response": "Table: frameshift_truncation"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO PurchaseOrderDetail () VALUES (3237, 7132, '2014-06-23 00:00:00.0', 60, 495, 64.0, 3822.0, 60.0, 0.0, 60.0, '2014-06-16 00:00:00.0');\nDatabase State:\nCREATE TABLE Document (DocumentNode VARCHAR(1023), DocumentLevel BIGINT, Title VARCHAR(1023), Owner BIGINT, FolderFlag BIGINT, FileName VARCHAR(1023), FileExtension VARCHAR(1023), Revision VARCHAR(1023), ChangeNumber BIGINT, Status BIGINT, DocumentSummary VARCHAR(1023), Document BLOB, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTaxRate (SalesTaxRateID BIGINT, StateProvinceID BIGINT, TaxType BIGINT, TaxRate DOUBLE, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Address (AddressID BIGINT, AddressLine1 VARCHAR(1023), AddressLine2 VARCHAR(1023), City VARCHAR(1023), StateProvinceID BIGINT, PostalCode VARCHAR(1023), SpatialLocation VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductSubcategory (ProductSubcategoryID BIGINT, ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTerritoryHistory (BusinessEntityID BIGINT, TerritoryID BIGINT, StartDate DATETIME, EndDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SpecialOffer (SpecialOfferID BIGINT, Description VARCHAR(1023), DiscountPct DOUBLE, Type VARCHAR(1023), Category VARCHAR(1023), StartDate DATETIME, EndDate DATETIME, MinQty BIGINT, MaxQty BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ShipMethod (ShipMethodID BIGINT, Name VARCHAR(1023), ShipBase DOUBLE, ShipRate DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BillOfMaterials (BillOfMaterialsID BIGINT, ProductAssemblyID BIGINT, ComponentID BIGINT, StartDate DATETIME, EndDate DATETIME, UnitMeasureCode VARCHAR(1023), BOMLevel BIGINT, PerAssemblyQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE AddressType (AddressTypeID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Department (DepartmentID BIGINT, Name VARCHAR(1023), GroupName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductModelProductDescriptionCulture (ProductModelID BIGINT, ProductDescriptionID BIGINT, CultureID VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeaderSalesReason (SalesOrderID BIGINT, SalesReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE TransactionHistory (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Password (BusinessEntityID BIGINT, PasswordHash VARCHAR(1023), PasswordSalt VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityContact (BusinessEntityID BIGINT, PersonID BIGINT, ContactTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntity (BusinessEntityID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Vendor (BusinessEntityID BIGINT, AccountNumber VARCHAR(1023), Name VARCHAR(1023), CreditRating BIGINT, PreferredVendorStatus BIGINT, ActiveFlag BIGINT, PurchasingWebServiceURL VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Customer (CustomerID BIGINT, PersonID BIGINT, StoreID BIGINT, TerritoryID BIGINT, AccountNumber VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderDetail (PurchaseOrderID BIGINT, PurchaseOrderDetailID BIGINT, DueDate DATETIME, OrderQty BIGINT, ProductID BIGINT, UnitPrice DOUBLE, LineTotal DOUBLE, ReceivedQty DOUBLE, RejectedQty DOUBLE, StockedQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE CreditCard (CreditCardID BIGINT, CardType VARCHAR(1023), CardNumber VARCHAR(1023), ExpMonth BIGINT, ExpYear BIGINT, ModifiedDate DATETIME);\nCREATE TABLE EmployeePayHistory (BusinessEntityID BIGINT, RateChangeDate DATETIME, Rate DOUBLE, PayFrequency BIGINT, ModifiedDate DATETIME);\nCREATE TABLE EmployeeDepartmentHistory (BusinessEntityID BIGINT, DepartmentID BIGINT, ShiftID BIGINT, StartDate DATE, EndDate DATE, ModifiedDate DATETIME);\nCREATE TABLE SalesReason (SalesReasonID BIGINT, Name VARCHAR(1023), ReasonType VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Location (LocationID BIGINT, Name VARCHAR(1023), CostRate DOUBLE, Availability DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE WorkOrder (WorkOrderID BIGINT, ProductID BIGINT, OrderQty BIGINT, StockedQty BIGINT, ScrappedQty BIGINT, StartDate DATETIME, EndDate DATETIME, DueDate DATETIME, ScrapReasonID BIGINT, ModifiedDate DATETIME);\nCREATE TABLE Currency (CurrencyCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Product (ProductID BIGINT, Name VARCHAR(1023), ProductNumber VARCHAR(1023), MakeFlag BIGINT, FinishedGoodsFlag BIGINT, Color VARCHAR(1023), SafetyStockLevel BIGINT, ReorderPoint BIGINT, StandardCost DOUBLE, ListPrice DOUBLE, Size VARCHAR(1023), SizeUnitMeasureCode VARCHAR(1023), WeightUnitMeasureCode VARCHAR(1023), Weight DOUBLE, DaysToManufacture BIGINT, ProductLine VARCHAR(1023), Class VARCHAR(1023), Style VARCHAR(1023), ProductSubcategoryID BIGINT, ProductModelID BIGINT, SellStartDate DATETIME, SellEndDate DATETIME, DiscontinuedDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Culture (CultureID VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductCostHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, StandardCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderHeader (PurchaseOrderID BIGINT, RevisionNumber BIGINT, Status BIGINT, EmployeeID BIGINT, VendorID BIGINT, ShipMethodID BIGINT, OrderDate DATETIME, ShipDate DATETIME, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE WorkOrderRouting (WorkOrderID BIGINT, ProductID BIGINT, OperationSequence BIGINT, LocationID BIGINT, ScheduledStartDate DATETIME, ScheduledEndDate DATETIME, ActualStartDate DATETIME, ActualEndDate DATETIME, ActualResourceHrs DOUBLE, PlannedCost DOUBLE, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ProductProductPhoto (ProductID BIGINT, ProductPhotoID BIGINT, Primary BIGINT, ModifiedDate DATETIME);\nCREATE TABLE EmailAddress (BusinessEntityID BIGINT, EmailAddressID BIGINT, EmailAddress VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderDetail (SalesOrderID BIGINT, SalesOrderDetailID BIGINT, CarrierTrackingNumber VARCHAR(1023), OrderQty BIGINT, ProductID BIGINT, SpecialOfferID BIGINT, UnitPrice DOUBLE, UnitPriceDiscount DOUBLE, LineTotal DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductPhoto (ProductPhotoID BIGINT, ThumbNailPhoto BLOB, ThumbnailPhotoFileName VARCHAR(1023), LargePhoto BLOB, LargePhotoFileName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ContactType (ContactTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE StateProvince (StateProvinceID BIGINT, StateProvinceCode VARCHAR(1023), CountryRegionCode VARCHAR(1023), IsOnlyStateProvinceFlag BIGINT, Name VARCHAR(1023), TerritoryID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductReview (ProductReviewID BIGINT, ProductID BIGINT, ReviewerName VARCHAR(1023), ReviewDate DATETIME, EmailAddress VARCHAR(1023), Rating BIGINT, Comments VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE UnitMeasure (UnitMeasureCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Person (BusinessEntityID BIGINT, PersonType VARCHAR(1023), NameStyle BIGINT, Title VARCHAR(1023), FirstName VARCHAR(1023), MiddleName VARCHAR(1023), LastName VARCHAR(1023), Suffix VARCHAR(1023), EmailPromotion BIGINT, AdditionalContactInfo VARCHAR(1023), Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ScrapReason (ScrapReasonID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTerritory (TerritoryID BIGINT, Name VARCHAR(1023), CountryRegionCode VARCHAR(1023), Group VARCHAR(1023), SalesYTD DOUBLE, SalesLastYear DOUBLE, CostYTD DOUBLE, CostLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE TransactionHistoryArchive (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE PhoneNumberType (PhoneNumberTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesPersonQuotaHistory (BusinessEntityID BIGINT, QuotaDate DATETIME, SalesQuota DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductVendor (ProductID BIGINT, BusinessEntityID BIGINT, AverageLeadTime BIGINT, StandardPrice DOUBLE, LastReceiptCost DOUBLE, LastReceiptDate DATETIME, MinOrderQty BIGINT, MaxOrderQty BIGINT, OnOrderQty BIGINT, UnitMeasureCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductDocument (ProductID BIGINT, DocumentNode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE JobCandidate (JobCandidateID BIGINT, BusinessEntityID BIGINT, Resume VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityAddress (BusinessEntityID BIGINT, AddressID BIGINT, AddressTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Store (BusinessEntityID BIGINT, Name VARCHAR(1023), SalesPersonID BIGINT, Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductInventory (ProductID BIGINT, LocationID BIGINT, Shelf VARCHAR(1023), Bin BIGINT, Quantity BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CurrencyRate (CurrencyRateID BIGINT, CurrencyRateDate DATETIME, FromCurrencyCode VARCHAR(1023), ToCurrencyCode VARCHAR(1023), AverageRate DOUBLE, EndOfDayRate DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ShoppingCartItem (ShoppingCartItemID BIGINT, ShoppingCartID VARCHAR(1023), Quantity BIGINT, ProductID BIGINT, DateCreated DATETIME, ModifiedDate DATETIME);\nCREATE TABLE ProductCategory (ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesOrderHeader (SalesOrderID BIGINT, RevisionNumber BIGINT, OrderDate DATETIME, DueDate DATETIME, ShipDate DATETIME, Status BIGINT, OnlineOrderFlag BIGINT, SalesOrderNumber VARCHAR(1023), PurchaseOrderNumber VARCHAR(1023), AccountNumber VARCHAR(1023), CustomerID BIGINT, SalesPersonID BIGINT, TerritoryID BIGINT, BillToAddressID BIGINT, ShipToAddressID BIGINT, ShipMethodID BIGINT, CreditCardID BIGINT, CreditCardApprovalCode VARCHAR(1023), CurrencyRateID BIGINT, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, Comment VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CountryRegionCurrency (CountryRegionCode VARCHAR(1023), CurrencyCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SpecialOfferProduct (SpecialOfferID BIGINT, ProductID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Shift (ShiftID BIGINT, Name VARCHAR(1023), StartTime VARCHAR(1023), EndTime VARCHAR(1023), ModifiedDate DATETIME);",
        "Response": "Table: PurchaseOrderDetail"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO organization () VALUES ('Ministry of Foreign Relations', 'Performs the diplomatic relations of the Republic of Uruguay with other states', 'foreign affairs ministry', 'Uruguay', 'Minister of Foreign Affairs', '+1828-01-01T00:00:00Z', 'Palacio Santos', 'https://www.gub.uy/ministerio-relaciones-exteriores', 'Uruguay', 'nan');\nDatabase State:\nCREATE TABLE organization (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), country VARCHAR(1023), office_held_by_head_of_the_organization VARCHAR(1023), inception VARCHAR(1023), headquarters_location VARCHAR(1023), official_website VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), google_knowledge_graph_id VARCHAR(1023));",
        "Response": "Table: UruguayanOrganizations"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Ministry of Education and Culture', 'Uruguayan ministry', 'ministry of education and culture', 'Uruguay', 'Minister of Education and Culture of Uruguay', '+1848-02-26T00:00:00Z', 'Montevideo', 'http://www.mec.gub.uy/', 'Uruguay', '/g/120kndgd');\nDatabase State:\nCREATE TABLE organization_leader (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), subclass_of VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), part_of VARCHAR(1023), organization_directed_by_the_office_or_position VARCHAR(1023));",
        "Response": "Table: organization"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('Minister of the Environment of Uruguay', 'nan', 'position', 'environment minister', 'Uruguay', 'Cabinet of Uruguay', 'Ministry of Environment of Uruguay');\nDatabase State:\nCREATE TABLE cabinet_of_uruguay (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), subclass_of VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), part_of VARCHAR(1023), organization_directed_by_the_office_or_position VARCHAR(1023));\nCREATE TABLE organization_leader (label VARCHAR(1023), description VARCHAR(1023), instance_of VARCHAR(1023), subclass_of VARCHAR(1023), applies_to_jurisdiction VARCHAR(1023), part_of VARCHAR(1023), organization_directed_by_the_office_or_position VARCHAR(1023));",
        "Response": "Table: Positions"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES ('52bc242a-0b57-422b-9112-248dadfce99a', 'f4a8bb95-c09a-498b-8915-beb35ac15290', '2008-04-28', 'temp organization', 'f4a8bb95-c09a-498b-8915-beb35ac15290', NULL, 100);\nDatabase State:\nCREATE TABLE conditions (START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE immunizations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE patients (patient VARCHAR(1023), birthdate DATE, deathdate DATE, ssn VARCHAR(1023), drivers VARCHAR(1023), passport VARCHAR(1023), prefix VARCHAR(1023), first VARCHAR(1023), last VARCHAR(1023), suffix VARCHAR(1023), maiden VARCHAR(1023), marital VARCHAR(1023), race VARCHAR(1023), ethnicity VARCHAR(1023), gender VARCHAR(1023), birthplace VARCHAR(1023), address VARCHAR(1023));\nCREATE TABLE allergies (START VARCHAR(1023), STOP VARCHAR(1023), PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023));\nCREATE TABLE careplans (ID VARCHAR(1023), START DATE, STOP DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE DOUBLE, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE all_prevalences (ITEM VARCHAR(1023), POPULATION_TYPE VARCHAR(1023), OCCURRENCES BIGINT, POPULATION_COUNT BIGINT, PREVALENCE_RATE DOUBLE, PREVALENCE_PERCENTAGE DOUBLE);\nCREATE TABLE claims (ID VARCHAR(1023), PATIENT VARCHAR(1023), BILLABLEPERIOD DATE, ORGANIZATION VARCHAR(1023), ENCOUNTER VARCHAR(1023), DIAGNOSIS VARCHAR(1023), TOTAL BIGINT);\nCREATE TABLE procedures (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));\nCREATE TABLE observations (DATE DATE, PATIENT VARCHAR(1023), ENCOUNTER VARCHAR(1023), CODE VARCHAR(1023), DESCRIPTION VARCHAR(1023), VALUE DOUBLE, UNITS VARCHAR(1023));\nCREATE TABLE encounters (ID VARCHAR(1023), DATE DATE, PATIENT VARCHAR(1023), CODE BIGINT, DESCRIPTION VARCHAR(1023), REASONCODE BIGINT, REASONDESCRIPTION VARCHAR(1023));",
        "Response": "Table: MedicalClaims"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO followed_by () VALUES ('979', 'year', '979', 'year', '970s', '978', '980', 'Category:979', '+0979-01-01T00:00:00Z', 'list of state leaders in 979');\nDatabase State:\nCREATE TABLE follows (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));\nCREATE TABLE 970s (label VARCHAR(1023), description VARCHAR(1023), commons_category VARCHAR(1023), instance_of VARCHAR(1023), part_of VARCHAR(1023), follows VARCHAR(1023), followed_by VARCHAR(1023), topics_main_category VARCHAR(1023), point_in_time VARCHAR(1023), has_list VARCHAR(1023));",
        "Response": "Table: followed_by"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO institution_grads () VALUES (230728, 2004, 'F', 'H', '4y other', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');\nDatabase State:\nCREATE TABLE institution_grads (unitid BIGINT, year BIGINT, gender VARCHAR(1023), race VARCHAR(1023), cohort VARCHAR(1023), grad_cohort VARCHAR(1023), grad_100 VARCHAR(1023), grad_150 VARCHAR(1023), grad_100_rate VARCHAR(1023), grad_150_rate VARCHAR(1023));",
        "Response": "Table: InstitutionalGraduationRates"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO () VALUES (117284, 921, 56249, 1, '2013-09-15 00:00:00.0', 'S', 1, 5.0, '2013-09-15 00:00:00.0');\nDatabase State:\nCREATE TABLE Currency (CurrencyCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductPhoto (ProductPhotoID BIGINT, ThumbNailPhoto BLOB, ThumbnailPhotoFileName VARCHAR(1023), LargePhoto BLOB, LargePhotoFileName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Password (BusinessEntityID BIGINT, PasswordHash VARCHAR(1023), PasswordSalt VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Store (BusinessEntityID BIGINT, Name VARCHAR(1023), SalesPersonID BIGINT, Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SpecialOffer (SpecialOfferID BIGINT, Description VARCHAR(1023), DiscountPct DOUBLE, Type VARCHAR(1023), Category VARCHAR(1023), StartDate DATETIME, EndDate DATETIME, MinQty BIGINT, MaxQty BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityContact (BusinessEntityID BIGINT, PersonID BIGINT, ContactTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Vendor (BusinessEntityID BIGINT, AccountNumber VARCHAR(1023), Name VARCHAR(1023), CreditRating BIGINT, PreferredVendorStatus BIGINT, ActiveFlag BIGINT, PurchasingWebServiceURL VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BusinessEntityAddress (BusinessEntityID BIGINT, AddressID BIGINT, AddressTypeID BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductDocument (ProductID BIGINT, DocumentNode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductModel (ProductModelID BIGINT, Name VARCHAR(1023), CatalogDescription VARCHAR(1023), Instructions VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductModelProductDescriptionCulture (ProductModelID BIGINT, ProductDescriptionID BIGINT, CultureID VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmployeePayHistory (BusinessEntityID BIGINT, RateChangeDate DATETIME, Rate DOUBLE, PayFrequency BIGINT, ModifiedDate DATETIME);\nCREATE TABLE UnitMeasure (UnitMeasureCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE JobCandidate (JobCandidateID BIGINT, BusinessEntityID BIGINT, Resume VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Department (DepartmentID BIGINT, Name VARCHAR(1023), GroupName VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Address (AddressID BIGINT, AddressLine1 VARCHAR(1023), AddressLine2 VARCHAR(1023), City VARCHAR(1023), StateProvinceID BIGINT, PostalCode VARCHAR(1023), SpatialLocation VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderDetail (PurchaseOrderID BIGINT, PurchaseOrderDetailID BIGINT, DueDate DATETIME, OrderQty BIGINT, ProductID BIGINT, UnitPrice DOUBLE, LineTotal DOUBLE, ReceivedQty DOUBLE, RejectedQty DOUBLE, StockedQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ProductReview (ProductReviewID BIGINT, ProductID BIGINT, ReviewerName VARCHAR(1023), ReviewDate DATETIME, EmailAddress VARCHAR(1023), Rating BIGINT, Comments VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Employee (BusinessEntityID BIGINT, NationalIDNumber VARCHAR(1023), LoginID VARCHAR(1023), OrganizationNode VARCHAR(1023), OrganizationLevel BIGINT, JobTitle VARCHAR(1023), BirthDate DATE, MaritalStatus VARCHAR(1023), Gender VARCHAR(1023), HireDate DATE, SalariedFlag BIGINT, VacationHours BIGINT, SickLeaveHours BIGINT, CurrentFlag BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ShoppingCartItem (ShoppingCartItemID BIGINT, ShoppingCartID VARCHAR(1023), Quantity BIGINT, ProductID BIGINT, DateCreated DATETIME, ModifiedDate DATETIME);\nCREATE TABLE SalesTaxRate (SalesTaxRateID BIGINT, StateProvinceID BIGINT, TaxType BIGINT, TaxRate DOUBLE, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PurchaseOrderHeader (PurchaseOrderID BIGINT, RevisionNumber BIGINT, Status BIGINT, EmployeeID BIGINT, VendorID BIGINT, ShipMethodID BIGINT, OrderDate DATETIME, ShipDate DATETIME, SubTotal DOUBLE, TaxAmt DOUBLE, Freight DOUBLE, TotalDue DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE ProductInventory (ProductID BIGINT, LocationID BIGINT, Shelf VARCHAR(1023), Bin BIGINT, Quantity BIGINT, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmailAddress (BusinessEntityID BIGINT, EmailAddressID BIGINT, EmailAddress VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductProductPhoto (ProductID BIGINT, ProductPhotoID BIGINT, Primary BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ProductCostHistory (ProductID BIGINT, StartDate DATE, EndDate DATE, StandardCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE AddressType (AddressTypeID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductSubcategory (ProductSubcategoryID BIGINT, ProductCategoryID BIGINT, Name VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ProductVendor (ProductID BIGINT, BusinessEntityID BIGINT, AverageLeadTime BIGINT, StandardPrice DOUBLE, LastReceiptCost DOUBLE, LastReceiptDate DATETIME, MinOrderQty BIGINT, MaxOrderQty BIGINT, OnOrderQty BIGINT, UnitMeasureCode VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE ScrapReason (ScrapReasonID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE EmployeeDepartmentHistory (BusinessEntityID BIGINT, DepartmentID BIGINT, ShiftID BIGINT, StartDate DATE, EndDate DATE, ModifiedDate DATETIME);\nCREATE TABLE SalesTerritoryHistory (BusinessEntityID BIGINT, TerritoryID BIGINT, StartDate DATETIME, EndDate DATETIME, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Culture (CultureID VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE BillOfMaterials (BillOfMaterialsID BIGINT, ProductAssemblyID BIGINT, ComponentID BIGINT, StartDate DATETIME, EndDate DATETIME, UnitMeasureCode VARCHAR(1023), BOMLevel BIGINT, PerAssemblyQty DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE CountryRegion (CountryRegionCode VARCHAR(1023), Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE PhoneNumberType (PhoneNumberTypeID BIGINT, Name VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Customer (CustomerID BIGINT, PersonID BIGINT, StoreID BIGINT, TerritoryID BIGINT, AccountNumber VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE Shift (ShiftID BIGINT, Name VARCHAR(1023), StartTime VARCHAR(1023), EndTime VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CurrencyRate (CurrencyRateID BIGINT, CurrencyRateDate DATETIME, FromCurrencyCode VARCHAR(1023), ToCurrencyCode VARCHAR(1023), AverageRate DOUBLE, EndOfDayRate DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Document (DocumentNode VARCHAR(1023), DocumentLevel BIGINT, Title VARCHAR(1023), Owner BIGINT, FolderFlag BIGINT, FileName VARCHAR(1023), FileExtension VARCHAR(1023), Revision VARCHAR(1023), ChangeNumber BIGINT, Status BIGINT, DocumentSummary VARCHAR(1023), Document BLOB, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE TransactionHistory (TransactionID BIGINT, ProductID BIGINT, ReferenceOrderID BIGINT, ReferenceOrderLineID BIGINT, TransactionDate DATETIME, TransactionType VARCHAR(1023), Quantity BIGINT, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE Person (BusinessEntityID BIGINT, PersonType VARCHAR(1023), NameStyle BIGINT, Title VARCHAR(1023), FirstName VARCHAR(1023), MiddleName VARCHAR(1023), LastName VARCHAR(1023), Suffix VARCHAR(1023), EmailPromotion BIGINT, AdditionalContactInfo VARCHAR(1023), Demographics VARCHAR(1023), rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CreditCard (CreditCardID BIGINT, CardType VARCHAR(1023), CardNumber VARCHAR(1023), ExpMonth BIGINT, ExpYear BIGINT, ModifiedDate DATETIME);\nCREATE TABLE ShipMethod (ShipMethodID BIGINT, Name VARCHAR(1023), ShipBase DOUBLE, ShipRate DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE WorkOrderRouting (WorkOrderID BIGINT, ProductID BIGINT, OperationSequence BIGINT, LocationID BIGINT, ScheduledStartDate DATETIME, ScheduledEndDate DATETIME, ActualStartDate DATETIME, ActualEndDate DATETIME, ActualResourceHrs DOUBLE, PlannedCost DOUBLE, ActualCost DOUBLE, ModifiedDate DATETIME);\nCREATE TABLE SalesPerson (BusinessEntityID BIGINT, TerritoryID BIGINT, SalesQuota DOUBLE, Bonus DOUBLE, CommissionPct DOUBLE, SalesYTD DOUBLE, SalesLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE SalesTerritory (TerritoryID BIGINT, Name VARCHAR(1023), CountryRegionCode VARCHAR(1023), Group VARCHAR(1023), SalesYTD DOUBLE, SalesLastYear DOUBLE, CostYTD DOUBLE, CostLastYear DOUBLE, rowguid VARCHAR(1023), ModifiedDate DATETIME);\nCREATE TABLE CountryRegionCurrency (CountryRegionCode VARCHAR(1023), CurrencyCode VARCHAR(1023), ModifiedDate DATETIME);",
        "Response": "Table: TransactionHistory"
    }
]