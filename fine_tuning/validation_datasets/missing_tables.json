[
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (SalesOrderID, SalesOrderDetailID, CarrierTrackingNumber, OrderQty, ProductID, SpecialOfferID, UnitPrice, UnitPriceDiscount, LineTotal, rowguid, ModifiedDate)  VALUES (71799, 111120, 'EBC1-4D4C-8E', 4, 935, 1, 24.0, 0.0, 97.0, '171A7CFE-FC38-42F3-A512-083F0DFEE7CA', '2014-05-01 00:00:00.0');\nDatabase State:\n- Table: Person, Columns: [BusinessEntityID, PersonType, NameStyle, Title, FirstName, MiddleName, LastName, Suffix, EmailPromotion, AdditionalContactInfo, Demographics, rowguid, ModifiedDate]\n- Table: Location, Columns: [LocationID, Name, CostRate, Availability, ModifiedDate]\n- Table: BusinessEntityAddress, Columns: [BusinessEntityID, AddressID, AddressTypeID, rowguid, ModifiedDate]\n- Table: SalesOrderDetail, Columns: [SalesOrderID, SalesOrderDetailID, CarrierTrackingNumber, OrderQty, ProductID, SpecialOfferID, UnitPrice, UnitPriceDiscount, LineTotal, rowguid, ModifiedDate]\n- Table: ProductListPriceHistory, Columns: [ProductID, StartDate, EndDate, ListPrice, ModifiedDate]\n- Table: BusinessEntity, Columns: [BusinessEntityID, rowguid, ModifiedDate]\n- Table: Culture, Columns: [CultureID, Name, ModifiedDate]\n- Table: ProductDocument, Columns: [ProductID, DocumentNode, ModifiedDate]\n- Table: ProductVendor, Columns: [ProductID, BusinessEntityID, AverageLeadTime, StandardPrice, LastReceiptCost, LastReceiptDate, MinOrderQty, MaxOrderQty, OnOrderQty, UnitMeasureCode, ModifiedDate]\n- Table: ProductModel, Columns: [ProductModelID, Name, CatalogDescription, Instructions, rowguid, ModifiedDate]\n- Table: Customer, Columns: [CustomerID, PersonID, StoreID, TerritoryID, AccountNumber, rowguid, ModifiedDate]\n- Table: Vendor, Columns: [BusinessEntityID, AccountNumber, Name, CreditRating, PreferredVendorStatus, ActiveFlag, PurchasingWebServiceURL, ModifiedDate]\n- Table: WorkOrder, Columns: [WorkOrderID, ProductID, OrderQty, StockedQty, ScrappedQty, StartDate, EndDate, DueDate, ScrapReasonID, ModifiedDate]\n- Table: ProductSubcategory, Columns: [ProductSubcategoryID, ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: WorkOrderRouting, Columns: [WorkOrderID, ProductID, OperationSequence, LocationID, ScheduledStartDate, ScheduledEndDate, ActualStartDate, ActualEndDate, ActualResourceHrs, PlannedCost, ActualCost, ModifiedDate]\n- Table: SalesOrderHeader, Columns: [SalesOrderID, RevisionNumber, OrderDate, DueDate, ShipDate, Status, OnlineOrderFlag, SalesOrderNumber, PurchaseOrderNumber, AccountNumber, CustomerID, SalesPersonID, TerritoryID, BillToAddressID, ShipToAddressID, ShipMethodID, CreditCardID, CreditCardApprovalCode, CurrencyRateID, SubTotal, TaxAmt, Freight, TotalDue, Comment, rowguid, ModifiedDate]\n- Table: SalesTaxRate, Columns: [SalesTaxRateID, StateProvinceID, TaxType, TaxRate, Name, rowguid, ModifiedDate]\n- Table: Shift, Columns: [ShiftID, Name, StartTime, EndTime, ModifiedDate]\n- Table: UnitMeasure, Columns: [UnitMeasureCode, Name, ModifiedDate]\n- Table: ProductReview, Columns: [ProductReviewID, ProductID, ReviewerName, ReviewDate, EmailAddress, Rating, Comments, ModifiedDate]",
        "Response": "Table: SalesOrderDetail"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO technician (technician_id, Name, Team, Starting_Year, Age)  VALUES (5.0, 'Charlie Hollocher', 'CHC', 2002.0, 35);\nDatabase State:\n- Table: repair, Columns: [repair_ID, name, Launch_Date, Notes]\n- Table: machine, Columns: [Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]\n- Table: technician, Columns: [technician_id, Name, Team, Starting_Year, Age]\n- Table: repair_assignment, Columns: [technician_id, repair_ID, Machine_ID]",
        "Response": "Table: technician"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO SalesOrderHeaderSalesReason (SalesOrderID, SalesReasonID, ModifiedDate)  VALUES (70327, 1, '2014-04-10 00:00:00.0');\nDatabase State:\n- Table: PersonCreditCard, Columns: [BusinessEntityID, CreditCardID, ModifiedDate]\n- Table: Department, Columns: [DepartmentID, Name, GroupName, ModifiedDate]\n- Table: BusinessEntity, Columns: [BusinessEntityID, rowguid, ModifiedDate]\n- Table: Shift, Columns: [ShiftID, Name, StartTime, EndTime, ModifiedDate]\n- Table: SpecialOffer, Columns: [SpecialOfferID, Description, DiscountPct, Type, Category, StartDate, EndDate, MinQty, MaxQty, rowguid, ModifiedDate]\n- Table: SalesTaxRate, Columns: [SalesTaxRateID, StateProvinceID, TaxType, TaxRate, Name, rowguid, ModifiedDate]\n- Table: SalesPersonQuotaHistory, Columns: [BusinessEntityID, QuotaDate, SalesQuota, rowguid, ModifiedDate]\n- Table: Vendor, Columns: [BusinessEntityID, AccountNumber, Name, CreditRating, PreferredVendorStatus, ActiveFlag, PurchasingWebServiceURL, ModifiedDate]\n- Table: EmployeePayHistory, Columns: [BusinessEntityID, RateChangeDate, Rate, PayFrequency, ModifiedDate]\n- Table: ScrapReason, Columns: [ScrapReasonID, Name, ModifiedDate]\n- Table: SalesOrderHeader, Columns: [SalesOrderID, RevisionNumber, OrderDate, DueDate, ShipDate, Status, OnlineOrderFlag, SalesOrderNumber, PurchaseOrderNumber, AccountNumber, CustomerID, SalesPersonID, TerritoryID, BillToAddressID, ShipToAddressID, ShipMethodID, CreditCardID, CreditCardApprovalCode, CurrencyRateID, SubTotal, TaxAmt, Freight, TotalDue, Comment, rowguid, ModifiedDate]\n- Table: ProductListPriceHistory, Columns: [ProductID, StartDate, EndDate, ListPrice, ModifiedDate]\n- Table: SalesTerritory, Columns: [TerritoryID, Name, CountryRegionCode, Group, SalesYTD, SalesLastYear, CostYTD, CostLastYear, rowguid, ModifiedDate]\n- Table: PurchaseOrderDetail, Columns: [PurchaseOrderID, PurchaseOrderDetailID, DueDate, OrderQty, ProductID, UnitPrice, LineTotal, ReceivedQty, RejectedQty, StockedQty, ModifiedDate]\n- Table: Document, Columns: [DocumentNode, DocumentLevel, Title, Owner, FolderFlag, FileName, FileExtension, Revision, ChangeNumber, Status, DocumentSummary, Document, rowguid, ModifiedDate]\n- Table: TransactionHistory, Columns: [TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate]\n- Table: CountryRegionCurrency, Columns: [CountryRegionCode, CurrencyCode, ModifiedDate]\n- Table: ProductModelProductDescriptionCulture, Columns: [ProductModelID, ProductDescriptionID, CultureID, ModifiedDate]\n- Table: ProductCategory, Columns: [ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: ShoppingCartItem, Columns: [ShoppingCartItemID, ShoppingCartID, Quantity, ProductID, DateCreated, ModifiedDate]\n- Table: Customer, Columns: [CustomerID, PersonID, StoreID, TerritoryID, AccountNumber, rowguid, ModifiedDate]\n- Table: SalesOrderHeaderSalesReason, Columns: [SalesOrderID, SalesReasonID, ModifiedDate]\n- Table: ProductReview, Columns: [ProductReviewID, ProductID, ReviewerName, ReviewDate, EmailAddress, Rating, Comments, ModifiedDate]\n- Table: ProductProductPhoto, Columns: [ProductID, ProductPhotoID, Primary, ModifiedDate]\n- Table: SalesPerson, Columns: [BusinessEntityID, TerritoryID, SalesQuota, Bonus, CommissionPct, SalesYTD, SalesLastYear, rowguid, ModifiedDate]\n- Table: CurrencyRate, Columns: [CurrencyRateID, CurrencyRateDate, FromCurrencyCode, ToCurrencyCode, AverageRate, EndOfDayRate, ModifiedDate]\n- Table: ShipMethod, Columns: [ShipMethodID, Name, ShipBase, ShipRate, rowguid, ModifiedDate]\n- Table: EmailAddress, Columns: [BusinessEntityID, EmailAddressID, EmailAddress, rowguid, ModifiedDate]\n- Table: AddressType, Columns: [AddressTypeID, Name, rowguid, ModifiedDate]\n- Table: EmployeeDepartmentHistory, Columns: [BusinessEntityID, DepartmentID, ShiftID, StartDate, EndDate, ModifiedDate]\n- Table: ProductModel, Columns: [ProductModelID, Name, CatalogDescription, Instructions, rowguid, ModifiedDate]\n- Table: SalesTerritoryHistory, Columns: [BusinessEntityID, TerritoryID, StartDate, EndDate, rowguid, ModifiedDate]\n- Table: WorkOrder, Columns: [WorkOrderID, ProductID, OrderQty, StockedQty, ScrappedQty, StartDate, EndDate, DueDate, ScrapReasonID, ModifiedDate]\n- Table: Store, Columns: [BusinessEntityID, Name, SalesPersonID, Demographics, rowguid, ModifiedDate]\n- Table: Employee, Columns: [BusinessEntityID, NationalIDNumber, LoginID, OrganizationNode, OrganizationLevel, JobTitle, BirthDate, MaritalStatus, Gender, HireDate, SalariedFlag, VacationHours, SickLeaveHours, CurrentFlag, rowguid, ModifiedDate]\n- Table: Person, Columns: [BusinessEntityID, PersonType, NameStyle, Title, FirstName, MiddleName, LastName, Suffix, EmailPromotion, AdditionalContactInfo, Demographics, rowguid, ModifiedDate]\n- Table: SpecialOfferProduct, Columns: [SpecialOfferID, ProductID, rowguid, ModifiedDate]\n- Table: SalesOrderDetail, Columns: [SalesOrderID, SalesOrderDetailID, CarrierTrackingNumber, OrderQty, ProductID, SpecialOfferID, UnitPrice, UnitPriceDiscount, LineTotal, rowguid, ModifiedDate]\n- Table: ProductDescription, Columns: [ProductDescriptionID, Description, rowguid, ModifiedDate]\n- Table: ContactType, Columns: [ContactTypeID, Name, ModifiedDate]\n- Table: ProductDocument, Columns: [ProductID, DocumentNode, ModifiedDate]\n- Table: ProductSubcategory, Columns: [ProductSubcategoryID, ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: Password, Columns: [BusinessEntityID, PasswordHash, PasswordSalt, rowguid, ModifiedDate]\n- Table: ProductVendor, Columns: [ProductID, BusinessEntityID, AverageLeadTime, StandardPrice, LastReceiptCost, LastReceiptDate, MinOrderQty, MaxOrderQty, OnOrderQty, UnitMeasureCode, ModifiedDate]\n- Table: Location, Columns: [LocationID, Name, CostRate, Availability, ModifiedDate]\n- Table: Currency, Columns: [CurrencyCode, Name, ModifiedDate]\n- Table: UnitMeasure, Columns: [UnitMeasureCode, Name, ModifiedDate]\n- Table: Address, Columns: [AddressID, AddressLine1, AddressLine2, City, StateProvinceID, PostalCode, SpatialLocation, rowguid, ModifiedDate]\n- Table: CreditCard, Columns: [CreditCardID, CardType, CardNumber, ExpMonth, ExpYear, ModifiedDate]\n- Table: ProductCostHistory, Columns: [ProductID, StartDate, EndDate, StandardCost, ModifiedDate]\n- Table: Product, Columns: [ProductID, Name, ProductNumber, MakeFlag, FinishedGoodsFlag, Color, SafetyStockLevel, ReorderPoint, StandardCost, ListPrice, Size, SizeUnitMeasureCode, WeightUnitMeasureCode, Weight, DaysToManufacture, ProductLine, Class, Style, ProductSubcategoryID, ProductModelID, SellStartDate, SellEndDate, DiscontinuedDate, rowguid, ModifiedDate]\n- Table: BillOfMaterials, Columns: [BillOfMaterialsID, ProductAssemblyID, ComponentID, StartDate, EndDate, UnitMeasureCode, BOMLevel, PerAssemblyQty, ModifiedDate]\n- Table: WorkOrderRouting, Columns: [WorkOrderID, ProductID, OperationSequence, LocationID, ScheduledStartDate, ScheduledEndDate, ActualStartDate, ActualEndDate, ActualResourceHrs, PlannedCost, ActualCost, ModifiedDate]\n- Table: ProductPhoto, Columns: [ProductPhotoID, ThumbNailPhoto, ThumbnailPhotoFileName, LargePhoto, LargePhotoFileName, ModifiedDate]\n- Table: PurchaseOrderHeader, Columns: [PurchaseOrderID, RevisionNumber, Status, EmployeeID, VendorID, ShipMethodID, OrderDate, ShipDate, SubTotal, TaxAmt, Freight, TotalDue, ModifiedDate]\n- Table: StateProvince, Columns: [StateProvinceID, StateProvinceCode, CountryRegionCode, IsOnlyStateProvinceFlag, Name, TerritoryID, rowguid, ModifiedDate]\n- Table: CountryRegion, Columns: [CountryRegionCode, Name, ModifiedDate]\n- Table: Culture, Columns: [CultureID, Name, ModifiedDate]\n- Table: SalesReason, Columns: [SalesReasonID, Name, ReasonType, ModifiedDate]\n- Table: TransactionHistoryArchive, Columns: [TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate]\n- Table: BusinessEntityAddress, Columns: [BusinessEntityID, AddressID, AddressTypeID, rowguid, ModifiedDate]\n- Table: ProductInventory, Columns: [ProductID, LocationID, Shelf, Bin, Quantity, rowguid, ModifiedDate]",
        "Response": "Table: SalesOrderHeaderSalesReason"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO 970s (label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list)  VALUES ('979', 'year', '979', 'year', '970s', '978', '980', 'Category:979', '+0979-01-01T00:00:00Z', 'list of state leaders in 979');\nDatabase State:\n- Table: followed_by, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]",
        "Response": "Table: 970s"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Record_ID, Pilot_ID, Aircraft_ID, Date)  VALUES (6, 1, 5, '2008/01/04');\nDatabase State:\n- Table: pilot_record, Columns: [Record_ID, Pilot_ID, Aircraft_ID, Date]",
        "Response": "Table: pilot_record"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_OBJ_ATT (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID)  VALUES (2343495, 648, 17);\nDatabase State:\n- Table: IMG_REL, Columns: [IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID]\n- Table: ATT_CLASSES, Columns: [ATT_CLASS_ID, ATT_CLASS]\n- Table: IMG_OBJ_ATT, Columns: [IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID]\n- Table: IMG_OBJ, Columns: [IMG_ID, OBJ_SAMPLE_ID, OBJ_CLASS_ID, X, Y, W, H]\n- Table: PRED_CLASSES, Columns: [PRED_CLASS_ID, PRED_CLASS]\n- Table: OBJ_CLASSES, Columns: [OBJ_CLASS_ID, OBJ_CLASS]",
        "Response": "Table: IMG_OBJ_ATT"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (BusinessEntityID, PersonType, NameStyle, Title, FirstName, MiddleName, LastName, Suffix, EmailPromotion, AdditionalContactInfo, Demographics, rowguid, ModifiedDate)  VALUES (7845, 'IN', 0, NULL, 'Faith', NULL, 'Hayes', NULL, 0, NULL, '<IndividualSurvey xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"><TotalPurchaseYTD>2415.7618</TotalPurchaseYTD><DateFirstPurchase>2002-11-13Z</DateFirstPurchase><BirthDate>1968-04-25Z</BirthDate><MaritalStatus>S</MaritalStatus><YearlyIncome>greater than 100000</YearlyIncome><Gender>F</Gender><TotalChildren>1</TotalChildren><NumberChildrenAtHome>0</NumberChildrenAtHome><Education>Graduate Degree</Education><Occupation>Management</Occupation><HomeOwnerFlag>0</HomeOwnerFlag><NumberCarsOwned>2</NumberCarsOwned><CommuteDistance>0-1 Miles</CommuteDistance></IndividualSurvey>', '40A58EC3-F8A2-4FE9-A21B-17519A526103', '2012-10-12 00:00:00.0');\nDatabase State:\n- Table: TransactionHistory, Columns: [TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate]\n- Table: SalesPersonQuotaHistory, Columns: [BusinessEntityID, QuotaDate, SalesQuota, rowguid, ModifiedDate]\n- Table: AddressType, Columns: [AddressTypeID, Name, rowguid, ModifiedDate]\n- Table: Address, Columns: [AddressID, AddressLine1, AddressLine2, City, StateProvinceID, PostalCode, SpatialLocation, rowguid, ModifiedDate]\n- Table: ProductListPriceHistory, Columns: [ProductID, StartDate, EndDate, ListPrice, ModifiedDate]\n- Table: Currency, Columns: [CurrencyCode, Name, ModifiedDate]\n- Table: StateProvince, Columns: [StateProvinceID, StateProvinceCode, CountryRegionCode, IsOnlyStateProvinceFlag, Name, TerritoryID, rowguid, ModifiedDate]\n- Table: ProductInventory, Columns: [ProductID, LocationID, Shelf, Bin, Quantity, rowguid, ModifiedDate]\n- Table: UnitMeasure, Columns: [UnitMeasureCode, Name, ModifiedDate]\n- Table: ProductCategory, Columns: [ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: Document, Columns: [DocumentNode, DocumentLevel, Title, Owner, FolderFlag, FileName, FileExtension, Revision, ChangeNumber, Status, DocumentSummary, Document, rowguid, ModifiedDate]\n- Table: SalesPerson, Columns: [BusinessEntityID, TerritoryID, SalesQuota, Bonus, CommissionPct, SalesYTD, SalesLastYear, rowguid, ModifiedDate]\n- Table: CountryRegion, Columns: [CountryRegionCode, Name, ModifiedDate]\n- Table: Store, Columns: [BusinessEntityID, Name, SalesPersonID, Demographics, rowguid, ModifiedDate]\n- Table: ProductDescription, Columns: [ProductDescriptionID, Description, rowguid, ModifiedDate]\n- Table: SalesOrderHeader, Columns: [SalesOrderID, RevisionNumber, OrderDate, DueDate, ShipDate, Status, OnlineOrderFlag, SalesOrderNumber, PurchaseOrderNumber, AccountNumber, CustomerID, SalesPersonID, TerritoryID, BillToAddressID, ShipToAddressID, ShipMethodID, CreditCardID, CreditCardApprovalCode, CurrencyRateID, SubTotal, TaxAmt, Freight, TotalDue, Comment, rowguid, ModifiedDate]\n- Table: EmployeePayHistory, Columns: [BusinessEntityID, RateChangeDate, Rate, PayFrequency, ModifiedDate]\n- Table: PhoneNumberType, Columns: [PhoneNumberTypeID, Name, ModifiedDate]\n- Table: ProductDocument, Columns: [ProductID, DocumentNode, ModifiedDate]\n- Table: SalesTerritoryHistory, Columns: [BusinessEntityID, TerritoryID, StartDate, EndDate, rowguid, ModifiedDate]\n- Table: ProductProductPhoto, Columns: [ProductID, ProductPhotoID, Primary, ModifiedDate]\n- Table: WorkOrder, Columns: [WorkOrderID, ProductID, OrderQty, StockedQty, ScrappedQty, StartDate, EndDate, DueDate, ScrapReasonID, ModifiedDate]\n- Table: ProductSubcategory, Columns: [ProductSubcategoryID, ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: PurchaseOrderDetail, Columns: [PurchaseOrderID, PurchaseOrderDetailID, DueDate, OrderQty, ProductID, UnitPrice, LineTotal, ReceivedQty, RejectedQty, StockedQty, ModifiedDate]\n- Table: BusinessEntityContact, Columns: [BusinessEntityID, PersonID, ContactTypeID, rowguid, ModifiedDate]\n- Table: ProductCostHistory, Columns: [ProductID, StartDate, EndDate, StandardCost, ModifiedDate]\n- Table: Product, Columns: [ProductID, Name, ProductNumber, MakeFlag, FinishedGoodsFlag, Color, SafetyStockLevel, ReorderPoint, StandardCost, ListPrice, Size, SizeUnitMeasureCode, WeightUnitMeasureCode, Weight, DaysToManufacture, ProductLine, Class, Style, ProductSubcategoryID, ProductModelID, SellStartDate, SellEndDate, DiscontinuedDate, rowguid, ModifiedDate]\n- Table: Culture, Columns: [CultureID, Name, ModifiedDate]\n- Table: BillOfMaterials, Columns: [BillOfMaterialsID, ProductAssemblyID, ComponentID, StartDate, EndDate, UnitMeasureCode, BOMLevel, PerAssemblyQty, ModifiedDate]\n- Table: ProductVendor, Columns: [ProductID, BusinessEntityID, AverageLeadTime, StandardPrice, LastReceiptCost, LastReceiptDate, MinOrderQty, MaxOrderQty, OnOrderQty, UnitMeasureCode, ModifiedDate]\n- Table: SalesTaxRate, Columns: [SalesTaxRateID, StateProvinceID, TaxType, TaxRate, Name, rowguid, ModifiedDate]\n- Table: Password, Columns: [BusinessEntityID, PasswordHash, PasswordSalt, rowguid, ModifiedDate]\n- Table: CreditCard, Columns: [CreditCardID, CardType, CardNumber, ExpMonth, ExpYear, ModifiedDate]\n- Table: Customer, Columns: [CustomerID, PersonID, StoreID, TerritoryID, AccountNumber, rowguid, ModifiedDate]\n- Table: JobCandidate, Columns: [JobCandidateID, BusinessEntityID, Resume, ModifiedDate]\n- Table: Employee, Columns: [BusinessEntityID, NationalIDNumber, LoginID, OrganizationNode, OrganizationLevel, JobTitle, BirthDate, MaritalStatus, Gender, HireDate, SalariedFlag, VacationHours, SickLeaveHours, CurrentFlag, rowguid, ModifiedDate]\n- Table: Department, Columns: [DepartmentID, Name, GroupName, ModifiedDate]",
        "Response": "Table: Person"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO TransactionHistory (TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate)  VALUES (101661, 886, 53514, 13, '2013-07-31 00:00:00.0', 'S', 3, 247.0, '2013-07-31 00:00:00.0');\nDatabase State:\n- Table: Vendor, Columns: [BusinessEntityID, AccountNumber, Name, CreditRating, PreferredVendorStatus, ActiveFlag, PurchasingWebServiceURL, ModifiedDate]\n- Table: SalesOrderHeader, Columns: [SalesOrderID, RevisionNumber, OrderDate, DueDate, ShipDate, Status, OnlineOrderFlag, SalesOrderNumber, PurchaseOrderNumber, AccountNumber, CustomerID, SalesPersonID, TerritoryID, BillToAddressID, ShipToAddressID, ShipMethodID, CreditCardID, CreditCardApprovalCode, CurrencyRateID, SubTotal, TaxAmt, Freight, TotalDue, Comment, rowguid, ModifiedDate]\n- Table: CountryRegionCurrency, Columns: [CountryRegionCode, CurrencyCode, ModifiedDate]\n- Table: SpecialOfferProduct, Columns: [SpecialOfferID, ProductID, rowguid, ModifiedDate]\n- Table: UnitMeasure, Columns: [UnitMeasureCode, Name, ModifiedDate]\n- Table: Location, Columns: [LocationID, Name, CostRate, Availability, ModifiedDate]\n- Table: ProductReview, Columns: [ProductReviewID, ProductID, ReviewerName, ReviewDate, EmailAddress, Rating, Comments, ModifiedDate]\n- Table: PhoneNumberType, Columns: [PhoneNumberTypeID, Name, ModifiedDate]\n- Table: BusinessEntityAddress, Columns: [BusinessEntityID, AddressID, AddressTypeID, rowguid, ModifiedDate]\n- Table: BillOfMaterials, Columns: [BillOfMaterialsID, ProductAssemblyID, ComponentID, StartDate, EndDate, UnitMeasureCode, BOMLevel, PerAssemblyQty, ModifiedDate]\n- Table: ShipMethod, Columns: [ShipMethodID, Name, ShipBase, ShipRate, rowguid, ModifiedDate]\n- Table: Customer, Columns: [CustomerID, PersonID, StoreID, TerritoryID, AccountNumber, rowguid, ModifiedDate]\n- Table: Employee, Columns: [BusinessEntityID, NationalIDNumber, LoginID, OrganizationNode, OrganizationLevel, JobTitle, BirthDate, MaritalStatus, Gender, HireDate, SalariedFlag, VacationHours, SickLeaveHours, CurrentFlag, rowguid, ModifiedDate]\n- Table: ProductDescription, Columns: [ProductDescriptionID, Description, rowguid, ModifiedDate]\n- Table: PersonCreditCard, Columns: [BusinessEntityID, CreditCardID, ModifiedDate]\n- Table: Store, Columns: [BusinessEntityID, Name, SalesPersonID, Demographics, rowguid, ModifiedDate]\n- Table: ProductModelProductDescriptionCulture, Columns: [ProductModelID, ProductDescriptionID, CultureID, ModifiedDate]\n- Table: JobCandidate, Columns: [JobCandidateID, BusinessEntityID, Resume, ModifiedDate]\n- Table: Currency, Columns: [CurrencyCode, Name, ModifiedDate]\n- Table: CreditCard, Columns: [CreditCardID, CardType, CardNumber, ExpMonth, ExpYear, ModifiedDate]\n- Table: SalesTerritory, Columns: [TerritoryID, Name, CountryRegionCode, Group, SalesYTD, SalesLastYear, CostYTD, CostLastYear, rowguid, ModifiedDate]\n- Table: EmployeePayHistory, Columns: [BusinessEntityID, RateChangeDate, Rate, PayFrequency, ModifiedDate]\n- Table: ProductModel, Columns: [ProductModelID, Name, CatalogDescription, Instructions, rowguid, ModifiedDate]\n- Table: ProductInventory, Columns: [ProductID, LocationID, Shelf, Bin, Quantity, rowguid, ModifiedDate]\n- Table: ProductListPriceHistory, Columns: [ProductID, StartDate, EndDate, ListPrice, ModifiedDate]\n- Table: EmailAddress, Columns: [BusinessEntityID, EmailAddressID, EmailAddress, rowguid, ModifiedDate]\n- Table: ShoppingCartItem, Columns: [ShoppingCartItemID, ShoppingCartID, Quantity, ProductID, DateCreated, ModifiedDate]\n- Table: Culture, Columns: [CultureID, Name, ModifiedDate]\n- Table: EmployeeDepartmentHistory, Columns: [BusinessEntityID, DepartmentID, ShiftID, StartDate, EndDate, ModifiedDate]\n- Table: ProductPhoto, Columns: [ProductPhotoID, ThumbNailPhoto, ThumbnailPhotoFileName, LargePhoto, LargePhotoFileName, ModifiedDate]\n- Table: ScrapReason, Columns: [ScrapReasonID, Name, ModifiedDate]\n- Table: CountryRegion, Columns: [CountryRegionCode, Name, ModifiedDate]\n- Table: SalesReason, Columns: [SalesReasonID, Name, ReasonType, ModifiedDate]\n- Table: BusinessEntityContact, Columns: [BusinessEntityID, PersonID, ContactTypeID, rowguid, ModifiedDate]\n- Table: WorkOrder, Columns: [WorkOrderID, ProductID, OrderQty, StockedQty, ScrappedQty, StartDate, EndDate, DueDate, ScrapReasonID, ModifiedDate]\n- Table: Password, Columns: [BusinessEntityID, PasswordHash, PasswordSalt, rowguid, ModifiedDate]\n- Table: ProductProductPhoto, Columns: [ProductID, ProductPhotoID, Primary, ModifiedDate]\n- Table: StateProvince, Columns: [StateProvinceID, StateProvinceCode, CountryRegionCode, IsOnlyStateProvinceFlag, Name, TerritoryID, rowguid, ModifiedDate]\n- Table: WorkOrderRouting, Columns: [WorkOrderID, ProductID, OperationSequence, LocationID, ScheduledStartDate, ScheduledEndDate, ActualStartDate, ActualEndDate, ActualResourceHrs, PlannedCost, ActualCost, ModifiedDate]\n- Table: SalesPerson, Columns: [BusinessEntityID, TerritoryID, SalesQuota, Bonus, CommissionPct, SalesYTD, SalesLastYear, rowguid, ModifiedDate]\n- Table: PurchaseOrderHeader, Columns: [PurchaseOrderID, RevisionNumber, Status, EmployeeID, VendorID, ShipMethodID, OrderDate, ShipDate, SubTotal, TaxAmt, Freight, TotalDue, ModifiedDate]\n- Table: CurrencyRate, Columns: [CurrencyRateID, CurrencyRateDate, FromCurrencyCode, ToCurrencyCode, AverageRate, EndOfDayRate, ModifiedDate]\n- Table: PurchaseOrderDetail, Columns: [PurchaseOrderID, PurchaseOrderDetailID, DueDate, OrderQty, ProductID, UnitPrice, LineTotal, ReceivedQty, RejectedQty, StockedQty, ModifiedDate]\n- Table: AddressType, Columns: [AddressTypeID, Name, rowguid, ModifiedDate]\n- Table: Person, Columns: [BusinessEntityID, PersonType, NameStyle, Title, FirstName, MiddleName, LastName, Suffix, EmailPromotion, AdditionalContactInfo, Demographics, rowguid, ModifiedDate]\n- Table: ProductVendor, Columns: [ProductID, BusinessEntityID, AverageLeadTime, StandardPrice, LastReceiptCost, LastReceiptDate, MinOrderQty, MaxOrderQty, OnOrderQty, UnitMeasureCode, ModifiedDate]\n- Table: SalesOrderDetail, Columns: [SalesOrderID, SalesOrderDetailID, CarrierTrackingNumber, OrderQty, ProductID, SpecialOfferID, UnitPrice, UnitPriceDiscount, LineTotal, rowguid, ModifiedDate]\n- Table: ContactType, Columns: [ContactTypeID, Name, ModifiedDate]\n- Table: ProductCostHistory, Columns: [ProductID, StartDate, EndDate, StandardCost, ModifiedDate]\n- Table: SalesPersonQuotaHistory, Columns: [BusinessEntityID, QuotaDate, SalesQuota, rowguid, ModifiedDate]\n- Table: SalesTerritoryHistory, Columns: [BusinessEntityID, TerritoryID, StartDate, EndDate, rowguid, ModifiedDate]\n- Table: SalesOrderHeaderSalesReason, Columns: [SalesOrderID, SalesReasonID, ModifiedDate]\n- Table: ProductDocument, Columns: [ProductID, DocumentNode, ModifiedDate]",
        "Response": "Table: TransactionHistory"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO TransactionHistory (TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate)  VALUES (206509, 930, 73567, 2, '2014-05-22 00:00:00.0', 'S', 1, 35.0, '2014-05-22 00:00:00.0');\nDatabase State:\n- Table: UnitMeasure, Columns: [UnitMeasureCode, Name, ModifiedDate]\n- Table: SpecialOffer, Columns: [SpecialOfferID, Description, DiscountPct, Type, Category, StartDate, EndDate, MinQty, MaxQty, rowguid, ModifiedDate]\n- Table: AddressType, Columns: [AddressTypeID, Name, rowguid, ModifiedDate]\n- Table: EmailAddress, Columns: [BusinessEntityID, EmailAddressID, EmailAddress, rowguid, ModifiedDate]\n- Table: SalesOrderDetail, Columns: [SalesOrderID, SalesOrderDetailID, CarrierTrackingNumber, OrderQty, ProductID, SpecialOfferID, UnitPrice, UnitPriceDiscount, LineTotal, rowguid, ModifiedDate]\n- Table: ProductModelProductDescriptionCulture, Columns: [ProductModelID, ProductDescriptionID, CultureID, ModifiedDate]\n- Table: ProductVendor, Columns: [ProductID, BusinessEntityID, AverageLeadTime, StandardPrice, LastReceiptCost, LastReceiptDate, MinOrderQty, MaxOrderQty, OnOrderQty, UnitMeasureCode, ModifiedDate]\n- Table: CountryRegion, Columns: [CountryRegionCode, Name, ModifiedDate]\n- Table: SalesOrderHeader, Columns: [SalesOrderID, RevisionNumber, OrderDate, DueDate, ShipDate, Status, OnlineOrderFlag, SalesOrderNumber, PurchaseOrderNumber, AccountNumber, CustomerID, SalesPersonID, TerritoryID, BillToAddressID, ShipToAddressID, ShipMethodID, CreditCardID, CreditCardApprovalCode, CurrencyRateID, SubTotal, TaxAmt, Freight, TotalDue, Comment, rowguid, ModifiedDate]\n- Table: ShipMethod, Columns: [ShipMethodID, Name, ShipBase, ShipRate, rowguid, ModifiedDate]\n- Table: ProductReview, Columns: [ProductReviewID, ProductID, ReviewerName, ReviewDate, EmailAddress, Rating, Comments, ModifiedDate]\n- Table: ProductListPriceHistory, Columns: [ProductID, StartDate, EndDate, ListPrice, ModifiedDate]\n- Table: ProductDocument, Columns: [ProductID, DocumentNode, ModifiedDate]\n- Table: ProductSubcategory, Columns: [ProductSubcategoryID, ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: WorkOrder, Columns: [WorkOrderID, ProductID, OrderQty, StockedQty, ScrappedQty, StartDate, EndDate, DueDate, ScrapReasonID, ModifiedDate]\n- Table: SalesTerritory, Columns: [TerritoryID, Name, CountryRegionCode, Group, SalesYTD, SalesLastYear, CostYTD, CostLastYear, rowguid, ModifiedDate]\n- Table: CountryRegionCurrency, Columns: [CountryRegionCode, CurrencyCode, ModifiedDate]\n- Table: ProductCostHistory, Columns: [ProductID, StartDate, EndDate, StandardCost, ModifiedDate]\n- Table: PurchaseOrderDetail, Columns: [PurchaseOrderID, PurchaseOrderDetailID, DueDate, OrderQty, ProductID, UnitPrice, LineTotal, ReceivedQty, RejectedQty, StockedQty, ModifiedDate]\n- Table: SalesReason, Columns: [SalesReasonID, Name, ReasonType, ModifiedDate]\n- Table: JobCandidate, Columns: [JobCandidateID, BusinessEntityID, Resume, ModifiedDate]\n- Table: ProductModel, Columns: [ProductModelID, Name, CatalogDescription, Instructions, rowguid, ModifiedDate]\n- Table: BusinessEntity, Columns: [BusinessEntityID, rowguid, ModifiedDate]\n- Table: CreditCard, Columns: [CreditCardID, CardType, CardNumber, ExpMonth, ExpYear, ModifiedDate]\n- Table: Location, Columns: [LocationID, Name, CostRate, Availability, ModifiedDate]\n- Table: EmployeeDepartmentHistory, Columns: [BusinessEntityID, DepartmentID, ShiftID, StartDate, EndDate, ModifiedDate]\n- Table: Password, Columns: [BusinessEntityID, PasswordHash, PasswordSalt, rowguid, ModifiedDate]\n- Table: PurchaseOrderHeader, Columns: [PurchaseOrderID, RevisionNumber, Status, EmployeeID, VendorID, ShipMethodID, OrderDate, ShipDate, SubTotal, TaxAmt, Freight, TotalDue, ModifiedDate]\n- Table: CurrencyRate, Columns: [CurrencyRateID, CurrencyRateDate, FromCurrencyCode, ToCurrencyCode, AverageRate, EndOfDayRate, ModifiedDate]\n- Table: ProductProductPhoto, Columns: [ProductID, ProductPhotoID, Primary, ModifiedDate]\n- Table: Shift, Columns: [ShiftID, Name, StartTime, EndTime, ModifiedDate]\n- Table: BusinessEntityContact, Columns: [BusinessEntityID, PersonID, ContactTypeID, rowguid, ModifiedDate]\n- Table: TransactionHistoryArchive, Columns: [TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate]\n- Table: SalesPerson, Columns: [BusinessEntityID, TerritoryID, SalesQuota, Bonus, CommissionPct, SalesYTD, SalesLastYear, rowguid, ModifiedDate]\n- Table: SalesOrderHeaderSalesReason, Columns: [SalesOrderID, SalesReasonID, ModifiedDate]\n- Table: BillOfMaterials, Columns: [BillOfMaterialsID, ProductAssemblyID, ComponentID, StartDate, EndDate, UnitMeasureCode, BOMLevel, PerAssemblyQty, ModifiedDate]\n- Table: ScrapReason, Columns: [ScrapReasonID, Name, ModifiedDate]\n- Table: Customer, Columns: [CustomerID, PersonID, StoreID, TerritoryID, AccountNumber, rowguid, ModifiedDate]\n- Table: BusinessEntityAddress, Columns: [BusinessEntityID, AddressID, AddressTypeID, rowguid, ModifiedDate]\n- Table: WorkOrderRouting, Columns: [WorkOrderID, ProductID, OperationSequence, LocationID, ScheduledStartDate, ScheduledEndDate, ActualStartDate, ActualEndDate, ActualResourceHrs, PlannedCost, ActualCost, ModifiedDate]\n- Table: Department, Columns: [DepartmentID, Name, GroupName, ModifiedDate]\n- Table: Culture, Columns: [CultureID, Name, ModifiedDate]\n- Table: Document, Columns: [DocumentNode, DocumentLevel, Title, Owner, FolderFlag, FileName, FileExtension, Revision, ChangeNumber, Status, DocumentSummary, Document, rowguid, ModifiedDate]\n- Table: Person, Columns: [BusinessEntityID, PersonType, NameStyle, Title, FirstName, MiddleName, LastName, Suffix, EmailPromotion, AdditionalContactInfo, Demographics, rowguid, ModifiedDate]\n- Table: SalesTerritoryHistory, Columns: [BusinessEntityID, TerritoryID, StartDate, EndDate, rowguid, ModifiedDate]\n- Table: PersonCreditCard, Columns: [BusinessEntityID, CreditCardID, ModifiedDate]",
        "Response": "Table: TransactionHistory"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (People_ID, Name, Age, Height, Hometown)  VALUES (8, 'Marina Castro Medina', 20.0, 1.760000000000000008, 'Santo Domingo');\nDatabase State:\n- Table: gymnast, Columns: [Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points]",
        "Response": "Table: people"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity)  VALUES ('Calculator with Percent (Free)', 'nan', 'nan', 'nan', 'nan');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO follows (label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list)  VALUES ('976', 'year', '976', 'year', '970s', '975', '977', 'Category:976', '+0976-01-01T00:00:00Z', 'list of state leaders in 976');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: follows"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO pilot_record (Record_ID, Pilot_ID, Aircraft_ID, Date)  VALUES (4, 3, 6, '2006/01/04');\nDatabase State:\n- Table: pilot_record, Columns: [Record_ID, Pilot_ID, Aircraft_ID, Date]",
        "Response": "Table: pilot_record"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor)  VALUES ('7957', 'number', 'natural number', '7957 (number)', 7957.0, '7957', 4.0, '73.0');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: centered_hexagonal_number"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO gymnast (Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points)  VALUES (6, 9.76200000000000045, 9.32499999999999928, 9.47499999999999965, 9.76200000000000045, 9.56199999999999939, 9.55000000000000072, 57.43599999999999995);\nDatabase State:\n- Table: people, Columns: [People_ID, Name, Age, Height, Hometown]",
        "Response": "Table: gymnast"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_OBJ_ATT (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID)  VALUES (2359951, 691, 4);\nDatabase State:\n- Table: OBJ_CLASSES, Columns: [OBJ_CLASS_ID, OBJ_CLASS]",
        "Response": "Table: IMG_OBJ_ATT"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_REL (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID)  VALUES (285984, 149, 1, 3);\nDatabase State:\n- Table: IMG_OBJ, Columns: [IMG_ID, OBJ_SAMPLE_ID, OBJ_CLASS_ID, X, Y, W, H]\n- Table: PRED_CLASSES, Columns: [PRED_CLASS_ID, PRED_CLASS]\n- Table: OBJ_CLASSES, Columns: [OBJ_CLASS_ID, OBJ_CLASS]\n- Table: IMG_REL, Columns: [IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID]\n- Table: ATT_CLASSES, Columns: [ATT_CLASS_ID, ATT_CLASS]",
        "Response": "Table: IMG_REL"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO encounters (ID, DATE, PATIENT, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)  VALUES ('b9ee0a2a-4a0c-4115-a499-974e5cfa4088', '2009-04-19', '9d8ade43-212f-4e76-b0d4-e1c3725bd5d6', 170258001, 'Outpatient Encounter', NULL, NULL);\nDatabase State:\n- Table: immunizations, Columns: [DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION]\n- Table: claims, Columns: [ID, PATIENT, BILLABLEPERIOD, ORGANIZATION, ENCOUNTER, DIAGNOSIS, TOTAL]\n- Table: allergies, Columns: [START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION]\n- Table: conditions, Columns: [START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION]\n- Table: medications, Columns: [START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: encounters, Columns: [ID, DATE, PATIENT, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]",
        "Response": "Table: encounters"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO observations (DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, VALUE, UNITS)  VALUES ('2011-05-11', 'ed7c707c-4515-45d9-a56f-84db538137a2', '9d27377a-a999-41d3-9917-bbd903136fd3', '4548-4', 'Hemoglobin A1c/Hemoglobin.total in Blood', 6.400000000000000355, '%');\nDatabase State:\n- Table: observations, Columns: [DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, VALUE, UNITS]\n- Table: encounters, Columns: [ID, DATE, PATIENT, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]",
        "Response": "Table: observations"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO institution_grads (unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate)  VALUES (149532, 2007, 'B', 'Ai', '2y all', '5', 'NULL', '0', 'NULL', '0.0');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO user_reviews (App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity)  VALUES ('Easy - taxi, car, ridesharing', 'nan', 'nan', 'nan', 'nan');\nDatabase State:\n- Table: playstore, Columns: [App, Category, Rating, Reviews, Size, Installs, Type, Price, Content_Rating, Genres]\n- Table: user_reviews, Columns: [App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity]",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO immunizations (DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION)  VALUES ('2017-08-05', 'b8b461a4-998b-498f-9d7a-a5592c64c4cb', '87b3d41e-459b-4f9b-b564-5a6ae1a0d31c', 140, 'Influenza  seasonal  injectable  preservative free');\nDatabase State:\n- Table: conditions, Columns: [START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION]\n- Table: encounters, Columns: [ID, DATE, PATIENT, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: procedures, Columns: [DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]",
        "Response": "Table: immunizations"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (OrderDetailID, OrderID, ProductID, Quantity)  VALUES (85, 10280, 55, 20);\nDatabase State:\n- Table: Products, Columns: [ProductID, ProductName, SupplierID, CategoryID, Unit, Price]\n- Table: Suppliers, Columns: [SupplierID, SupplierName, ContactName, Address, City, PostalCode, Country, Phone]\n- Table: Categories, Columns: [CategoryID, CategoryName, Description]\n- Table: Employees, Columns: [EmployeeID, LastName, FirstName, BirthDate, Photo, Notes]\n- Table: Shippers, Columns: [ShipperID, ShipperName, Phone]",
        "Response": "Table: OrderDetails"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (App, Category, Rating, Reviews, Size, Installs, Type, Price, Content_Rating, Genres)  VALUES ('Angry Birds Classic', 'GAME', 4.400000000000000356, 5566889, '97M', '100,000,000+', 'Free', '0', 'Everyone', 'Arcade');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: playstore"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO institution_grads (unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate)  VALUES (418126, 2006, 'B', 'W', '4y other', '13', 'NULL', '6', 'NULL', '46.2');\nDatabase State:\n- Table: state_sector_details, Columns: [stateid, state, state_post, level, control, schools_count, counted_pct, awards_per_state_value, awards_per_natl_value, exp_award_state_value, exp_award_natl_value, state_appr_value, state_appr_rank, grad_rate_rank, awards_per_rank]\n- Table: state_sector_grads, Columns: [stateid, state, state_abbr, control, level, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate, grad_cohort_ct]\n- Table: institution_grads, Columns: [unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate]",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, part_of, country, commons_category)  VALUES ('Wiki Loves Monuments in Ireland', 'nan', 'recurring event', 'Wiki Loves Monuments', 'Republic of Ireland', 'Wiki Loves Monuments in Ireland');\nDatabase State:\n- Table: series, Columns: [label, description, instance_of, part_of, country, commons_category]\n- Table: twin_town, Columns: [label, description, country, coordinate_location, freebase_id, twinned_administrative_body, geonames_id, instance_of, topics_main_category, capital_of, viaf_id, elevation_above_sea_level, commons_category, located_in_the_administrative_territorial_entity, quora_topic_id, encyclop\u00e6dia_britannica_online_id, located_in_time_zone, image, category_of_associated_people, area, library_of_congress_authority_id, coat_of_arms_image, whos_on_first_id, population, postal_code, official_website, worldcat_identities_id, musicbrainz_area_id, national_library_of_israel_j9u_id, page_banner, head_of_government, category_for_people_who_died_here, gnd_id, commons_gallery, facebook_places_id, native_label, gran_enciclop\u00e8dia_catalana_id, category_for_maps, factgrid_item_id, den_store_danske_id, online_pwn_encyclopedia_id, local_dialing_code, nkcr_aut_id, store_norske_leksikon_id]\n- Table: country, Columns: [label, description, great_russian_encyclopedia_online_id, wipo_st3, population, getty_thesaurus_of_geographic_names_id, topics_main_wikimedia_portal, wikimedia_outline, ndl_authority_id, currency, new_york_times_topic_id, geonames_id, gnd_id, unicode_character, category_of_associated_people, emergency_phone_number, unesco_thesaurus_id, electrical_plug_type, licence_plate_code, babelnet_id, geography_of_topic, iso_3166_1_alpha_3_code, office_held_by_head_of_government, quora_topic_id, native_label, basic_form_of_government, musicbrainz_area_id, has_quality, coat_of_arms_image, uic_alphabetical_country_code, mesh_descriptor_id, insee_countries_and_foreign_territories_code, invasive_species_compendium_datasheet_id, diplomatic_relation, flag_image, ituisoiec_object_identifier, commons_gallery, legislative_body, trunk_prefix, history_of_topic, gran_enciclop\u00e8dia_catalana_id, stw_thesaurus_for_economics_id, official_language, viaf_id, subreddit, continent, capital, coat_of_arms, demonym, national_library_of_israel_id_old, openstreetmap_relation_id, on_focus_list_of_wikimedia_project, omegawiki_defined_meaning, coordinates_of_northernmost_point, nkcr_aut_id, comic_vine_id, mobile_country_code, total_fertility_rate, maritime_identification_digits, us_national_archives_identifier, shares_border_with, marriageable_age, topics_main_category, head_of_government, biblioth\u00e8que_nationale_de_france_id, category_of_people_buried_here, locator_map_image, bbc_things_id, geoshape, dewey_decimal_classification, area, le_monde_diplomatique_subject_id, ioc_country_code, member_of, official_name, store_norske_leksikon_id, railway_traffic_side, gacs_id, archinform_location_id, encyclop\u00e6dia_britannica_online_id, page_banner, category_for_films_shot_at_this_location, mains_voltage, executive_body, category_for_people_who_died_here, yso_id, anthem, office_held_by_head_of_state, life_expectancy, part_of, commons_category, top_level_internet_domain, instance_of, highest_point, category_for_people_born_here, iab_code, short_name, number_of_out_of_school_children, driving_side, head_of_state, uic_numerical_country_code, lowest_point, idref_id, iso_3166_1_numeric_code, located_in_time_zone, contains_the_administrative_territorial_entity, itu_letter_code, country_calling_code, freebase_id, statoids_id, library_of_congress_authority_id, iso_3166_1_alpha_2_code, coordinate_location, fips_10_4_countries_and_regions, described_by_source, isni, civicus_monitor_country_entry, brockhaus_enzyklop\u00e4die_online_id, klexikon_article_id, loc_and_marc_vocabularies_id, central_bank, language_used, coordinates_of_westernmost_point, whos_on_first_id, the_top_tens_id, world_encyclopedia_of_puppetry_arts_id, official_website, hds_id, gs1_country_code, culture, coordinates_of_southernmost_point, coordinates_of_easternmost_point, geonlp_id, category_for_maps, treccanis_dizionario_di_storia_id, vat_rate, french_vikidia_id, english_vikidia_id, spanish_vikidia_id, pronunciation_audio, eurovoc_id, worldcat_identities_id, kbpedia_id, open_data_portal, grove_art_online_id, rkd_thesaurus_id, pm20_geo_code, interlingual_index_id, jewish_encyclopedia_id_russian, bbc_news_topic_id, tasteatlas_id, inaturalist_place_id, economy_of_topic, flag, uk_parliament_thesaurus_id, yle_topic_id, ysa_id, inception, bhcl_uuid, github_topic, wordnet_31_synset_id, demographics_of_topic, joconde_location_id, idaigazetteer_id, country, armeniapedia_id, krugosvet_article, schoenberg_database_of_manuscripts_place_id, the_world_factbook_country_id, colon_classification, national_library_of_israel_j9u_id, democracy_index, online_pwn_encyclopedia_id, treccani_id, postimees_topic_id, museum_digital_place_id, wikisimpsons_id, den_store_danske_id, urban_electric_transit_country_id, m49_code, alltrails_trail_id, human_development_index, national_historical_museums_of_sweden_id, eu_knowledge_graph_item_id, hashtag, gini_coefficient, obo_gazetteer_id, openstreetmap_element, happy_planet_index_score, namuwiki_id, curlie_id, unemployment_rate, nalt_id, age_of_majority, fast_id, dr_topic_id, der_spiegel_topic_id]\n- Table: capital_city, Columns: [label, description, twinned_administrative_body, commons_category, country, image, postal_code, located_in_time_zone, located_in_the_administrative_territorial_entity, coordinate_location, page_banner, topics_main_category, instance_of, freebase_id, musicbrainz_area_id, gnd_id, viaf_id, geonames_id, official_website, category_of_associated_people, capital_of, area, population, elevation_above_sea_level, library_of_congress_authority_id, native_label, official_name, great_russian_encyclopedia_online_id, whos_on_first_id, category_for_maps, nkcr_aut_id, store_norske_leksikon_id, national_library_of_israel_j9u_id, online_pwn_encyclopedia_id]\n- Table: wiki_loves_monuments_2015, Columns: [label, description, instance_of, country, part_of, commons_category, part_of_the_series, start_time, end_time]\n- Table: place_of_birth, Columns: [label, description, country, commons_category, instance_of, located_in_the_administrative_territorial_entity, coordinate_location, topics_main_category, freebase_id, image, geonames_id, elevation_above_sea_level, category_of_associated_people, official_website, area, population, whos_on_first_id]",
        "Response": "Table: series"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO gymnast (Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points)  VALUES (1, 9.72499999999999965, 9.73700000000000009, 9.51200000000000045, 9.57499999999999928, 9.76200000000000045, 9.75, 58.06099999999999995);\nDatabase State:\n- Table: people, Columns: [People_ID, Name, Age, Height, Hometown]",
        "Response": "Table: gymnast"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points)  VALUES (8, 9.65000000000000035, 9.71199999999999975, 9.48700000000000009, 9.63700000000000045, 9.5, 9.41200000000000082, 57.39800000000000324);\nDatabase State:\n- Table: people, Columns: [People_ID, Name, Age, Height, Hometown]\n- Table: gymnast, Columns: [Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points]",
        "Response": "Table: gymnast"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank)  VALUES (3, 1993, '125cc', 'Marlboro Pileri - Honda', 'RS125', 129.0, 4);\nDatabase State:\nNo table exists yet.",
        "Response": "Table: machine"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (BusinessEntityID, AddressID, AddressTypeID, rowguid, ModifiedDate)  VALUES (10312, 19371, 2, 'BD8733D5-94D2-46C6-BAE3-C0932C7FAC03', '2013-02-22 00:00:00.0');\nDatabase State:\n- Table: Location, Columns: [LocationID, Name, CostRate, Availability, ModifiedDate]\n- Table: SalesPerson, Columns: [BusinessEntityID, TerritoryID, SalesQuota, Bonus, CommissionPct, SalesYTD, SalesLastYear, rowguid, ModifiedDate]\n- Table: ProductCostHistory, Columns: [ProductID, StartDate, EndDate, StandardCost, ModifiedDate]\n- Table: ProductInventory, Columns: [ProductID, LocationID, Shelf, Bin, Quantity, rowguid, ModifiedDate]\n- Table: PurchaseOrderDetail, Columns: [PurchaseOrderID, PurchaseOrderDetailID, DueDate, OrderQty, ProductID, UnitPrice, LineTotal, ReceivedQty, RejectedQty, StockedQty, ModifiedDate]\n- Table: BusinessEntity, Columns: [BusinessEntityID, rowguid, ModifiedDate]\n- Table: ProductDocument, Columns: [ProductID, DocumentNode, ModifiedDate]\n- Table: Address, Columns: [AddressID, AddressLine1, AddressLine2, City, StateProvinceID, PostalCode, SpatialLocation, rowguid, ModifiedDate]\n- Table: UnitMeasure, Columns: [UnitMeasureCode, Name, ModifiedDate]\n- Table: Store, Columns: [BusinessEntityID, Name, SalesPersonID, Demographics, rowguid, ModifiedDate]\n- Table: Shift, Columns: [ShiftID, Name, StartTime, EndTime, ModifiedDate]\n- Table: ProductReview, Columns: [ProductReviewID, ProductID, ReviewerName, ReviewDate, EmailAddress, Rating, Comments, ModifiedDate]\n- Table: SalesOrderHeaderSalesReason, Columns: [SalesOrderID, SalesReasonID, ModifiedDate]\n- Table: WorkOrderRouting, Columns: [WorkOrderID, ProductID, OperationSequence, LocationID, ScheduledStartDate, ScheduledEndDate, ActualStartDate, ActualEndDate, ActualResourceHrs, PlannedCost, ActualCost, ModifiedDate]\n- Table: SpecialOffer, Columns: [SpecialOfferID, Description, DiscountPct, Type, Category, StartDate, EndDate, MinQty, MaxQty, rowguid, ModifiedDate]\n- Table: Password, Columns: [BusinessEntityID, PasswordHash, PasswordSalt, rowguid, ModifiedDate]\n- Table: EmailAddress, Columns: [BusinessEntityID, EmailAddressID, EmailAddress, rowguid, ModifiedDate]\n- Table: EmployeePayHistory, Columns: [BusinessEntityID, RateChangeDate, Rate, PayFrequency, ModifiedDate]\n- Table: AddressType, Columns: [AddressTypeID, Name, rowguid, ModifiedDate]\n- Table: ProductSubcategory, Columns: [ProductSubcategoryID, ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: Currency, Columns: [CurrencyCode, Name, ModifiedDate]\n- Table: Vendor, Columns: [BusinessEntityID, AccountNumber, Name, CreditRating, PreferredVendorStatus, ActiveFlag, PurchasingWebServiceURL, ModifiedDate]\n- Table: Person, Columns: [BusinessEntityID, PersonType, NameStyle, Title, FirstName, MiddleName, LastName, Suffix, EmailPromotion, AdditionalContactInfo, Demographics, rowguid, ModifiedDate]\n- Table: JobCandidate, Columns: [JobCandidateID, BusinessEntityID, Resume, ModifiedDate]\n- Table: ContactType, Columns: [ContactTypeID, Name, ModifiedDate]\n- Table: ScrapReason, Columns: [ScrapReasonID, Name, ModifiedDate]\n- Table: ProductPhoto, Columns: [ProductPhotoID, ThumbNailPhoto, ThumbnailPhotoFileName, LargePhoto, LargePhotoFileName, ModifiedDate]\n- Table: CurrencyRate, Columns: [CurrencyRateID, CurrencyRateDate, FromCurrencyCode, ToCurrencyCode, AverageRate, EndOfDayRate, ModifiedDate]\n- Table: ProductListPriceHistory, Columns: [ProductID, StartDate, EndDate, ListPrice, ModifiedDate]\n- Table: SalesTerritory, Columns: [TerritoryID, Name, CountryRegionCode, Group, SalesYTD, SalesLastYear, CostYTD, CostLastYear, rowguid, ModifiedDate]\n- Table: TransactionHistory, Columns: [TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate]\n- Table: ProductCategory, Columns: [ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: CountryRegionCurrency, Columns: [CountryRegionCode, CurrencyCode, ModifiedDate]\n- Table: Product, Columns: [ProductID, Name, ProductNumber, MakeFlag, FinishedGoodsFlag, Color, SafetyStockLevel, ReorderPoint, StandardCost, ListPrice, Size, SizeUnitMeasureCode, WeightUnitMeasureCode, Weight, DaysToManufacture, ProductLine, Class, Style, ProductSubcategoryID, ProductModelID, SellStartDate, SellEndDate, DiscontinuedDate, rowguid, ModifiedDate]\n- Table: SpecialOfferProduct, Columns: [SpecialOfferID, ProductID, rowguid, ModifiedDate]\n- Table: ShoppingCartItem, Columns: [ShoppingCartItemID, ShoppingCartID, Quantity, ProductID, DateCreated, ModifiedDate]\n- Table: Culture, Columns: [CultureID, Name, ModifiedDate]\n- Table: Department, Columns: [DepartmentID, Name, GroupName, ModifiedDate]\n- Table: ShipMethod, Columns: [ShipMethodID, Name, ShipBase, ShipRate, rowguid, ModifiedDate]\n- Table: SalesTerritoryHistory, Columns: [BusinessEntityID, TerritoryID, StartDate, EndDate, rowguid, ModifiedDate]\n- Table: ProductModelProductDescriptionCulture, Columns: [ProductModelID, ProductDescriptionID, CultureID, ModifiedDate]\n- Table: BillOfMaterials, Columns: [BillOfMaterialsID, ProductAssemblyID, ComponentID, StartDate, EndDate, UnitMeasureCode, BOMLevel, PerAssemblyQty, ModifiedDate]\n- Table: ProductProductPhoto, Columns: [ProductID, ProductPhotoID, Primary, ModifiedDate]\n- Table: PhoneNumberType, Columns: [PhoneNumberTypeID, Name, ModifiedDate]\n- Table: SalesPersonQuotaHistory, Columns: [BusinessEntityID, QuotaDate, SalesQuota, rowguid, ModifiedDate]\n- Table: BusinessEntityContact, Columns: [BusinessEntityID, PersonID, ContactTypeID, rowguid, ModifiedDate]\n- Table: Employee, Columns: [BusinessEntityID, NationalIDNumber, LoginID, OrganizationNode, OrganizationLevel, JobTitle, BirthDate, MaritalStatus, Gender, HireDate, SalariedFlag, VacationHours, SickLeaveHours, CurrentFlag, rowguid, ModifiedDate]\n- Table: ProductVendor, Columns: [ProductID, BusinessEntityID, AverageLeadTime, StandardPrice, LastReceiptCost, LastReceiptDate, MinOrderQty, MaxOrderQty, OnOrderQty, UnitMeasureCode, ModifiedDate]\n- Table: CountryRegion, Columns: [CountryRegionCode, Name, ModifiedDate]\n- Table: PersonCreditCard, Columns: [BusinessEntityID, CreditCardID, ModifiedDate]\n- Table: Document, Columns: [DocumentNode, DocumentLevel, Title, Owner, FolderFlag, FileName, FileExtension, Revision, ChangeNumber, Status, DocumentSummary, Document, rowguid, ModifiedDate]\n- Table: SalesOrderDetail, Columns: [SalesOrderID, SalesOrderDetailID, CarrierTrackingNumber, OrderQty, ProductID, SpecialOfferID, UnitPrice, UnitPriceDiscount, LineTotal, rowguid, ModifiedDate]\n- Table: ProductModel, Columns: [ProductModelID, Name, CatalogDescription, Instructions, rowguid, ModifiedDate]\n- Table: CreditCard, Columns: [CreditCardID, CardType, CardNumber, ExpMonth, ExpYear, ModifiedDate]\n- Table: StateProvince, Columns: [StateProvinceID, StateProvinceCode, CountryRegionCode, IsOnlyStateProvinceFlag, Name, TerritoryID, rowguid, ModifiedDate]\n- Table: PurchaseOrderHeader, Columns: [PurchaseOrderID, RevisionNumber, Status, EmployeeID, VendorID, ShipMethodID, OrderDate, ShipDate, SubTotal, TaxAmt, Freight, TotalDue, ModifiedDate]\n- Table: SalesTaxRate, Columns: [SalesTaxRateID, StateProvinceID, TaxType, TaxRate, Name, rowguid, ModifiedDate]\n- Table: Customer, Columns: [CustomerID, PersonID, StoreID, TerritoryID, AccountNumber, rowguid, ModifiedDate]\n- Table: EmployeeDepartmentHistory, Columns: [BusinessEntityID, DepartmentID, ShiftID, StartDate, EndDate, ModifiedDate]\n- Table: SalesReason, Columns: [SalesReasonID, Name, ReasonType, ModifiedDate]\n- Table: ProductDescription, Columns: [ProductDescriptionID, Description, rowguid, ModifiedDate]\n- Table: WorkOrder, Columns: [WorkOrderID, ProductID, OrderQty, StockedQty, ScrappedQty, StartDate, EndDate, DueDate, ScrapReasonID, ModifiedDate]\n- Table: TransactionHistoryArchive, Columns: [TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate]\n- Table: BusinessEntityAddress, Columns: [BusinessEntityID, AddressID, AddressTypeID, rowguid, ModifiedDate]",
        "Response": "Table: BusinessEntityAddress"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID, OBJ_CLASS_ID, X, Y, W, H)  VALUES (2377890, 13, 298, 300, 193, 111, 63);\nDatabase State:\n- Table: IMG_OBJ, Columns: [IMG_ID, OBJ_SAMPLE_ID, OBJ_CLASS_ID, X, Y, W, H]\n- Table: ATT_CLASSES, Columns: [ATT_CLASS_ID, ATT_CLASS]\n- Table: PRED_CLASSES, Columns: [PRED_CLASS_ID, PRED_CLASS]\n- Table: OBJ_CLASSES, Columns: [OBJ_CLASS_ID, OBJ_CLASS]",
        "Response": "Table: IMG_OBJ"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Member_ID, Performance_ID, Num_of_Pieces)  VALUES (2, 1, 1);\nDatabase State:\n- Table: member, Columns: [Member_ID, Name, Nationality, Role]\n- Table: member_attendance, Columns: [Member_ID, Performance_ID, Num_of_Pieces]",
        "Response": "Table: member_attendance"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO frameshift_truncation (label, description, biological_variant_of, civic_variant_id, chromosome, genomic_start, genomic_end, instance_of, hgvs_nomenclature)  VALUES ('RB1 M695FS*26', 'genetic variant', 'RB1', '638', 'human chromosome 13', '49033946.0', '49033947.0', 'Frameshift Truncation', 'ENST00000267163.4:c.2083_2084insA');\nDatabase State:\n- Table: chromosome, Columns: [label, description, subclass_of, part_of, follows, followed_by, freebase_id, commons_category, refseq_genome_id, found_in_taxon, instance_of, short_name, length, topics_main_category, mesh_descriptor_id, mesh_tree_code, microsoft_academic_id, openalex_id]\n- Table: orthology, Columns: [label, description, entrez_gene_id, subclass_of, ensembl_gene_id, homologene_id, found_in_taxon, refseq_rna_id, ensembl_transcript_id, chromosome, encodes, mouse_genome_informatics_id, ortholog, exact_match, mgi_gene_symbol, strand_orientation, instance_of, cytogenetic_location, genomic_start, genomic_end, expressed_in]",
        "Response": "Table: frameshift_truncation"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position)  VALUES ('Minister of Industry, Energy and Mining (Uruguay)', 'Ministerial position in Uruguay', 'public office', 'minister', 'Uruguay', 'Cabinet of Uruguay', 'Ministry of Industry, Energy and Mining (Uruguay)');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: cabinet_of_uruguay"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Member_ID, Performance_ID, Num_of_Pieces)  VALUES (4, 3, 2);\nDatabase State:\nNo table exists yet.",
        "Response": "Table: member_attendance"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, biological_variant_of, civic_variant_id, chromosome, genomic_start, genomic_end, instance_of, hgvs_nomenclature)  VALUES ('NOTCH1 P2514FS', 'genetic variant', 'NOTCH1', '207', 'human chromosome 9', '139390649.0', '139390650.0', 'Frameshift Truncation', 'NC_000009.11:g.139390649_139390650del');\nDatabase State:\n- Table: orthology, Columns: [label, description, entrez_gene_id, subclass_of, ensembl_gene_id, homologene_id, found_in_taxon, refseq_rna_id, ensembl_transcript_id, chromosome, encodes, mouse_genome_informatics_id, ortholog, exact_match, mgi_gene_symbol, strand_orientation, instance_of, cytogenetic_location, genomic_start, genomic_end, expressed_in]\n- Table: biological_variant_of, Columns: [label, description, entrez_gene_id, hgnc_gene_symbol, hgnc_id, omim_id, subclass_of, ensembl_gene_id, homologene_id, ortholog, refseq_rna_id, ensembl_transcript_id, image, encodes, genetic_association, found_in_taxon, exact_match, chromosome, strand_orientation, genomic_start, genomic_end, gene_atlas_image, instance_of, cytogenetic_location, expressed_in, civic_gene_id]\n- Table: frameshift_truncation, Columns: [label, description, biological_variant_of, civic_variant_id, chromosome, genomic_start, genomic_end, instance_of, hgvs_nomenclature]",
        "Response": "Table: frameshift_truncation"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Performance_ID, Date, Host, Location, Attendance)  VALUES (5.0, 'February 10', 'Montreal Canadiens', 'Bell Centre', 2173);\nDatabase State:\n- Table: member, Columns: [Member_ID, Name, Nationality, Role]",
        "Response": "Table: performance"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points)  VALUES (2, 9.69999999999999928, 9.625, 9.625, 9.65000000000000035, 9.58699999999999975, 9.73700000000000009, 57.92399999999999949);\nDatabase State:\n- Table: gymnast, Columns: [Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points]\n- Table: people, Columns: [People_ID, Name, Age, Height, Hometown]",
        "Response": "Table: gymnast"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID)  VALUES (2378391, 698, 11);\nDatabase State:\nNo table exists yet.",
        "Response": "Table: IMG_OBJ_ATT"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO biological_variant_of (label, description, entrez_gene_id, hgnc_gene_symbol, hgnc_id, omim_id, subclass_of, ensembl_gene_id, homologene_id, ortholog, refseq_rna_id, ensembl_transcript_id, image, encodes, genetic_association, found_in_taxon, exact_match, chromosome, strand_orientation, genomic_start, genomic_end, gene_atlas_image, instance_of, cytogenetic_location, expressed_in, civic_gene_id)  VALUES ('TSC1', 'protein-coding gene in the species Homo sapiens', '7248', 'TSC1', '12362', '605284', 'protein-coding gene', 'ENSG00000165699', '314', 'Tsc1', 'XM_011518979', 'ENST00000545250', 'nan', 'TSC complex subunit 1', 'psoriasis', 'Homo sapiens', 'http://identifiers.org/ncbigene/7248', 'human chromosome 9', 'reverse strand', '132891348.0', '135820020.0', 'PBB GE TSC1 209390 at fs.png', 'gene', '9q34.13', 'external globus pallidus', '46');\nDatabase State:\n- Table: frameshift_truncation, Columns: [label, description, biological_variant_of, civic_variant_id, chromosome, genomic_start, genomic_end, instance_of, hgvs_nomenclature]",
        "Response": "Table: biological_variant_of"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, country, office_held_by_head_of_the_organization, inception, headquarters_location, official_website, applies_to_jurisdiction, google_knowledge_graph_id)  VALUES ('Ministry of Tourism (Uruguay)', 'government ministry promoting tourism to Uruguay', 'tourism ministry', 'Uruguay', 'Minister of Tourism (Uruguay)', '+1986-12-24T00:00:00Z', 'Montevideo', 'https://www.gub.uy/ministerio-turismo/', 'Uruguay', '/g/1237d753');\nDatabase State:\n- Table: organization, Columns: [label, description, instance_of, country, office_held_by_head_of_the_organization, inception, headquarters_location, official_website, applies_to_jurisdiction, google_knowledge_graph_id]\n- Table: organization_leader, Columns: [label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position]\n- Table: cabinet_of_uruguay, Columns: [label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position]",
        "Response": "Table: organization"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO series (label, description, instance_of, part_of, country, commons_category)  VALUES ('Wiki Loves Monuments in Brazil', 'Brazilian edition of the Wiki Loves Monuments photo competition', 'recurring event', 'Wiki Loves Monuments', 'Brazil', 'Wiki Loves Monuments in Brazil');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: series"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO centered_hexagonal_number (label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor)  VALUES ('271', 'natural number', 'natural number', '271 (number)', 271.0, '271', 3.0, '271.0');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: centered_hexagonal_number"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO repair (repair_ID, name, Launch_Date, Notes)  VALUES (7, 'OPS 3491', '10 Jun 2014', 'Cameras operated satisfactorily');\nDatabase State:\n- Table: repair_assignment, Columns: [technician_id, repair_ID, Machine_ID]",
        "Response": "Table: repair"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Member_ID, Name, Nationality, Role)  VALUES ('5', 'Juan Espil', 'Argentina', 'Viola');\nDatabase State:\n- Table: member_attendance, Columns: [Member_ID, Performance_ID, Num_of_Pieces]\n- Table: member, Columns: [Member_ID, Name, Nationality, Role]\n- Table: performance, Columns: [Performance_ID, Date, Host, Location, Attendance]",
        "Response": "Table: member"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (technician_id, repair_ID, Machine_ID)  VALUES (5, 5, 2);\nDatabase State:\n- Table: repair_assignment, Columns: [technician_id, repair_ID, Machine_ID]",
        "Response": "Table: repair_assignment"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO part (label, description, topics_main_wikimedia_portal, commons_category, topics_main_category, page_banner, freebase_id, instance_of, coordinate_location, locator_map_image, viaf_id, quora_topic_id, yso_id, mesh_descriptor_id, has_parts, part_of, worldcat_identities_id, kbpedia_id, gnd_id, store_norske_leksikon_id, nkcr_aut_id, mapycz_id)  VALUES ('Middle East', 'geopolitical region encompassing Egypt and most of Western Asia, including Iran', 'Portal:Middle East', 'Middle East', 'Category:Middle East', 'Al Ayn (Oman) banner Beehive tombs 2.jpg', '/m/04wsz', 'geographic region', '28.0', 'Middle East (orthographic projection).svg', '173199948', 'The-Middle-East-2', '105025.0', 'D008877', 'Fertile Crescent', 'Middle East and North Africa', 'viaf-173199948', 'MiddleEast', '4068878-1', 'Midt\u00f8sten', 'nan', 'nan');\nDatabase State:\n- Table: capital_city, Columns: [label, description, twinned_administrative_body, commons_category, country, image, postal_code, located_in_time_zone, located_in_the_administrative_territorial_entity, coordinate_location, page_banner, topics_main_category, instance_of, freebase_id, musicbrainz_area_id, gnd_id, viaf_id, geonames_id, official_website, category_of_associated_people, capital_of, area, population, elevation_above_sea_level, library_of_congress_authority_id, native_label, official_name, great_russian_encyclopedia_online_id, whos_on_first_id, category_for_maps, nkcr_aut_id, store_norske_leksikon_id, national_library_of_israel_j9u_id, online_pwn_encyclopedia_id]\n- Table: administrative_territorial_entity, Columns: [label, description, located_in_the_administrative_territorial_entity, country, instance_of, population, freebase_id, coordinate_location, commons_category, capital, topics_main_category, openstreetmap_relation_id, locator_map_image, official_website, geonames_id, area, inaturalist_place_id]\n- Table: series, Columns: [label, description, instance_of, part_of, country, commons_category]\n- Table: place_of_birth, Columns: [label, description, country, commons_category, instance_of, located_in_the_administrative_territorial_entity, coordinate_location, topics_main_category, freebase_id, image, geonames_id, elevation_above_sea_level, category_of_associated_people, official_website, area, population, whos_on_first_id]\n- Table: twin_town, Columns: [label, description, country, coordinate_location, freebase_id, twinned_administrative_body, geonames_id, instance_of, topics_main_category, capital_of, viaf_id, elevation_above_sea_level, commons_category, located_in_the_administrative_territorial_entity, quora_topic_id, encyclop\u00e6dia_britannica_online_id, located_in_time_zone, image, category_of_associated_people, area, library_of_congress_authority_id, coat_of_arms_image, whos_on_first_id, population, postal_code, official_website, worldcat_identities_id, musicbrainz_area_id, national_library_of_israel_j9u_id, page_banner, head_of_government, category_for_people_who_died_here, gnd_id, commons_gallery, facebook_places_id, native_label, gran_enciclop\u00e8dia_catalana_id, category_for_maps, factgrid_item_id, den_store_danske_id, online_pwn_encyclopedia_id, local_dialing_code, nkcr_aut_id, store_norske_leksikon_id]\n- Table: country, Columns: [label, description, great_russian_encyclopedia_online_id, wipo_st3, population, getty_thesaurus_of_geographic_names_id, topics_main_wikimedia_portal, wikimedia_outline, ndl_authority_id, currency, new_york_times_topic_id, geonames_id, gnd_id, unicode_character, category_of_associated_people, emergency_phone_number, unesco_thesaurus_id, electrical_plug_type, licence_plate_code, babelnet_id, geography_of_topic, iso_3166_1_alpha_3_code, office_held_by_head_of_government, quora_topic_id, native_label, basic_form_of_government, musicbrainz_area_id, has_quality, coat_of_arms_image, uic_alphabetical_country_code, mesh_descriptor_id, insee_countries_and_foreign_territories_code, invasive_species_compendium_datasheet_id, diplomatic_relation, flag_image, ituisoiec_object_identifier, commons_gallery, legislative_body, trunk_prefix, history_of_topic, gran_enciclop\u00e8dia_catalana_id, stw_thesaurus_for_economics_id, official_language, viaf_id, subreddit, continent, capital, coat_of_arms, demonym, national_library_of_israel_id_old, openstreetmap_relation_id, on_focus_list_of_wikimedia_project, omegawiki_defined_meaning, coordinates_of_northernmost_point, nkcr_aut_id, comic_vine_id, mobile_country_code, total_fertility_rate, maritime_identification_digits, us_national_archives_identifier, shares_border_with, marriageable_age, topics_main_category, head_of_government, biblioth\u00e8que_nationale_de_france_id, category_of_people_buried_here, locator_map_image, bbc_things_id, geoshape, dewey_decimal_classification, area, le_monde_diplomatique_subject_id, ioc_country_code, member_of, official_name, store_norske_leksikon_id, railway_traffic_side, gacs_id, archinform_location_id, encyclop\u00e6dia_britannica_online_id, page_banner, category_for_films_shot_at_this_location, mains_voltage, executive_body, category_for_people_who_died_here, yso_id, anthem, office_held_by_head_of_state, life_expectancy, part_of, commons_category, top_level_internet_domain, instance_of, highest_point, category_for_people_born_here, iab_code, short_name, number_of_out_of_school_children, driving_side, head_of_state, uic_numerical_country_code, lowest_point, idref_id, iso_3166_1_numeric_code, located_in_time_zone, contains_the_administrative_territorial_entity, itu_letter_code, country_calling_code, freebase_id, statoids_id, library_of_congress_authority_id, iso_3166_1_alpha_2_code, coordinate_location, fips_10_4_countries_and_regions, described_by_source, isni, civicus_monitor_country_entry, brockhaus_enzyklop\u00e4die_online_id, klexikon_article_id, loc_and_marc_vocabularies_id, central_bank, language_used, coordinates_of_westernmost_point, whos_on_first_id, the_top_tens_id, world_encyclopedia_of_puppetry_arts_id, official_website, hds_id, gs1_country_code, culture, coordinates_of_southernmost_point, coordinates_of_easternmost_point, geonlp_id, category_for_maps, treccanis_dizionario_di_storia_id, vat_rate, french_vikidia_id, english_vikidia_id, spanish_vikidia_id, pronunciation_audio, eurovoc_id, worldcat_identities_id, kbpedia_id, open_data_portal, grove_art_online_id, rkd_thesaurus_id, pm20_geo_code, interlingual_index_id, jewish_encyclopedia_id_russian, bbc_news_topic_id, tasteatlas_id, inaturalist_place_id, economy_of_topic, flag, uk_parliament_thesaurus_id, yle_topic_id, ysa_id, inception, bhcl_uuid, github_topic, wordnet_31_synset_id, demographics_of_topic, joconde_location_id, idaigazetteer_id, country, armeniapedia_id, krugosvet_article, schoenberg_database_of_manuscripts_place_id, the_world_factbook_country_id, colon_classification, national_library_of_israel_j9u_id, democracy_index, online_pwn_encyclopedia_id, treccani_id, postimees_topic_id, museum_digital_place_id, wikisimpsons_id, den_store_danske_id, urban_electric_transit_country_id, m49_code, alltrails_trail_id, human_development_index, national_historical_museums_of_sweden_id, eu_knowledge_graph_item_id, hashtag, gini_coefficient, obo_gazetteer_id, openstreetmap_element, happy_planet_index_score, namuwiki_id, curlie_id, unemployment_rate, nalt_id, age_of_majority, fast_id, dr_topic_id, der_spiegel_topic_id]\n- Table: wiki_loves_monuments_2015, Columns: [label, description, instance_of, country, part_of, commons_category, part_of_the_series, start_time, end_time]\n- Table: head_of_state, Columns: [label, description, viaf_id, commons_category, library_of_congress_authority_id, gnd_id, date_of_birth, place_of_birth, member_of_political_party, country_of_citizenship, instance_of, position_held, occupation, given_name, image, languages_spoken_written_or_signed, name_in_native_language, spouse, educated_at, isni, sex_or_gender, worldcat_identities_id, munzinger_person_id, opensanctions_id]\n- Table: part, Columns: [label, description, topics_main_wikimedia_portal, commons_category, topics_main_category, page_banner, freebase_id, instance_of, coordinate_location, locator_map_image, viaf_id, quora_topic_id, yso_id, mesh_descriptor_id, has_parts, part_of, worldcat_identities_id, kbpedia_id, gnd_id, store_norske_leksikon_id, nkcr_aut_id, mapycz_id]",
        "Response": "Table: part"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (stateid, state, state_abbr, control, level, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate, grad_cohort_ct)  VALUES (31, 'Nebraska', 'NE', 'Private not-for-profit', '4-year', 2006, 'M', 'X', '4y bach', '1298', '573', '807', '44.1', '62.2', 14);\nDatabase State:\n- Table: institution_grads, Columns: [unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate]\n- Table: state_sector_details, Columns: [stateid, state, state_post, level, control, schools_count, counted_pct, awards_per_state_value, awards_per_natl_value, exp_award_state_value, exp_award_natl_value, state_appr_value, state_appr_rank, grad_rate_rank, awards_per_rank]\n- Table: institution_details, Columns: [unitid, chronname, city, state, level, control, basic, hbcu, flagship, long_x, lat_y, site, student_count, awards_per_value, awards_per_state_value, awards_per_natl_value, exp_award_value, exp_award_state_value, exp_award_natl_value, exp_award_percentile, ft_pct, fte_value, fte_percentile, med_sat_value, med_sat_percentile, aid_value, aid_percentile, endow_value, endow_percentile, grad_100_value, grad_100_percentile, grad_150_value, grad_150_percentile, pell_value, pell_percentile, retain_value, retain_percentile, ft_fac_value, ft_fac_percentile, vsa_year, vsa_grad_after4_first, vsa_grad_elsewhere_after4_first, vsa_enroll_after4_first, vsa_enroll_elsewhere_after4_first, vsa_grad_after6_first, vsa_grad_elsewhere_after6_first, vsa_enroll_after6_first, vsa_enroll_elsewhere_after6_first, vsa_grad_after4_transfer, vsa_grad_elsewhere_after4_transfer, vsa_enroll_after4_transfer, vsa_enroll_elsewhere_after4_transfer, vsa_grad_after6_transfer, vsa_grad_elsewhere_after6_transfer, vsa_enroll_after6_transfer, vsa_enroll_elsewhere_after6_transfer, similar, state_sector_ct, carnegie_ct, counted_pct, nicknames, cohort_size]\n- Table: state_sector_grads, Columns: [stateid, state, state_abbr, control, level, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate, grad_cohort_ct]",
        "Response": "Table: state_sector_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO OrderDetails (OrderDetailID, OrderID, ProductID, Quantity)  VALUES (247, 10340, 18, 20);\nDatabase State:\n- Table: Shippers, Columns: [ShipperID, ShipperName, Phone]\n- Table: Categories, Columns: [CategoryID, CategoryName, Description]\n- Table: Orders, Columns: [OrderID, CustomerID, EmployeeID, OrderDate, ShipperID]\n- Table: Products, Columns: [ProductID, ProductName, SupplierID, CategoryID, Unit, Price]",
        "Response": "Table: OrderDetails"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Record_ID, Pilot_ID, Aircraft_ID, Date)  VALUES (1, 1, 1, '2003/01/04');\nDatabase State:\n- Table: pilot, Columns: [Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team]\n- Table: aircraft, Columns: [Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion]",
        "Response": "Table: pilot_record"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Member_ID, Name, Nationality, Role)  VALUES ('7', 'Charlie Burke', 'United States', 'Viola');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: member"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO people (People_ID, Name, Age, Height, Hometown)  VALUES (9, 'Rosa Clarissa Ort\u00edz Melo', 23.0, 1.810000000000000053, 'La Romana');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: people"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Member_ID, Performance_ID, Num_of_Pieces)  VALUES (7, 2, 3);\nDatabase State:\n- Table: member_attendance, Columns: [Member_ID, Performance_ID, Num_of_Pieces]",
        "Response": "Table: member_attendance"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO pilot (Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team)  VALUES (3, 'Dan O''Sullivan', 45, 37, 'United States', 'Center Team', 1999, 'Fordham');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: pilot"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, country, commons_category, instance_of, located_in_the_administrative_territorial_entity, coordinate_location, topics_main_category, freebase_id, image, geonames_id, elevation_above_sea_level, category_of_associated_people, official_website, area, population, whos_on_first_id)  VALUES ('Mashhad', 'capital city of Razavi Khorasan Province, and second largest city in Iran', 'Iran', 'Mashhad', 'city of Iran', 'Central District', '36.306944444444', 'Category:Mashhad', '/m/024hh1', 'Aerial view of imam reza shrine - 1976.jpg', '124665.0', 995.0, 'Category:People from Mashhad', 'https://mashhad.ir', 328.0, 3001184.0, '1125929605.0');\nDatabase State:\n- Table: capital_city, Columns: [label, description, twinned_administrative_body, commons_category, country, image, postal_code, located_in_time_zone, located_in_the_administrative_territorial_entity, coordinate_location, page_banner, topics_main_category, instance_of, freebase_id, musicbrainz_area_id, gnd_id, viaf_id, geonames_id, official_website, category_of_associated_people, capital_of, area, population, elevation_above_sea_level, library_of_congress_authority_id, native_label, official_name, great_russian_encyclopedia_online_id, whos_on_first_id, category_for_maps, nkcr_aut_id, store_norske_leksikon_id, national_library_of_israel_j9u_id, online_pwn_encyclopedia_id]\n- Table: place_of_birth, Columns: [label, description, country, commons_category, instance_of, located_in_the_administrative_territorial_entity, coordinate_location, topics_main_category, freebase_id, image, geonames_id, elevation_above_sea_level, category_of_associated_people, official_website, area, population, whos_on_first_id]\n- Table: administrative_territorial_entity, Columns: [label, description, located_in_the_administrative_territorial_entity, country, instance_of, population, freebase_id, coordinate_location, commons_category, capital, topics_main_category, openstreetmap_relation_id, locator_map_image, official_website, geonames_id, area, inaturalist_place_id]\n- Table: twin_town, Columns: [label, description, country, coordinate_location, freebase_id, twinned_administrative_body, geonames_id, instance_of, topics_main_category, capital_of, viaf_id, elevation_above_sea_level, commons_category, located_in_the_administrative_territorial_entity, quora_topic_id, encyclop\u00e6dia_britannica_online_id, located_in_time_zone, image, category_of_associated_people, area, library_of_congress_authority_id, coat_of_arms_image, whos_on_first_id, population, postal_code, official_website, worldcat_identities_id, musicbrainz_area_id, national_library_of_israel_j9u_id, page_banner, head_of_government, category_for_people_who_died_here, gnd_id, commons_gallery, facebook_places_id, native_label, gran_enciclop\u00e8dia_catalana_id, category_for_maps, factgrid_item_id, den_store_danske_id, online_pwn_encyclopedia_id, local_dialing_code, nkcr_aut_id, store_norske_leksikon_id]",
        "Response": "Table: place_of_birth"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO centered_hexagonal_number (label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor)  VALUES ('2791', 'number', 'natural number', '2791 (number)', 2791.0, '2791', 4.0, '2791.0');\nDatabase State:\n- Table: prime_factor, Columns: [label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, prime_factor, number_of_decimal_digits]\n- Table: centered_hexagonal_number, Columns: [label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor]",
        "Response": "Table: centered_hexagonal_number"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO centered_hexagonal_number (label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor)  VALUES ('9577', 'number', 'natural number', '9577 (number)', 9577.0, '9577', 4.0, '61.0');\nDatabase State:\n- Table: centered_hexagonal_number, Columns: [label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor]",
        "Response": "Table: centered_hexagonal_number"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list)  VALUES ('972', 'year', '972', 'year', '970s', '971', '973', 'Category:972', '+0972-01-01T00:00:00Z', 'list of state leaders in 972');\nDatabase State:\n- Table: 970s, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]\n- Table: follows, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]\n- Table: followed_by, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]",
        "Response": "Table: follows"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO 970s (label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list)  VALUES ('976', 'year', '976', 'year', '970s', '975', '977', 'Category:976', '+0976-01-01T00:00:00Z', 'list of state leaders in 976');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: 970s"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, entrez_gene_id, subclass_of, ensembl_gene_id, homologene_id, found_in_taxon, refseq_rna_id, ensembl_transcript_id, chromosome, encodes, mouse_genome_informatics_id, ortholog, exact_match, mgi_gene_symbol, strand_orientation, instance_of, cytogenetic_location, genomic_start, genomic_end, expressed_in)  VALUES ('B2m', 'protein-coding gene in the species Mus musculus', '12010', 'protein-coding gene', 'ENSMUSG00000060802', '2987', 'house mouse', 'NM_009735', 'ENSMUST00000102476', 'mouse chromosome 2', 'Beta-2 microglobulin', 'MGI:88127', 'B2m', 'http://identifiers.org/ncbigene/12010', 'B2m', 'forward strand', 'gene', '2 E5|2 60.55 cM', '121978167', '121983564', 'seminal vesicula');\nDatabase State:\n- Table: orthology, Columns: [label, description, entrez_gene_id, subclass_of, ensembl_gene_id, homologene_id, found_in_taxon, refseq_rna_id, ensembl_transcript_id, chromosome, encodes, mouse_genome_informatics_id, ortholog, exact_match, mgi_gene_symbol, strand_orientation, instance_of, cytogenetic_location, genomic_start, genomic_end, expressed_in]\n- Table: chromosome, Columns: [label, description, subclass_of, part_of, follows, followed_by, freebase_id, commons_category, refseq_genome_id, found_in_taxon, instance_of, short_name, length, topics_main_category, mesh_descriptor_id, mesh_tree_code, microsoft_academic_id, openalex_id]\n- Table: biological_variant_of, Columns: [label, description, entrez_gene_id, hgnc_gene_symbol, hgnc_id, omim_id, subclass_of, ensembl_gene_id, homologene_id, ortholog, refseq_rna_id, ensembl_transcript_id, image, encodes, genetic_association, found_in_taxon, exact_match, chromosome, strand_orientation, genomic_start, genomic_end, gene_atlas_image, instance_of, cytogenetic_location, expressed_in, civic_gene_id]",
        "Response": "Table: orthology"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (OrderDetailID, OrderID, ProductID, Quantity)  VALUES (468, 10422, 26, 2);\nDatabase State:\n- Table: Customers, Columns: [CustomerID, CustomerName, ContactName, Address, City, PostalCode, Country]\n- Table: Orders, Columns: [OrderID, CustomerID, EmployeeID, OrderDate, ShipperID]\n- Table: Categories, Columns: [CategoryID, CategoryName, Description]",
        "Response": "Table: OrderDetails"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO people (People_ID, Name, Age, Height, Hometown)  VALUES (1, 'Paul Hamm', 24.0, 1.709999999999999965, 'Santo Domingo');\nDatabase State:\n- Table: people, Columns: [People_ID, Name, Age, Height, Hometown]",
        "Response": "Table: people"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO WorkOrderRouting (WorkOrderID, ProductID, OperationSequence, LocationID, ScheduledStartDate, ScheduledEndDate, ActualStartDate, ActualEndDate, ActualResourceHrs, PlannedCost, ActualCost, ModifiedDate)  VALUES (49823, 947, 6, 50, '2013-10-27 00:00:00.0', '2013-11-07 00:00:00.0', '2013-10-27 00:00:00.0', '2013-11-16 00:00:00.0', 3.0, 36.75, 36.75, '2013-11-16 00:00:00.0');\nDatabase State:\n- Table: BusinessEntity, Columns: [BusinessEntityID, rowguid, ModifiedDate]\n- Table: TransactionHistoryArchive, Columns: [TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate]\n- Table: BusinessEntityContact, Columns: [BusinessEntityID, PersonID, ContactTypeID, rowguid, ModifiedDate]\n- Table: WorkOrder, Columns: [WorkOrderID, ProductID, OrderQty, StockedQty, ScrappedQty, StartDate, EndDate, DueDate, ScrapReasonID, ModifiedDate]\n- Table: Shift, Columns: [ShiftID, Name, StartTime, EndTime, ModifiedDate]\n- Table: ProductSubcategory, Columns: [ProductSubcategoryID, ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: Password, Columns: [BusinessEntityID, PasswordHash, PasswordSalt, rowguid, ModifiedDate]\n- Table: Document, Columns: [DocumentNode, DocumentLevel, Title, Owner, FolderFlag, FileName, FileExtension, Revision, ChangeNumber, Status, DocumentSummary, Document, rowguid, ModifiedDate]\n- Table: SalesTerritoryHistory, Columns: [BusinessEntityID, TerritoryID, StartDate, EndDate, rowguid, ModifiedDate]\n- Table: BillOfMaterials, Columns: [BillOfMaterialsID, ProductAssemblyID, ComponentID, StartDate, EndDate, UnitMeasureCode, BOMLevel, PerAssemblyQty, ModifiedDate]\n- Table: ProductListPriceHistory, Columns: [ProductID, StartDate, EndDate, ListPrice, ModifiedDate]\n- Table: ProductModelProductDescriptionCulture, Columns: [ProductModelID, ProductDescriptionID, CultureID, ModifiedDate]\n- Table: CreditCard, Columns: [CreditCardID, CardType, CardNumber, ExpMonth, ExpYear, ModifiedDate]\n- Table: Person, Columns: [BusinessEntityID, PersonType, NameStyle, Title, FirstName, MiddleName, LastName, Suffix, EmailPromotion, AdditionalContactInfo, Demographics, rowguid, ModifiedDate]\n- Table: Customer, Columns: [CustomerID, PersonID, StoreID, TerritoryID, AccountNumber, rowguid, ModifiedDate]\n- Table: SalesOrderDetail, Columns: [SalesOrderID, SalesOrderDetailID, CarrierTrackingNumber, OrderQty, ProductID, SpecialOfferID, UnitPrice, UnitPriceDiscount, LineTotal, rowguid, ModifiedDate]\n- Table: ShoppingCartItem, Columns: [ShoppingCartItemID, ShoppingCartID, Quantity, ProductID, DateCreated, ModifiedDate]\n- Table: StateProvince, Columns: [StateProvinceID, StateProvinceCode, CountryRegionCode, IsOnlyStateProvinceFlag, Name, TerritoryID, rowguid, ModifiedDate]\n- Table: ProductDescription, Columns: [ProductDescriptionID, Description, rowguid, ModifiedDate]\n- Table: Store, Columns: [BusinessEntityID, Name, SalesPersonID, Demographics, rowguid, ModifiedDate]\n- Table: ProductDocument, Columns: [ProductID, DocumentNode, ModifiedDate]\n- Table: ProductVendor, Columns: [ProductID, BusinessEntityID, AverageLeadTime, StandardPrice, LastReceiptCost, LastReceiptDate, MinOrderQty, MaxOrderQty, OnOrderQty, UnitMeasureCode, ModifiedDate]\n- Table: ProductInventory, Columns: [ProductID, LocationID, Shelf, Bin, Quantity, rowguid, ModifiedDate]\n- Table: Product, Columns: [ProductID, Name, ProductNumber, MakeFlag, FinishedGoodsFlag, Color, SafetyStockLevel, ReorderPoint, StandardCost, ListPrice, Size, SizeUnitMeasureCode, WeightUnitMeasureCode, Weight, DaysToManufacture, ProductLine, Class, Style, ProductSubcategoryID, ProductModelID, SellStartDate, SellEndDate, DiscontinuedDate, rowguid, ModifiedDate]\n- Table: ShipMethod, Columns: [ShipMethodID, Name, ShipBase, ShipRate, rowguid, ModifiedDate]\n- Table: CountryRegion, Columns: [CountryRegionCode, Name, ModifiedDate]\n- Table: Location, Columns: [LocationID, Name, CostRate, Availability, ModifiedDate]\n- Table: SpecialOfferProduct, Columns: [SpecialOfferID, ProductID, rowguid, ModifiedDate]\n- Table: ProductReview, Columns: [ProductReviewID, ProductID, ReviewerName, ReviewDate, EmailAddress, Rating, Comments, ModifiedDate]\n- Table: JobCandidate, Columns: [JobCandidateID, BusinessEntityID, Resume, ModifiedDate]\n- Table: SalesTerritory, Columns: [TerritoryID, Name, CountryRegionCode, Group, SalesYTD, SalesLastYear, CostYTD, CostLastYear, rowguid, ModifiedDate]\n- Table: BusinessEntityAddress, Columns: [BusinessEntityID, AddressID, AddressTypeID, rowguid, ModifiedDate]\n- Table: TransactionHistory, Columns: [TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate]\n- Table: Address, Columns: [AddressID, AddressLine1, AddressLine2, City, StateProvinceID, PostalCode, SpatialLocation, rowguid, ModifiedDate]\n- Table: ProductProductPhoto, Columns: [ProductID, ProductPhotoID, Primary, ModifiedDate]\n- Table: ScrapReason, Columns: [ScrapReasonID, Name, ModifiedDate]\n- Table: SalesPersonQuotaHistory, Columns: [BusinessEntityID, QuotaDate, SalesQuota, rowguid, ModifiedDate]\n- Table: Employee, Columns: [BusinessEntityID, NationalIDNumber, LoginID, OrganizationNode, OrganizationLevel, JobTitle, BirthDate, MaritalStatus, Gender, HireDate, SalariedFlag, VacationHours, SickLeaveHours, CurrentFlag, rowguid, ModifiedDate]\n- Table: ContactType, Columns: [ContactTypeID, Name, ModifiedDate]\n- Table: Vendor, Columns: [BusinessEntityID, AccountNumber, Name, CreditRating, PreferredVendorStatus, ActiveFlag, PurchasingWebServiceURL, ModifiedDate]\n- Table: Culture, Columns: [CultureID, Name, ModifiedDate]\n- Table: PurchaseOrderHeader, Columns: [PurchaseOrderID, RevisionNumber, Status, EmployeeID, VendorID, ShipMethodID, OrderDate, ShipDate, SubTotal, TaxAmt, Freight, TotalDue, ModifiedDate]\n- Table: CountryRegionCurrency, Columns: [CountryRegionCode, CurrencyCode, ModifiedDate]\n- Table: SalesReason, Columns: [SalesReasonID, Name, ReasonType, ModifiedDate]\n- Table: ProductCostHistory, Columns: [ProductID, StartDate, EndDate, StandardCost, ModifiedDate]\n- Table: EmployeePayHistory, Columns: [BusinessEntityID, RateChangeDate, Rate, PayFrequency, ModifiedDate]\n- Table: SalesTaxRate, Columns: [SalesTaxRateID, StateProvinceID, TaxType, TaxRate, Name, rowguid, ModifiedDate]\n- Table: AddressType, Columns: [AddressTypeID, Name, rowguid, ModifiedDate]\n- Table: ProductPhoto, Columns: [ProductPhotoID, ThumbNailPhoto, ThumbnailPhotoFileName, LargePhoto, LargePhotoFileName, ModifiedDate]\n- Table: Department, Columns: [DepartmentID, Name, GroupName, ModifiedDate]\n- Table: ProductModel, Columns: [ProductModelID, Name, CatalogDescription, Instructions, rowguid, ModifiedDate]\n- Table: ProductCategory, Columns: [ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: SalesPerson, Columns: [BusinessEntityID, TerritoryID, SalesQuota, Bonus, CommissionPct, SalesYTD, SalesLastYear, rowguid, ModifiedDate]\n- Table: PurchaseOrderDetail, Columns: [PurchaseOrderID, PurchaseOrderDetailID, DueDate, OrderQty, ProductID, UnitPrice, LineTotal, ReceivedQty, RejectedQty, StockedQty, ModifiedDate]\n- Table: Currency, Columns: [CurrencyCode, Name, ModifiedDate]\n- Table: SalesOrderHeaderSalesReason, Columns: [SalesOrderID, SalesReasonID, ModifiedDate]\n- Table: PhoneNumberType, Columns: [PhoneNumberTypeID, Name, ModifiedDate]\n- Table: PersonCreditCard, Columns: [BusinessEntityID, CreditCardID, ModifiedDate]\n- Table: SpecialOffer, Columns: [SpecialOfferID, Description, DiscountPct, Type, Category, StartDate, EndDate, MinQty, MaxQty, rowguid, ModifiedDate]\n- Table: SalesOrderHeader, Columns: [SalesOrderID, RevisionNumber, OrderDate, DueDate, ShipDate, Status, OnlineOrderFlag, SalesOrderNumber, PurchaseOrderNumber, AccountNumber, CustomerID, SalesPersonID, TerritoryID, BillToAddressID, ShipToAddressID, ShipMethodID, CreditCardID, CreditCardApprovalCode, CurrencyRateID, SubTotal, TaxAmt, Freight, TotalDue, Comment, rowguid, ModifiedDate]\n- Table: UnitMeasure, Columns: [UnitMeasureCode, Name, ModifiedDate]\n- Table: CurrencyRate, Columns: [CurrencyRateID, CurrencyRateDate, FromCurrencyCode, ToCurrencyCode, AverageRate, EndOfDayRate, ModifiedDate]",
        "Response": "Table: WorkOrderRouting"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO playstore (App, Category, Rating, Reviews, Size, Installs, Type, Price, Content_Rating, Genres)  VALUES ('Eversense', 'MEDICAL', NULL, 3, '17M', '100+', 'Free', '0', 'Everyone', 'Medical');\nDatabase State:\n- Table: playstore, Columns: [App, Category, Rating, Reviews, Size, Installs, Type, Price, Content_Rating, Genres]\n- Table: user_reviews, Columns: [App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity]",
        "Response": "Table: playstore"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Record_ID, Pilot_ID, Aircraft_ID, Date)  VALUES (5, 4, 2, '2007/01/04');\nDatabase State:\n- Table: pilot_record, Columns: [Record_ID, Pilot_ID, Aircraft_ID, Date]\n- Table: aircraft, Columns: [Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion]",
        "Response": "Table: pilot_record"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO pilot (Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team)  VALUES (4, 'Charles Oakley', 34, 22, 'United Kindom', 'Forward Team', 2001, 'Virginia Union');\nDatabase State:\n- Table: pilot_record, Columns: [Record_ID, Pilot_ID, Aircraft_ID, Date]",
        "Response": "Table: pilot"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO followed_by (label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list)  VALUES ('971', 'year', '971', 'year', '970s', '970', '972', 'Category:971', '+0971-01-01T00:00:00Z', 'list of state leaders in 971');\nDatabase State:\n- Table: follows, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]\n- Table: followed_by, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]",
        "Response": "Table: followed_by"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)  VALUES ('2013-07-06', '3ec0fd23-4d17-4ead-a3c4-eac056df6b1c', 'ee766cff-8890-43d1-8a55-56dd1ebd3006', 76601001, 'Intramuscular injection', NULL, NULL);\nDatabase State:\n- Table: immunizations, Columns: [DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION]",
        "Response": "Table: procedures"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO follows (label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list)  VALUES ('977', 'year', '977', 'year', '970s', '976', '978', 'Category:977', '+0977-01-01T00:00:00Z', 'list of state leaders in 977');\nDatabase State:\n- Table: follows, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]\n- Table: 970s, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]\n- Table: followed_by, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]",
        "Response": "Table: follows"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, viaf_id, commons_category, library_of_congress_authority_id, gnd_id, date_of_birth, place_of_birth, member_of_political_party, country_of_citizenship, instance_of, position_held, occupation, given_name, image, languages_spoken_written_or_signed, name_in_native_language, spouse, educated_at, isni, sex_or_gender, worldcat_identities_id, munzinger_person_id, opensanctions_id)  VALUES ('Klaus Iohannis', 'president of Romania from 2014-', '315535975', 'Klaus Iohannis', 'nb2015016913', '106274649X', '+1959-06-13T00:00:00Z', 'Sibiu', 'National Liberal Party', 'Romania', 'human', 'President of Romania', 'schoolteacher', 'Klaus', '\u041a\u043b\u0430\u0443\u0441 \u0419\u043e\u0445\u0430\u043d\u043d\u0438\u0441 (52539721210).jpg', 'Romanian', 'Klaus Werner Iohannis', 'Carmen Iohannis', 'Babe\u0219-Bolyai University', '0000 0004 4774 1084', 'male', 'lccn-nb2015016913', '30223.0', 'nan');\nDatabase State:\n- Table: capital_city, Columns: [label, description, twinned_administrative_body, commons_category, country, image, postal_code, located_in_time_zone, located_in_the_administrative_territorial_entity, coordinate_location, page_banner, topics_main_category, instance_of, freebase_id, musicbrainz_area_id, gnd_id, viaf_id, geonames_id, official_website, category_of_associated_people, capital_of, area, population, elevation_above_sea_level, library_of_congress_authority_id, native_label, official_name, great_russian_encyclopedia_online_id, whos_on_first_id, category_for_maps, nkcr_aut_id, store_norske_leksikon_id, national_library_of_israel_j9u_id, online_pwn_encyclopedia_id]\n- Table: twin_town, Columns: [label, description, country, coordinate_location, freebase_id, twinned_administrative_body, geonames_id, instance_of, topics_main_category, capital_of, viaf_id, elevation_above_sea_level, commons_category, located_in_the_administrative_territorial_entity, quora_topic_id, encyclop\u00e6dia_britannica_online_id, located_in_time_zone, image, category_of_associated_people, area, library_of_congress_authority_id, coat_of_arms_image, whos_on_first_id, population, postal_code, official_website, worldcat_identities_id, musicbrainz_area_id, national_library_of_israel_j9u_id, page_banner, head_of_government, category_for_people_who_died_here, gnd_id, commons_gallery, facebook_places_id, native_label, gran_enciclop\u00e8dia_catalana_id, category_for_maps, factgrid_item_id, den_store_danske_id, online_pwn_encyclopedia_id, local_dialing_code, nkcr_aut_id, store_norske_leksikon_id]\n- Table: place_of_birth, Columns: [label, description, country, commons_category, instance_of, located_in_the_administrative_territorial_entity, coordinate_location, topics_main_category, freebase_id, image, geonames_id, elevation_above_sea_level, category_of_associated_people, official_website, area, population, whos_on_first_id]",
        "Response": "Table: head_of_state"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO observations (DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, VALUE, UNITS)  VALUES ('2008-04-23', '049c6ff7-7ff9-4453-953d-4da11daa926a', '3ebc8f91-2be1-42d9-8e7a-a5b2dc482b42', '8302-2', 'Body Height', 180.7100000000000079, 'cm');\nDatabase State:\n- Table: encounters, Columns: [ID, DATE, PATIENT, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]",
        "Response": "Table: observations"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, VALUE, UNITS)  VALUES ('2010-11-06', 'a31319a7-7502-4c1c-adfa-cb957fb71d11', 'fe1907f6-094f-472f-b673-b2f62ab8c4dd', '8462-4', 'Diastolic Blood Pressure', 85.0, 'mmHg');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: observations"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, located_in_the_administrative_territorial_entity, country, instance_of, population, freebase_id, coordinate_location, commons_category, capital, topics_main_category, openstreetmap_relation_id, locator_map_image, official_website, geonames_id, area, inaturalist_place_id)  VALUES ('Romania', 'country in Central and Eastern Europe', 'nan', 'Romania', 'sovereign state', 19053815.0, '/m/06c1y', '46.0', 'Romania', 'Bucharest', 'Category:Romania', '90689.0', 'Romania on the globe (Europe centered).svg', 'http://www.guv.ro/', '798549.0', 238397.0, '8858.0');\nDatabase State:\n- Table: head_of_state, Columns: [label, description, viaf_id, commons_category, library_of_congress_authority_id, gnd_id, date_of_birth, place_of_birth, member_of_political_party, country_of_citizenship, instance_of, position_held, occupation, given_name, image, languages_spoken_written_or_signed, name_in_native_language, spouse, educated_at, isni, sex_or_gender, worldcat_identities_id, munzinger_person_id, opensanctions_id]\n- Table: country, Columns: [label, description, great_russian_encyclopedia_online_id, wipo_st3, population, getty_thesaurus_of_geographic_names_id, topics_main_wikimedia_portal, wikimedia_outline, ndl_authority_id, currency, new_york_times_topic_id, geonames_id, gnd_id, unicode_character, category_of_associated_people, emergency_phone_number, unesco_thesaurus_id, electrical_plug_type, licence_plate_code, babelnet_id, geography_of_topic, iso_3166_1_alpha_3_code, office_held_by_head_of_government, quora_topic_id, native_label, basic_form_of_government, musicbrainz_area_id, has_quality, coat_of_arms_image, uic_alphabetical_country_code, mesh_descriptor_id, insee_countries_and_foreign_territories_code, invasive_species_compendium_datasheet_id, diplomatic_relation, flag_image, ituisoiec_object_identifier, commons_gallery, legislative_body, trunk_prefix, history_of_topic, gran_enciclop\u00e8dia_catalana_id, stw_thesaurus_for_economics_id, official_language, viaf_id, subreddit, continent, capital, coat_of_arms, demonym, national_library_of_israel_id_old, openstreetmap_relation_id, on_focus_list_of_wikimedia_project, omegawiki_defined_meaning, coordinates_of_northernmost_point, nkcr_aut_id, comic_vine_id, mobile_country_code, total_fertility_rate, maritime_identification_digits, us_national_archives_identifier, shares_border_with, marriageable_age, topics_main_category, head_of_government, biblioth\u00e8que_nationale_de_france_id, category_of_people_buried_here, locator_map_image, bbc_things_id, geoshape, dewey_decimal_classification, area, le_monde_diplomatique_subject_id, ioc_country_code, member_of, official_name, store_norske_leksikon_id, railway_traffic_side, gacs_id, archinform_location_id, encyclop\u00e6dia_britannica_online_id, page_banner, category_for_films_shot_at_this_location, mains_voltage, executive_body, category_for_people_who_died_here, yso_id, anthem, office_held_by_head_of_state, life_expectancy, part_of, commons_category, top_level_internet_domain, instance_of, highest_point, category_for_people_born_here, iab_code, short_name, number_of_out_of_school_children, driving_side, head_of_state, uic_numerical_country_code, lowest_point, idref_id, iso_3166_1_numeric_code, located_in_time_zone, contains_the_administrative_territorial_entity, itu_letter_code, country_calling_code, freebase_id, statoids_id, library_of_congress_authority_id, iso_3166_1_alpha_2_code, coordinate_location, fips_10_4_countries_and_regions, described_by_source, isni, civicus_monitor_country_entry, brockhaus_enzyklop\u00e4die_online_id, klexikon_article_id, loc_and_marc_vocabularies_id, central_bank, language_used, coordinates_of_westernmost_point, whos_on_first_id, the_top_tens_id, world_encyclopedia_of_puppetry_arts_id, official_website, hds_id, gs1_country_code, culture, coordinates_of_southernmost_point, coordinates_of_easternmost_point, geonlp_id, category_for_maps, treccanis_dizionario_di_storia_id, vat_rate, french_vikidia_id, english_vikidia_id, spanish_vikidia_id, pronunciation_audio, eurovoc_id, worldcat_identities_id, kbpedia_id, open_data_portal, grove_art_online_id, rkd_thesaurus_id, pm20_geo_code, interlingual_index_id, jewish_encyclopedia_id_russian, bbc_news_topic_id, tasteatlas_id, inaturalist_place_id, economy_of_topic, flag, uk_parliament_thesaurus_id, yle_topic_id, ysa_id, inception, bhcl_uuid, github_topic, wordnet_31_synset_id, demographics_of_topic, joconde_location_id, idaigazetteer_id, country, armeniapedia_id, krugosvet_article, schoenberg_database_of_manuscripts_place_id, the_world_factbook_country_id, colon_classification, national_library_of_israel_j9u_id, democracy_index, online_pwn_encyclopedia_id, treccani_id, postimees_topic_id, museum_digital_place_id, wikisimpsons_id, den_store_danske_id, urban_electric_transit_country_id, m49_code, alltrails_trail_id, human_development_index, national_historical_museums_of_sweden_id, eu_knowledge_graph_item_id, hashtag, gini_coefficient, obo_gazetteer_id, openstreetmap_element, happy_planet_index_score, namuwiki_id, curlie_id, unemployment_rate, nalt_id, age_of_majority, fast_id, dr_topic_id, der_spiegel_topic_id]\n- Table: capital_city, Columns: [label, description, twinned_administrative_body, commons_category, country, image, postal_code, located_in_time_zone, located_in_the_administrative_territorial_entity, coordinate_location, page_banner, topics_main_category, instance_of, freebase_id, musicbrainz_area_id, gnd_id, viaf_id, geonames_id, official_website, category_of_associated_people, capital_of, area, population, elevation_above_sea_level, library_of_congress_authority_id, native_label, official_name, great_russian_encyclopedia_online_id, whos_on_first_id, category_for_maps, nkcr_aut_id, store_norske_leksikon_id, national_library_of_israel_j9u_id, online_pwn_encyclopedia_id]\n- Table: twin_town, Columns: [label, description, country, coordinate_location, freebase_id, twinned_administrative_body, geonames_id, instance_of, topics_main_category, capital_of, viaf_id, elevation_above_sea_level, commons_category, located_in_the_administrative_territorial_entity, quora_topic_id, encyclop\u00e6dia_britannica_online_id, located_in_time_zone, image, category_of_associated_people, area, library_of_congress_authority_id, coat_of_arms_image, whos_on_first_id, population, postal_code, official_website, worldcat_identities_id, musicbrainz_area_id, national_library_of_israel_j9u_id, page_banner, head_of_government, category_for_people_who_died_here, gnd_id, commons_gallery, facebook_places_id, native_label, gran_enciclop\u00e8dia_catalana_id, category_for_maps, factgrid_item_id, den_store_danske_id, online_pwn_encyclopedia_id, local_dialing_code, nkcr_aut_id, store_norske_leksikon_id]\n- Table: place_of_birth, Columns: [label, description, country, commons_category, instance_of, located_in_the_administrative_territorial_entity, coordinate_location, topics_main_category, freebase_id, image, geonames_id, elevation_above_sea_level, category_of_associated_people, official_website, area, population, whos_on_first_id]\n- Table: administrative_territorial_entity, Columns: [label, description, located_in_the_administrative_territorial_entity, country, instance_of, population, freebase_id, coordinate_location, commons_category, capital, topics_main_category, openstreetmap_relation_id, locator_map_image, official_website, geonames_id, area, inaturalist_place_id]\n- Table: part, Columns: [label, description, topics_main_wikimedia_portal, commons_category, topics_main_category, page_banner, freebase_id, instance_of, coordinate_location, locator_map_image, viaf_id, quora_topic_id, yso_id, mesh_descriptor_id, has_parts, part_of, worldcat_identities_id, kbpedia_id, gnd_id, store_norske_leksikon_id, nkcr_aut_id, mapycz_id]\n- Table: wiki_loves_monuments_2015, Columns: [label, description, instance_of, country, part_of, commons_category, part_of_the_series, start_time, end_time]",
        "Response": "Table: administrative_territorial_entity"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, part_of, country, commons_category)  VALUES ('Wiki Loves Monuments in Armenia', 'nan', 'recurring event', 'Wiki Loves Monuments', 'Armenia', 'Wiki Loves Monuments in Armenia');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: series"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID)  VALUES (2389673, 149, 2, 14);\nDatabase State:\n- Table: PRED_CLASSES, Columns: [PRED_CLASS_ID, PRED_CLASS]\n- Table: IMG_REL, Columns: [IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID]\n- Table: OBJ_CLASSES, Columns: [OBJ_CLASS_ID, OBJ_CLASS]\n- Table: IMG_OBJ_ATT, Columns: [IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID]\n- Table: ATT_CLASSES, Columns: [ATT_CLASS_ID, ATT_CLASS]",
        "Response": "Table: IMG_REL"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO Suppliers (SupplierID, SupplierName, ContactName, Address, City, PostalCode, Country, Phone)  VALUES (15, 'Norske Meierier', 'Beate Vileid', 'Hatlevegen 5', 'Sandvika', '1320', 'Norway', '(0)2-953010');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: Suppliers"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO institution_grads (unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate)  VALUES (190558, 2003, 'F', 'H', '4y other', '74', 'NULL', '5', 'NULL', '6.8');\nDatabase State:\n- Table: state_sector_details, Columns: [stateid, state, state_post, level, control, schools_count, counted_pct, awards_per_state_value, awards_per_natl_value, exp_award_state_value, exp_award_natl_value, state_appr_value, state_appr_rank, grad_rate_rank, awards_per_rank]",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate)  VALUES (121381, 2011, 'M', 'Ai', '4y bach', '0', '0', '0', 'NULL', 'NULL');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO user_reviews (App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity)  VALUES ('Cash App', 'nan', 'nan', 'nan', 'nan');\nDatabase State:\n- Table: user_reviews, Columns: [App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity]\n- Table: playstore, Columns: [App, Category, Rating, Reviews, Size, Installs, Type, Price, Content_Rating, Genres]",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (People_ID, Name, Age, Height, Hometown)  VALUES (7, 'Clary Sermina Delgado Cid', 21.0, 1.75, 'Santiago de los Caballeros');\nDatabase State:\n- Table: people, Columns: [People_ID, Name, Age, Height, Hometown]\n- Table: gymnast, Columns: [Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points]",
        "Response": "Table: people"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO people (People_ID, Name, Age, Height, Hometown)  VALUES (2, 'Lorraine S\u00faarez Carmona', 21.0, 1.75, 'Bonao');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: people"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO repair (repair_ID, name, Launch_Date, Notes)  VALUES (9, 'OPS 3360', '18 Nov 2014', 'Cameras operated successfully.');\nDatabase State:\n- Table: technician, Columns: [technician_id, Name, Team, Starting_Year, Age]\n- Table: machine, Columns: [Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]",
        "Response": "Table: repair"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate)  VALUES (226806, 2011, 'B', 'Ai', '4y other', '2', 'NULL', '0', 'NULL', '0.0');\nDatabase State:\n- Table: state_sector_details, Columns: [stateid, state, state_post, level, control, schools_count, counted_pct, awards_per_state_value, awards_per_natl_value, exp_award_state_value, exp_award_natl_value, state_appr_value, state_appr_rank, grad_rate_rank, awards_per_rank]\n- Table: institution_grads, Columns: [unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate]\n- Table: state_sector_grads, Columns: [stateid, state, state_abbr, control, level, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate, grad_cohort_ct]",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO chromosome (label, description, subclass_of, part_of, follows, followed_by, freebase_id, commons_category, refseq_genome_id, found_in_taxon, instance_of, short_name, length, topics_main_category, mesh_descriptor_id, mesh_tree_code, microsoft_academic_id, openalex_id)  VALUES ('human chromosome 2', 'human chromosome', 'autosome', 'human genome', 'human chromosome 1', 'human chromosome 3', '/m/099nll', 'Human chromosome 2', 'NC_000002.12', 'Homo sapiens', 'chromosome', '2', 242193529.0, 'Category:Genes on human chromosome 2', 'D002889', 'A11.284.187.520.300.235.245', 'nan', 'nan');\nDatabase State:\n- Table: orthology, Columns: [label, description, entrez_gene_id, subclass_of, ensembl_gene_id, homologene_id, found_in_taxon, refseq_rna_id, ensembl_transcript_id, chromosome, encodes, mouse_genome_informatics_id, ortholog, exact_match, mgi_gene_symbol, strand_orientation, instance_of, cytogenetic_location, genomic_start, genomic_end, expressed_in]\n- Table: biological_variant_of, Columns: [label, description, entrez_gene_id, hgnc_gene_symbol, hgnc_id, omim_id, subclass_of, ensembl_gene_id, homologene_id, ortholog, refseq_rna_id, ensembl_transcript_id, image, encodes, genetic_association, found_in_taxon, exact_match, chromosome, strand_orientation, genomic_start, genomic_end, gene_atlas_image, instance_of, cytogenetic_location, expressed_in, civic_gene_id]\n- Table: chromosome, Columns: [label, description, subclass_of, part_of, follows, followed_by, freebase_id, commons_category, refseq_genome_id, found_in_taxon, instance_of, short_name, length, topics_main_category, mesh_descriptor_id, mesh_tree_code, microsoft_academic_id, openalex_id]",
        "Response": "Table: chromosome"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate)  VALUES (226204, 2005, 'B', 'H', '2y all', '75', 'NULL', '13', 'NULL', '17.3');\nDatabase State:\n- Table: state_sector_details, Columns: [stateid, state, state_post, level, control, schools_count, counted_pct, awards_per_state_value, awards_per_natl_value, exp_award_state_value, exp_award_natl_value, state_appr_value, state_appr_rank, grad_rate_rank, awards_per_rank]\n- Table: state_sector_grads, Columns: [stateid, state, state_abbr, control, level, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate, grad_cohort_ct]\n- Table: institution_details, Columns: [unitid, chronname, city, state, level, control, basic, hbcu, flagship, long_x, lat_y, site, student_count, awards_per_value, awards_per_state_value, awards_per_natl_value, exp_award_value, exp_award_state_value, exp_award_natl_value, exp_award_percentile, ft_pct, fte_value, fte_percentile, med_sat_value, med_sat_percentile, aid_value, aid_percentile, endow_value, endow_percentile, grad_100_value, grad_100_percentile, grad_150_value, grad_150_percentile, pell_value, pell_percentile, retain_value, retain_percentile, ft_fac_value, ft_fac_percentile, vsa_year, vsa_grad_after4_first, vsa_grad_elsewhere_after4_first, vsa_enroll_after4_first, vsa_enroll_elsewhere_after4_first, vsa_grad_after6_first, vsa_grad_elsewhere_after6_first, vsa_enroll_after6_first, vsa_enroll_elsewhere_after6_first, vsa_grad_after4_transfer, vsa_grad_elsewhere_after4_transfer, vsa_enroll_after4_transfer, vsa_enroll_elsewhere_after4_transfer, vsa_grad_after6_transfer, vsa_grad_elsewhere_after6_transfer, vsa_enroll_after6_transfer, vsa_enroll_elsewhere_after6_transfer, similar, state_sector_ct, carnegie_ct, counted_pct, nicknames, cohort_size]\n- Table: institution_grads, Columns: [unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate]",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank)  VALUES (2, 1992, '125cc', 'Marlboro Pileri - Honda', 'RS125', 57.0, 1);\nDatabase State:\n- Table: technician, Columns: [technician_id, Name, Team, Starting_Year, Age]\n- Table: repair, Columns: [repair_ID, name, Launch_Date, Notes]",
        "Response": "Table: machine"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, country, commons_category, instance_of, located_in_the_administrative_territorial_entity, coordinate_location, topics_main_category, freebase_id, image, geonames_id, elevation_above_sea_level, category_of_associated_people, official_website, area, population, whos_on_first_id)  VALUES ('Tunis', 'capital of Tunisia', 'Tunisia', 'Tunis', 'capital city', 'Tunis Governorate', '36.800833333333', 'Category:Tunis', '/m/0ftn8', 'Panoramique du centre de Tunis (3197369985) (cropped).jpg', '2464470.0', 4.0, 'Category:People from Tunis', 'http://www.commune-tunis.gov.tn', 212630000.0, 1056247.0, '421195703.0');\nDatabase State:\n- Table: place_of_birth, Columns: [label, description, country, commons_category, instance_of, located_in_the_administrative_territorial_entity, coordinate_location, topics_main_category, freebase_id, image, geonames_id, elevation_above_sea_level, category_of_associated_people, official_website, area, population, whos_on_first_id]\n- Table: country, Columns: [label, description, great_russian_encyclopedia_online_id, wipo_st3, population, getty_thesaurus_of_geographic_names_id, topics_main_wikimedia_portal, wikimedia_outline, ndl_authority_id, currency, new_york_times_topic_id, geonames_id, gnd_id, unicode_character, category_of_associated_people, emergency_phone_number, unesco_thesaurus_id, electrical_plug_type, licence_plate_code, babelnet_id, geography_of_topic, iso_3166_1_alpha_3_code, office_held_by_head_of_government, quora_topic_id, native_label, basic_form_of_government, musicbrainz_area_id, has_quality, coat_of_arms_image, uic_alphabetical_country_code, mesh_descriptor_id, insee_countries_and_foreign_territories_code, invasive_species_compendium_datasheet_id, diplomatic_relation, flag_image, ituisoiec_object_identifier, commons_gallery, legislative_body, trunk_prefix, history_of_topic, gran_enciclop\u00e8dia_catalana_id, stw_thesaurus_for_economics_id, official_language, viaf_id, subreddit, continent, capital, coat_of_arms, demonym, national_library_of_israel_id_old, openstreetmap_relation_id, on_focus_list_of_wikimedia_project, omegawiki_defined_meaning, coordinates_of_northernmost_point, nkcr_aut_id, comic_vine_id, mobile_country_code, total_fertility_rate, maritime_identification_digits, us_national_archives_identifier, shares_border_with, marriageable_age, topics_main_category, head_of_government, biblioth\u00e8que_nationale_de_france_id, category_of_people_buried_here, locator_map_image, bbc_things_id, geoshape, dewey_decimal_classification, area, le_monde_diplomatique_subject_id, ioc_country_code, member_of, official_name, store_norske_leksikon_id, railway_traffic_side, gacs_id, archinform_location_id, encyclop\u00e6dia_britannica_online_id, page_banner, category_for_films_shot_at_this_location, mains_voltage, executive_body, category_for_people_who_died_here, yso_id, anthem, office_held_by_head_of_state, life_expectancy, part_of, commons_category, top_level_internet_domain, instance_of, highest_point, category_for_people_born_here, iab_code, short_name, number_of_out_of_school_children, driving_side, head_of_state, uic_numerical_country_code, lowest_point, idref_id, iso_3166_1_numeric_code, located_in_time_zone, contains_the_administrative_territorial_entity, itu_letter_code, country_calling_code, freebase_id, statoids_id, library_of_congress_authority_id, iso_3166_1_alpha_2_code, coordinate_location, fips_10_4_countries_and_regions, described_by_source, isni, civicus_monitor_country_entry, brockhaus_enzyklop\u00e4die_online_id, klexikon_article_id, loc_and_marc_vocabularies_id, central_bank, language_used, coordinates_of_westernmost_point, whos_on_first_id, the_top_tens_id, world_encyclopedia_of_puppetry_arts_id, official_website, hds_id, gs1_country_code, culture, coordinates_of_southernmost_point, coordinates_of_easternmost_point, geonlp_id, category_for_maps, treccanis_dizionario_di_storia_id, vat_rate, french_vikidia_id, english_vikidia_id, spanish_vikidia_id, pronunciation_audio, eurovoc_id, worldcat_identities_id, kbpedia_id, open_data_portal, grove_art_online_id, rkd_thesaurus_id, pm20_geo_code, interlingual_index_id, jewish_encyclopedia_id_russian, bbc_news_topic_id, tasteatlas_id, inaturalist_place_id, economy_of_topic, flag, uk_parliament_thesaurus_id, yle_topic_id, ysa_id, inception, bhcl_uuid, github_topic, wordnet_31_synset_id, demographics_of_topic, joconde_location_id, idaigazetteer_id, country, armeniapedia_id, krugosvet_article, schoenberg_database_of_manuscripts_place_id, the_world_factbook_country_id, colon_classification, national_library_of_israel_j9u_id, democracy_index, online_pwn_encyclopedia_id, treccani_id, postimees_topic_id, museum_digital_place_id, wikisimpsons_id, den_store_danske_id, urban_electric_transit_country_id, m49_code, alltrails_trail_id, human_development_index, national_historical_museums_of_sweden_id, eu_knowledge_graph_item_id, hashtag, gini_coefficient, obo_gazetteer_id, openstreetmap_element, happy_planet_index_score, namuwiki_id, curlie_id, unemployment_rate, nalt_id, age_of_majority, fast_id, dr_topic_id, der_spiegel_topic_id]\n- Table: wiki_loves_monuments_2015, Columns: [label, description, instance_of, country, part_of, commons_category, part_of_the_series, start_time, end_time]\n- Table: administrative_territorial_entity, Columns: [label, description, located_in_the_administrative_territorial_entity, country, instance_of, population, freebase_id, coordinate_location, commons_category, capital, topics_main_category, openstreetmap_relation_id, locator_map_image, official_website, geonames_id, area, inaturalist_place_id]",
        "Response": "Table: place_of_birth"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO gymnast (Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points)  VALUES (7, 9.68699999999999939, 9.67500000000000072, 9.30000000000000072, 9.53700000000000082, 9.72499999999999965, 9.5, 57.42399999999999949);\nDatabase State:\n- Table: gymnast, Columns: [Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points]\n- Table: people, Columns: [People_ID, Name, Age, Height, Hometown]",
        "Response": "Table: gymnast"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO aircraft (Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion)  VALUES (1, 1992, 'Gillig', 'Phantom (High Floor)', '444-464 (21)', 'DD S50EGR Allison WB-400R', 'Diesel');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: aircraft"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO member (Member_ID, Name, Nationality, Role)  VALUES ('4', 'H\u00e9ctor Campana', 'Argentina', 'Violin');\nDatabase State:\n- Table: member_attendance, Columns: [Member_ID, Performance_ID, Num_of_Pieces]\n- Table: performance, Columns: [Performance_ID, Date, Host, Location, Attendance]",
        "Response": "Table: member"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO cabinet_of_uruguay (label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position)  VALUES ('Minister of the Interior of Uruguay', 'nan', 'position', 'nan', 'Uruguay', 'Cabinet of Uruguay', 'Ministry of the Interior (Uruguay)');\nDatabase State:\n- Table: cabinet_of_uruguay, Columns: [label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position]\n- Table: organization_leader, Columns: [label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position]",
        "Response": "Table: cabinet_of_uruguay"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (CustomerID, CustomerName, ContactName, Address, City, PostalCode, Country)  VALUES (77, 'The Big Cheese', 'Liz Nixon', '89 Jefferson Way Suite 2', 'Portland', '97201', 'USA');\nDatabase State:\n- Table: Shippers, Columns: [ShipperID, ShipperName, Phone]",
        "Response": "Table: Customers"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Member_ID, Performance_ID, Num_of_Pieces)  VALUES (4, 6, 4);\nDatabase State:\n- Table: member, Columns: [Member_ID, Name, Nationality, Role]",
        "Response": "Table: member_attendance"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, biological_variant_of, civic_variant_id, chromosome, genomic_start, genomic_end, instance_of, hgvs_nomenclature)  VALUES ('ATR I774FS', 'genetic variant', 'ATR', '271', 'human chromosome 3', '142274740.0', '142274740.0', 'Frameshift Truncation', 'NC_000003.11:g.142274740del');\nDatabase State:\n- Table: chromosome, Columns: [label, description, subclass_of, part_of, follows, followed_by, freebase_id, commons_category, refseq_genome_id, found_in_taxon, instance_of, short_name, length, topics_main_category, mesh_descriptor_id, mesh_tree_code, microsoft_academic_id, openalex_id]\n- Table: frameshift_truncation, Columns: [label, description, biological_variant_of, civic_variant_id, chromosome, genomic_start, genomic_end, instance_of, hgvs_nomenclature]\n- Table: biological_variant_of, Columns: [label, description, entrez_gene_id, hgnc_gene_symbol, hgnc_id, omim_id, subclass_of, ensembl_gene_id, homologene_id, ortholog, refseq_rna_id, ensembl_transcript_id, image, encodes, genetic_association, found_in_taxon, exact_match, chromosome, strand_orientation, genomic_start, genomic_end, gene_atlas_image, instance_of, cytogenetic_location, expressed_in, civic_gene_id]\n- Table: orthology, Columns: [label, description, entrez_gene_id, subclass_of, ensembl_gene_id, homologene_id, found_in_taxon, refseq_rna_id, ensembl_transcript_id, chromosome, encodes, mouse_genome_informatics_id, ortholog, exact_match, mgi_gene_symbol, strand_orientation, instance_of, cytogenetic_location, genomic_start, genomic_end, expressed_in]",
        "Response": "Table: frameshift_truncation"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO organization (label, description, instance_of, country, office_held_by_head_of_the_organization, inception, headquarters_location, official_website, applies_to_jurisdiction, google_knowledge_graph_id)  VALUES ('Ministry of Environment of Uruguay', 'nan', 'ministry', 'Uruguay', 'Minister of the Environment of Uruguay', '+2020-00-00T00:00:00Z', 'nan', 'nan', 'Uruguay', '/g/11hkvrrbw7');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: organization"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO followed_by (label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list)  VALUES ('979', 'year', '979', 'year', '970s', '978', '980', 'Category:979', '+0979-01-01T00:00:00Z', 'list of state leaders in 979');\nDatabase State:\n- Table: 970s, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]\n- Table: followed_by, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]\n- Table: follows, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]",
        "Response": "Table: followed_by"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO orthology (label, description, entrez_gene_id, subclass_of, ensembl_gene_id, homologene_id, found_in_taxon, refseq_rna_id, ensembl_transcript_id, chromosome, encodes, mouse_genome_informatics_id, ortholog, exact_match, mgi_gene_symbol, strand_orientation, instance_of, cytogenetic_location, genomic_start, genomic_end, expressed_in)  VALUES ('Runx1', 'protein-coding gene in the species Mus musculus', '12394', 'protein-coding gene', 'ENSMUSG00000022952', '1331', 'house mouse', 'NM_001111021', 'ENSMUST00000023673', 'mouse chromosome 16', 'Runt-related transcription factor 1', 'MGI:99852', 'Runx1', 'http://identifiers.org/ncbigene/12394', 'Runx1', 'reverse strand', 'gene', '16 C4|16 53.7 cM', '92398354', '92623037', 'dermal bone');\nDatabase State:\n- Table: chromosome, Columns: [label, description, subclass_of, part_of, follows, followed_by, freebase_id, commons_category, refseq_genome_id, found_in_taxon, instance_of, short_name, length, topics_main_category, mesh_descriptor_id, mesh_tree_code, microsoft_academic_id, openalex_id]",
        "Response": "Table: orthology"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO prime_factor (label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, prime_factor, number_of_decimal_digits)  VALUES ('3571', 'number', 'natural number', '3571 (number)', 3571.0, '3571', '3571', 4.0);\nDatabase State:\n- Table: centered_hexagonal_number, Columns: [label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor]",
        "Response": "Table: prime_factor"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO performance (Performance_ID, Date, Host, Location, Attendance)  VALUES (4.0, 'February 7', 'Pittsburgh Penguins', 'Verizon Center', 1877);\nDatabase State:\n- Table: member_attendance, Columns: [Member_ID, Performance_ID, Num_of_Pieces]",
        "Response": "Table: performance"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO medications (START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)  VALUES ('2005-12-14', NULL, 'e97af14a-6c00-4570-bd91-b2b5850a45ab', 'ba7ed523-ed55-4141-aca6-6dae46cd1321', 1803932, 'Leucovorin 100 MG Injection', 363406005, 'Malignant tumor of colon');\nDatabase State:\n- Table: claims, Columns: [ID, PATIENT, BILLABLEPERIOD, ORGANIZATION, ENCOUNTER, DIAGNOSIS, TOTAL]\n- Table: medications, Columns: [START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: observations, Columns: [DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, VALUE, UNITS]\n- Table: careplans, Columns: [ID, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: allergies, Columns: [START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION]",
        "Response": "Table: medications"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (OrderDetailID, OrderID, ProductID, Quantity)  VALUES (381, 10390, 46, 45);\nDatabase State:\n- Table: OrderDetails, Columns: [OrderDetailID, OrderID, ProductID, Quantity]\n- Table: Shippers, Columns: [ShipperID, ShipperName, Phone]",
        "Response": "Table: OrderDetails"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, prime_factor, number_of_decimal_digits)  VALUES ('919', 'natural number', 'natural number', '919 (number)', 919.0, '919', '919', 3.0);\nDatabase State:\n- Table: prime_factor, Columns: [label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, prime_factor, number_of_decimal_digits]\n- Table: centered_hexagonal_number, Columns: [label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor]",
        "Response": "Table: prime_factor"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (IMG_ID, OBJ_SAMPLE_ID, OBJ_CLASS_ID, X, Y, W, H)  VALUES (2381616, 8, 289, 0, 1, 500, 285);\nDatabase State:\n- Table: OBJ_CLASSES, Columns: [OBJ_CLASS_ID, OBJ_CLASS]\n- Table: IMG_OBJ, Columns: [IMG_ID, OBJ_SAMPLE_ID, OBJ_CLASS_ID, X, Y, W, H]",
        "Response": "Table: IMG_OBJ"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO prime_factor (label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, prime_factor, number_of_decimal_digits)  VALUES ('2269', 'natural number', 'natural number', '2269 (number)', 2269.0, '2269', '2269', 4.0);\nDatabase State:\n- Table: centered_hexagonal_number, Columns: [label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor]",
        "Response": "Table: prime_factor"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO repair_assignment (technician_id, repair_ID, Machine_ID)  VALUES (1, 2, 3);\nDatabase State:\n- Table: technician, Columns: [technician_id, Name, Team, Starting_Year, Age]",
        "Response": "Table: repair_assignment"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (OrderID, CustomerID, EmployeeID, OrderDate, ShipperID)  VALUES (10419, 68, 4, '1997-01-20', 2);\nDatabase State:\n- Table: Suppliers, Columns: [SupplierID, SupplierName, ContactName, Address, City, PostalCode, Country, Phone]\n- Table: Categories, Columns: [CategoryID, CategoryName, Description]\n- Table: Customers, Columns: [CustomerID, CustomerName, ContactName, Address, City, PostalCode, Country]\n- Table: Orders, Columns: [OrderID, CustomerID, EmployeeID, OrderDate, ShipperID]\n- Table: Products, Columns: [ProductID, ProductName, SupplierID, CategoryID, Unit, Price]",
        "Response": "Table: Orders"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO followed_by (label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list)  VALUES ('973', 'year', '973', 'year', '970s', '972', '974', 'Category:973', '+0973-01-01T00:00:00Z', 'list of state leaders in 973');\nDatabase State:\n- Table: 970s, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]\n- Table: follows, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]\n- Table: followed_by, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]",
        "Response": "Table: followed_by"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position)  VALUES ('President of Uruguay', 'Uruguayan head of state and head of government', 'public office', 'President of the Republic', 'Uruguay', 'Cabinet of Uruguay', 'Uruguay Presidency');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: organization_leader"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team)  VALUES (2, 'Jermaine O''Neal', 6, 40, 'United States', 'Forward-Center Team', 2008, 'Eau Claire High School');\nDatabase State:\n- Table: pilot, Columns: [Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team]\n- Table: aircraft, Columns: [Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion]",
        "Response": "Table: pilot"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO institution_grads (unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate)  VALUES (176770, 2007, 'B', 'W', '4y other', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');\nDatabase State:\n- Table: state_sector_grads, Columns: [stateid, state, state_abbr, control, level, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate, grad_cohort_ct]\n- Table: institution_grads, Columns: [unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate]\n- Table: state_sector_details, Columns: [stateid, state, state_post, level, control, schools_count, counted_pct, awards_per_state_value, awards_per_natl_value, exp_award_state_value, exp_award_natl_value, state_appr_value, state_appr_rank, grad_rate_rank, awards_per_rank]",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO prime_factor (label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, prime_factor, number_of_decimal_digits)  VALUES ('73', 'natural number', 'natural number', '73 (number)', 73.0, '73', '73', 2.0);\nDatabase State:\n- Table: centered_hexagonal_number, Columns: [label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor]",
        "Response": "Table: prime_factor"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO user_reviews (App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity)  VALUES ('Funny Quotes Free', 'nan', 'nan', 'nan', 'nan');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO user_reviews (App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity)  VALUES ('Hot or Not - Find someone right now', 'nan', 'nan', 'nan', 'nan');\nDatabase State:\n- Table: playstore, Columns: [App, Category, Rating, Reviews, Size, Installs, Type, Price, Content_Rating, Genres]\n- Table: user_reviews, Columns: [App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity]",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position)  VALUES ('Vice President of Uruguay', 'Wikimedia list article', 'position', 'vice president', 'Uruguay', 'Cabinet of Uruguay', 'nan');\nDatabase State:\n- Table: cabinet_of_uruguay, Columns: [label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position]\n- Table: organization_leader, Columns: [label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position]\n- Table: organization, Columns: [label, description, instance_of, country, office_held_by_head_of_the_organization, inception, headquarters_location, official_website, applies_to_jurisdiction, google_knowledge_graph_id]",
        "Response": "Table: cabinet_of_uruguay"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID, OBJ_CLASS_ID, X, Y, W, H)  VALUES (2345613, 2, 243, 42, 98, 145, 241);\nDatabase State:\nNo table exists yet.",
        "Response": "Table: IMG_OBJ"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity)  VALUES ('A+ Mobile', 'nan', 'nan', 'nan', 'nan');\nDatabase State:\n- Table: playstore, Columns: [App, Category, Rating, Reviews, Size, Installs, Type, Price, Content_Rating, Genres]\n- Table: user_reviews, Columns: [App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity]",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO capital_city (label, description, twinned_administrative_body, commons_category, country, image, postal_code, located_in_time_zone, located_in_the_administrative_territorial_entity, coordinate_location, page_banner, topics_main_category, instance_of, freebase_id, musicbrainz_area_id, gnd_id, viaf_id, geonames_id, official_website, category_of_associated_people, capital_of, area, population, elevation_above_sea_level, library_of_congress_authority_id, native_label, official_name, great_russian_encyclopedia_online_id, whos_on_first_id, category_for_maps, nkcr_aut_id, store_norske_leksikon_id, national_library_of_israel_j9u_id, online_pwn_encyclopedia_id)  VALUES ('Recife', 'municipality of Pernambuco State, Brazil', 'Guangzhou', 'Recife', 'Brazil', 'Recife - In\u00edcio da Avenida Boa Viagem.jpg', '50000-000', 'UTC\u221203:00', 'Pernambuco', '-8.0538888888889', 'Bacia do Pina e Cais Jos\u00e9 Estelita (cropped).jpg', 'Category:Recife', 'municipality of Brazil', '/m/0hdzt', '85e6632e-0dd9-45c8-ae85-8a7ec6310e4a', '4122627-6', '139542504.0', '3390760', 'http://www.prefeituradorecife.com.br/', 'Category:People from Recife', 'Pernambuco', 218.8429999999999894, 1653461.0, 10.0, 'n79070085', 'Recife', 'Recife', '3506789.0', '101948669', 'Category:Maps of Recife', 'xx0056187', 'Recife', '9.870075642325052e+17', '3966503.0');\nDatabase State:\n- Table: series, Columns: [label, description, instance_of, part_of, country, commons_category]",
        "Response": "Table: capital_city"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity)  VALUES ('Flowers Live Wallpaper', 'Hope everything''s good.', 'Positive', '0.7', '0.6000000000000001');\nDatabase State:\n- Table: playstore, Columns: [App, Category, Rating, Reviews, Size, Installs, Type, Price, Content_Rating, Genres]\n- Table: user_reviews, Columns: [App, Translated_Review, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity]",
        "Response": "Table: user_reviews"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO WorkOrder (WorkOrderID, ProductID, OrderQty, StockedQty, ScrappedQty, StartDate, EndDate, DueDate, ScrapReasonID, ModifiedDate)  VALUES (23024, 819, 1, 1, 0, '2012-10-10 00:00:00.0', '2012-10-21 00:00:00.0', '2012-10-21 00:00:00.0', NULL, '2012-10-21 00:00:00.0');\nDatabase State:\n- Table: Location, Columns: [LocationID, Name, CostRate, Availability, ModifiedDate]\n- Table: ProductProductPhoto, Columns: [ProductID, ProductPhotoID, Primary, ModifiedDate]\n- Table: SalesTerritoryHistory, Columns: [BusinessEntityID, TerritoryID, StartDate, EndDate, rowguid, ModifiedDate]\n- Table: PersonCreditCard, Columns: [BusinessEntityID, CreditCardID, ModifiedDate]\n- Table: ProductInventory, Columns: [ProductID, LocationID, Shelf, Bin, Quantity, rowguid, ModifiedDate]\n- Table: Employee, Columns: [BusinessEntityID, NationalIDNumber, LoginID, OrganizationNode, OrganizationLevel, JobTitle, BirthDate, MaritalStatus, Gender, HireDate, SalariedFlag, VacationHours, SickLeaveHours, CurrentFlag, rowguid, ModifiedDate]\n- Table: SalesReason, Columns: [SalesReasonID, Name, ReasonType, ModifiedDate]",
        "Response": "Table: WorkOrder"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO OrderDetails (OrderDetailID, OrderID, ProductID, Quantity)  VALUES (136, 10298, 36, 40);\nDatabase State:\n- Table: Categories, Columns: [CategoryID, CategoryName, Description]\n- Table: Products, Columns: [ProductID, ProductName, SupplierID, CategoryID, Unit, Price]\n- Table: Shippers, Columns: [ShipperID, ShipperName, Phone]\n- Table: Employees, Columns: [EmployeeID, LastName, FirstName, BirthDate, Photo, Notes]\n- Table: Customers, Columns: [CustomerID, CustomerName, ContactName, Address, City, PostalCode, Country]\n- Table: Suppliers, Columns: [SupplierID, SupplierName, ContactName, Address, City, PostalCode, Country, Phone]\n- Table: Orders, Columns: [OrderID, CustomerID, EmployeeID, OrderDate, ShipperID]",
        "Response": "Table: OrderDetails"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO technician (technician_id, Name, Team, Starting_Year, Age)  VALUES (4.0, 'Mark Sewell', 'CLE', 2009.0, 28);\nDatabase State:\n- Table: machine, Columns: [Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]",
        "Response": "Table: technician"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO medications (START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)  VALUES ('2016-09-17', '2017-09-17', '7fa0746d-95e1-4ddb-9c1c-71a28da86572', '015aa683-f4c2-4334-88f7-f212847fc927', 757594, 'Jolivette 28 Day Pack', NULL, NULL);\nDatabase State:\n- Table: patients, Columns: [patient, birthdate, deathdate, ssn, drivers, passport, prefix, first, last, suffix, maiden, marital, race, ethnicity, gender, birthplace, address]\n- Table: procedures, Columns: [DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: medications, Columns: [START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: conditions, Columns: [START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION]\n- Table: careplans, Columns: [ID, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: allergies, Columns: [START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION]\n- Table: immunizations, Columns: [DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION]\n- Table: encounters, Columns: [ID, DATE, PATIENT, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: all_prevalences, Columns: [ITEM, POPULATION_TYPE, OCCURRENCES, POPULATION_COUNT, PREVALENCE_RATE, PREVALENCE_PERCENTAGE]",
        "Response": "Table: medications"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor)  VALUES ('469', 'natural number', 'natural number', '469 (number)', 469.0, '469', 3.0, '7.0');\nDatabase State:\n- Table: centered_hexagonal_number, Columns: [label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, number_of_decimal_digits, prime_factor]\n- Table: prime_factor, Columns: [label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, prime_factor, number_of_decimal_digits]",
        "Response": "Table: centered_hexagonal_number"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, country, office_held_by_head_of_the_organization, inception, headquarters_location, official_website, applies_to_jurisdiction, google_knowledge_graph_id)  VALUES ('Ministry of Labour and Social Welfare (Uruguay)', 'Uruguayan ministry', 'ministry', 'Uruguay', 'Minister of Labour and Social Welfare (Uruguay)', '+1907-03-12T00:00:00Z', 'nan', 'https://www.mtss.gub.uy/web/mtss/', 'Uruguay', '/g/11c5t1qz3_');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: organization"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion)  VALUES (4, 2000, 'Gillig', 'Advantage (Low Floor)', '474-481 (8)', 'Cummins ISC Allison WB-400R', 'Diesel');\nDatabase State:\n- Table: pilot, Columns: [Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team]",
        "Response": "Table: aircraft"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, country, office_held_by_head_of_the_organization, inception, headquarters_location, official_website, applies_to_jurisdiction, google_knowledge_graph_id)  VALUES ('Ministry of Transport and Public Works', 'nan', 'transport ministry', 'Uruguay', 'Minister of Transport and Public Works', 'nan', 'nan', 'http://www.mtop.gub.uy/inicio1', 'Uruguay', '/g/120mc0dm');\nDatabase State:\n- Table: cabinet_of_uruguay, Columns: [label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position]",
        "Response": "Table: organization"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate)  VALUES (208112, 912, 3101, 2, '2014-05-28 00:00:00.0', 'P', 550, 30.0, '2014-05-28 00:00:00.0');\nDatabase State:\n- Table: StateProvince, Columns: [StateProvinceID, StateProvinceCode, CountryRegionCode, IsOnlyStateProvinceFlag, Name, TerritoryID, rowguid, ModifiedDate]\n- Table: Customer, Columns: [CustomerID, PersonID, StoreID, TerritoryID, AccountNumber, rowguid, ModifiedDate]\n- Table: Location, Columns: [LocationID, Name, CostRate, Availability, ModifiedDate]\n- Table: ContactType, Columns: [ContactTypeID, Name, ModifiedDate]\n- Table: ProductListPriceHistory, Columns: [ProductID, StartDate, EndDate, ListPrice, ModifiedDate]\n- Table: Department, Columns: [DepartmentID, Name, GroupName, ModifiedDate]\n- Table: SalesOrderDetail, Columns: [SalesOrderID, SalesOrderDetailID, CarrierTrackingNumber, OrderQty, ProductID, SpecialOfferID, UnitPrice, UnitPriceDiscount, LineTotal, rowguid, ModifiedDate]\n- Table: ProductInventory, Columns: [ProductID, LocationID, Shelf, Bin, Quantity, rowguid, ModifiedDate]\n- Table: SalesTerritoryHistory, Columns: [BusinessEntityID, TerritoryID, StartDate, EndDate, rowguid, ModifiedDate]\n- Table: PurchaseOrderHeader, Columns: [PurchaseOrderID, RevisionNumber, Status, EmployeeID, VendorID, ShipMethodID, OrderDate, ShipDate, SubTotal, TaxAmt, Freight, TotalDue, ModifiedDate]\n- Table: SpecialOffer, Columns: [SpecialOfferID, Description, DiscountPct, Type, Category, StartDate, EndDate, MinQty, MaxQty, rowguid, ModifiedDate]\n- Table: SalesPersonQuotaHistory, Columns: [BusinessEntityID, QuotaDate, SalesQuota, rowguid, ModifiedDate]\n- Table: ProductDocument, Columns: [ProductID, DocumentNode, ModifiedDate]\n- Table: PersonCreditCard, Columns: [BusinessEntityID, CreditCardID, ModifiedDate]\n- Table: ProductDescription, Columns: [ProductDescriptionID, Description, rowguid, ModifiedDate]\n- Table: ShoppingCartItem, Columns: [ShoppingCartItemID, ShoppingCartID, Quantity, ProductID, DateCreated, ModifiedDate]\n- Table: Document, Columns: [DocumentNode, DocumentLevel, Title, Owner, FolderFlag, FileName, FileExtension, Revision, ChangeNumber, Status, DocumentSummary, Document, rowguid, ModifiedDate]\n- Table: UnitMeasure, Columns: [UnitMeasureCode, Name, ModifiedDate]\n- Table: ShipMethod, Columns: [ShipMethodID, Name, ShipBase, ShipRate, rowguid, ModifiedDate]\n- Table: ProductProductPhoto, Columns: [ProductID, ProductPhotoID, Primary, ModifiedDate]\n- Table: ProductModel, Columns: [ProductModelID, Name, CatalogDescription, Instructions, rowguid, ModifiedDate]\n- Table: WorkOrder, Columns: [WorkOrderID, ProductID, OrderQty, StockedQty, ScrappedQty, StartDate, EndDate, DueDate, ScrapReasonID, ModifiedDate]\n- Table: Product, Columns: [ProductID, Name, ProductNumber, MakeFlag, FinishedGoodsFlag, Color, SafetyStockLevel, ReorderPoint, StandardCost, ListPrice, Size, SizeUnitMeasureCode, WeightUnitMeasureCode, Weight, DaysToManufacture, ProductLine, Class, Style, ProductSubcategoryID, ProductModelID, SellStartDate, SellEndDate, DiscontinuedDate, rowguid, ModifiedDate]\n- Table: Person, Columns: [BusinessEntityID, PersonType, NameStyle, Title, FirstName, MiddleName, LastName, Suffix, EmailPromotion, AdditionalContactInfo, Demographics, rowguid, ModifiedDate]\n- Table: SalesOrderHeaderSalesReason, Columns: [SalesOrderID, SalesReasonID, ModifiedDate]\n- Table: ProductCategory, Columns: [ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: ProductSubcategory, Columns: [ProductSubcategoryID, ProductCategoryID, Name, rowguid, ModifiedDate]\n- Table: WorkOrderRouting, Columns: [WorkOrderID, ProductID, OperationSequence, LocationID, ScheduledStartDate, ScheduledEndDate, ActualStartDate, ActualEndDate, ActualResourceHrs, PlannedCost, ActualCost, ModifiedDate]\n- Table: BusinessEntityContact, Columns: [BusinessEntityID, PersonID, ContactTypeID, rowguid, ModifiedDate]\n- Table: EmployeePayHistory, Columns: [BusinessEntityID, RateChangeDate, Rate, PayFrequency, ModifiedDate]\n- Table: Shift, Columns: [ShiftID, Name, StartTime, EndTime, ModifiedDate]\n- Table: Currency, Columns: [CurrencyCode, Name, ModifiedDate]\n- Table: TransactionHistory, Columns: [TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate]\n- Table: CreditCard, Columns: [CreditCardID, CardType, CardNumber, ExpMonth, ExpYear, ModifiedDate]\n- Table: BusinessEntity, Columns: [BusinessEntityID, rowguid, ModifiedDate]\n- Table: BusinessEntityAddress, Columns: [BusinessEntityID, AddressID, AddressTypeID, rowguid, ModifiedDate]\n- Table: SalesTaxRate, Columns: [SalesTaxRateID, StateProvinceID, TaxType, TaxRate, Name, rowguid, ModifiedDate]\n- Table: Address, Columns: [AddressID, AddressLine1, AddressLine2, City, StateProvinceID, PostalCode, SpatialLocation, rowguid, ModifiedDate]\n- Table: Store, Columns: [BusinessEntityID, Name, SalesPersonID, Demographics, rowguid, ModifiedDate]\n- Table: BillOfMaterials, Columns: [BillOfMaterialsID, ProductAssemblyID, ComponentID, StartDate, EndDate, UnitMeasureCode, BOMLevel, PerAssemblyQty, ModifiedDate]\n- Table: SalesOrderHeader, Columns: [SalesOrderID, RevisionNumber, OrderDate, DueDate, ShipDate, Status, OnlineOrderFlag, SalesOrderNumber, PurchaseOrderNumber, AccountNumber, CustomerID, SalesPersonID, TerritoryID, BillToAddressID, ShipToAddressID, ShipMethodID, CreditCardID, CreditCardApprovalCode, CurrencyRateID, SubTotal, TaxAmt, Freight, TotalDue, Comment, rowguid, ModifiedDate]\n- Table: CountryRegion, Columns: [CountryRegionCode, Name, ModifiedDate]\n- Table: ProductModelProductDescriptionCulture, Columns: [ProductModelID, ProductDescriptionID, CultureID, ModifiedDate]\n- Table: ProductCostHistory, Columns: [ProductID, StartDate, EndDate, StandardCost, ModifiedDate]\n- Table: CurrencyRate, Columns: [CurrencyRateID, CurrencyRateDate, FromCurrencyCode, ToCurrencyCode, AverageRate, EndOfDayRate, ModifiedDate]\n- Table: SpecialOfferProduct, Columns: [SpecialOfferID, ProductID, rowguid, ModifiedDate]\n- Table: JobCandidate, Columns: [JobCandidateID, BusinessEntityID, Resume, ModifiedDate]\n- Table: SalesReason, Columns: [SalesReasonID, Name, ReasonType, ModifiedDate]\n- Table: ProductPhoto, Columns: [ProductPhotoID, ThumbNailPhoto, ThumbnailPhotoFileName, LargePhoto, LargePhotoFileName, ModifiedDate]\n- Table: ProductReview, Columns: [ProductReviewID, ProductID, ReviewerName, ReviewDate, EmailAddress, Rating, Comments, ModifiedDate]\n- Table: Employee, Columns: [BusinessEntityID, NationalIDNumber, LoginID, OrganizationNode, OrganizationLevel, JobTitle, BirthDate, MaritalStatus, Gender, HireDate, SalariedFlag, VacationHours, SickLeaveHours, CurrentFlag, rowguid, ModifiedDate]\n- Table: ScrapReason, Columns: [ScrapReasonID, Name, ModifiedDate]\n- Table: SalesTerritory, Columns: [TerritoryID, Name, CountryRegionCode, Group, SalesYTD, SalesLastYear, CostYTD, CostLastYear, rowguid, ModifiedDate]\n- Table: ProductVendor, Columns: [ProductID, BusinessEntityID, AverageLeadTime, StandardPrice, LastReceiptCost, LastReceiptDate, MinOrderQty, MaxOrderQty, OnOrderQty, UnitMeasureCode, ModifiedDate]\n- Table: EmployeeDepartmentHistory, Columns: [BusinessEntityID, DepartmentID, ShiftID, StartDate, EndDate, ModifiedDate]\n- Table: SalesPerson, Columns: [BusinessEntityID, TerritoryID, SalesQuota, Bonus, CommissionPct, SalesYTD, SalesLastYear, rowguid, ModifiedDate]\n- Table: PurchaseOrderDetail, Columns: [PurchaseOrderID, PurchaseOrderDetailID, DueDate, OrderQty, ProductID, UnitPrice, LineTotal, ReceivedQty, RejectedQty, StockedQty, ModifiedDate]\n- Table: Password, Columns: [BusinessEntityID, PasswordHash, PasswordSalt, rowguid, ModifiedDate]\n- Table: AddressType, Columns: [AddressTypeID, Name, rowguid, ModifiedDate]\n- Table: Culture, Columns: [CultureID, Name, ModifiedDate]\n- Table: TransactionHistoryArchive, Columns: [TransactionID, ProductID, ReferenceOrderID, ReferenceOrderLineID, TransactionDate, TransactionType, Quantity, ActualCost, ModifiedDate]",
        "Response": "Table: TransactionHistory"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, subclass_of, part_of, follows, followed_by, freebase_id, commons_category, refseq_genome_id, found_in_taxon, instance_of, short_name, length, topics_main_category, mesh_descriptor_id, mesh_tree_code, microsoft_academic_id, openalex_id)  VALUES ('human chromosome 3', 'human chromosome', 'autosome', 'human genome', 'human chromosome 2', 'human chromosome 4', '/m/099nw1', 'Human chromosome 3', 'NC_000003.12', 'Homo sapiens', 'chromosome', '3', 198295559.0, 'Category:Genes on human chromosome 3', 'D002893', 'A11.284.187.520.300.235.250', '47924181.0', 'C47924181');\nDatabase State:\n- Table: orthology, Columns: [label, description, entrez_gene_id, subclass_of, ensembl_gene_id, homologene_id, found_in_taxon, refseq_rna_id, ensembl_transcript_id, chromosome, encodes, mouse_genome_informatics_id, ortholog, exact_match, mgi_gene_symbol, strand_orientation, instance_of, cytogenetic_location, genomic_start, genomic_end, expressed_in]\n- Table: biological_variant_of, Columns: [label, description, entrez_gene_id, hgnc_gene_symbol, hgnc_id, omim_id, subclass_of, ensembl_gene_id, homologene_id, ortholog, refseq_rna_id, ensembl_transcript_id, image, encodes, genetic_association, found_in_taxon, exact_match, chromosome, strand_orientation, genomic_start, genomic_end, gene_atlas_image, instance_of, cytogenetic_location, expressed_in, civic_gene_id]\n- Table: frameshift_truncation, Columns: [label, description, biological_variant_of, civic_variant_id, chromosome, genomic_start, genomic_end, instance_of, hgvs_nomenclature]\n- Table: chromosome, Columns: [label, description, subclass_of, part_of, follows, followed_by, freebase_id, commons_category, refseq_genome_id, found_in_taxon, instance_of, short_name, length, topics_main_category, mesh_descriptor_id, mesh_tree_code, microsoft_academic_id, openalex_id]",
        "Response": "Table: chromosome"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO OrderDetails (OrderDetailID, OrderID, ProductID, Quantity)  VALUES (86, 10280, 75, 30);\nDatabase State:\n- Table: Orders, Columns: [OrderID, CustomerID, EmployeeID, OrderDate, ShipperID]\n- Table: OrderDetails, Columns: [OrderDetailID, OrderID, ProductID, Quantity]\n- Table: Shippers, Columns: [ShipperID, ShipperName, Phone]",
        "Response": "Table: OrderDetails"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, biological_variant_of, civic_variant_id, chromosome, genomic_start, genomic_end, instance_of, hgvs_nomenclature)  VALUES ('RUNX1 T148HFSX9', 'genetic variant', 'RUNX1', '810', 'human chromosome 21', '36252913.0', '36252920.0', 'Frameshift Truncation', 'NM_001754.4:c.442_449delACCGCAGC');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: frameshift_truncation"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO chromosome (label, description, subclass_of, part_of, follows, followed_by, freebase_id, commons_category, refseq_genome_id, found_in_taxon, instance_of, short_name, length, topics_main_category, mesh_descriptor_id, mesh_tree_code, microsoft_academic_id, openalex_id)  VALUES ('human chromosome 13', 'human chromosome', 'acrocentric chromosome', 'human genome', 'human chromosome 12', 'human chromosome 14', '/m/099hsn', 'Human chromosome 13', 'NC_000013.11', 'Homo sapiens', 'chromosome', '13', 114364328.0, 'Category:Genes on human chromosome 13', 'D002882', 'A11.284.187.520.300.370.375', '2780907584.0', 'C2780907584');\nDatabase State:\n- Table: biological_variant_of, Columns: [label, description, entrez_gene_id, hgnc_gene_symbol, hgnc_id, omim_id, subclass_of, ensembl_gene_id, homologene_id, ortholog, refseq_rna_id, ensembl_transcript_id, image, encodes, genetic_association, found_in_taxon, exact_match, chromosome, strand_orientation, genomic_start, genomic_end, gene_atlas_image, instance_of, cytogenetic_location, expressed_in, civic_gene_id]\n- Table: chromosome, Columns: [label, description, subclass_of, part_of, follows, followed_by, freebase_id, commons_category, refseq_genome_id, found_in_taxon, instance_of, short_name, length, topics_main_category, mesh_descriptor_id, mesh_tree_code, microsoft_academic_id, openalex_id]\n- Table: orthology, Columns: [label, description, entrez_gene_id, subclass_of, ensembl_gene_id, homologene_id, found_in_taxon, refseq_rna_id, ensembl_transcript_id, chromosome, encodes, mouse_genome_informatics_id, ortholog, exact_match, mgi_gene_symbol, strand_orientation, instance_of, cytogenetic_location, genomic_start, genomic_end, expressed_in]\n- Table: frameshift_truncation, Columns: [label, description, biological_variant_of, civic_variant_id, chromosome, genomic_start, genomic_end, instance_of, hgvs_nomenclature]",
        "Response": "Table: chromosome"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, commons_category, numeric_value, kit_linked_open_numbers_id, prime_factor, number_of_decimal_digits)  VALUES ('7057', 'number', 'natural number', '7057 (number)', 7057.0, '7057', '7057', 4.0);\nDatabase State:\nNo table exists yet.",
        "Response": "Table: prime_factor"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, viaf_id, commons_category, library_of_congress_authority_id, gnd_id, date_of_birth, place_of_birth, member_of_political_party, country_of_citizenship, instance_of, position_held, occupation, given_name, image, languages_spoken_written_or_signed, name_in_native_language, spouse, educated_at, isni, sex_or_gender, worldcat_identities_id, munzinger_person_id, opensanctions_id)  VALUES ('Carl XVI Gustaf of Sweden', 'current king of Sweden (1973\u2013)', '66442200', 'Carl XVI Gustaf', 'n79043923', '119168014', '+1946-04-30T00:00:00Z', 'Haga Palace', 'nan', 'Sweden', 'human', 'Monarch of Sweden', 'naval officer', 'Carl', 'Crafoord Prize D81 9141 (42282165922) (cropped).jpg', 'Swedish', 'Carl XVI Gustaf', 'Queen Silvia of Sweden', 'Uppsala University', '0000 0000 7860 7524', 'male', 'lccn-n79043923', '671.0', 'Q45068');\nDatabase State:\n- Table: country, Columns: [label, description, great_russian_encyclopedia_online_id, wipo_st3, population, getty_thesaurus_of_geographic_names_id, topics_main_wikimedia_portal, wikimedia_outline, ndl_authority_id, currency, new_york_times_topic_id, geonames_id, gnd_id, unicode_character, category_of_associated_people, emergency_phone_number, unesco_thesaurus_id, electrical_plug_type, licence_plate_code, babelnet_id, geography_of_topic, iso_3166_1_alpha_3_code, office_held_by_head_of_government, quora_topic_id, native_label, basic_form_of_government, musicbrainz_area_id, has_quality, coat_of_arms_image, uic_alphabetical_country_code, mesh_descriptor_id, insee_countries_and_foreign_territories_code, invasive_species_compendium_datasheet_id, diplomatic_relation, flag_image, ituisoiec_object_identifier, commons_gallery, legislative_body, trunk_prefix, history_of_topic, gran_enciclop\u00e8dia_catalana_id, stw_thesaurus_for_economics_id, official_language, viaf_id, subreddit, continent, capital, coat_of_arms, demonym, national_library_of_israel_id_old, openstreetmap_relation_id, on_focus_list_of_wikimedia_project, omegawiki_defined_meaning, coordinates_of_northernmost_point, nkcr_aut_id, comic_vine_id, mobile_country_code, total_fertility_rate, maritime_identification_digits, us_national_archives_identifier, shares_border_with, marriageable_age, topics_main_category, head_of_government, biblioth\u00e8que_nationale_de_france_id, category_of_people_buried_here, locator_map_image, bbc_things_id, geoshape, dewey_decimal_classification, area, le_monde_diplomatique_subject_id, ioc_country_code, member_of, official_name, store_norske_leksikon_id, railway_traffic_side, gacs_id, archinform_location_id, encyclop\u00e6dia_britannica_online_id, page_banner, category_for_films_shot_at_this_location, mains_voltage, executive_body, category_for_people_who_died_here, yso_id, anthem, office_held_by_head_of_state, life_expectancy, part_of, commons_category, top_level_internet_domain, instance_of, highest_point, category_for_people_born_here, iab_code, short_name, number_of_out_of_school_children, driving_side, head_of_state, uic_numerical_country_code, lowest_point, idref_id, iso_3166_1_numeric_code, located_in_time_zone, contains_the_administrative_territorial_entity, itu_letter_code, country_calling_code, freebase_id, statoids_id, library_of_congress_authority_id, iso_3166_1_alpha_2_code, coordinate_location, fips_10_4_countries_and_regions, described_by_source, isni, civicus_monitor_country_entry, brockhaus_enzyklop\u00e4die_online_id, klexikon_article_id, loc_and_marc_vocabularies_id, central_bank, language_used, coordinates_of_westernmost_point, whos_on_first_id, the_top_tens_id, world_encyclopedia_of_puppetry_arts_id, official_website, hds_id, gs1_country_code, culture, coordinates_of_southernmost_point, coordinates_of_easternmost_point, geonlp_id, category_for_maps, treccanis_dizionario_di_storia_id, vat_rate, french_vikidia_id, english_vikidia_id, spanish_vikidia_id, pronunciation_audio, eurovoc_id, worldcat_identities_id, kbpedia_id, open_data_portal, grove_art_online_id, rkd_thesaurus_id, pm20_geo_code, interlingual_index_id, jewish_encyclopedia_id_russian, bbc_news_topic_id, tasteatlas_id, inaturalist_place_id, economy_of_topic, flag, uk_parliament_thesaurus_id, yle_topic_id, ysa_id, inception, bhcl_uuid, github_topic, wordnet_31_synset_id, demographics_of_topic, joconde_location_id, idaigazetteer_id, country, armeniapedia_id, krugosvet_article, schoenberg_database_of_manuscripts_place_id, the_world_factbook_country_id, colon_classification, national_library_of_israel_j9u_id, democracy_index, online_pwn_encyclopedia_id, treccani_id, postimees_topic_id, museum_digital_place_id, wikisimpsons_id, den_store_danske_id, urban_electric_transit_country_id, m49_code, alltrails_trail_id, human_development_index, national_historical_museums_of_sweden_id, eu_knowledge_graph_item_id, hashtag, gini_coefficient, obo_gazetteer_id, openstreetmap_element, happy_planet_index_score, namuwiki_id, curlie_id, unemployment_rate, nalt_id, age_of_majority, fast_id, dr_topic_id, der_spiegel_topic_id]\n- Table: twin_town, Columns: [label, description, country, coordinate_location, freebase_id, twinned_administrative_body, geonames_id, instance_of, topics_main_category, capital_of, viaf_id, elevation_above_sea_level, commons_category, located_in_the_administrative_territorial_entity, quora_topic_id, encyclop\u00e6dia_britannica_online_id, located_in_time_zone, image, category_of_associated_people, area, library_of_congress_authority_id, coat_of_arms_image, whos_on_first_id, population, postal_code, official_website, worldcat_identities_id, musicbrainz_area_id, national_library_of_israel_j9u_id, page_banner, head_of_government, category_for_people_who_died_here, gnd_id, commons_gallery, facebook_places_id, native_label, gran_enciclop\u00e8dia_catalana_id, category_for_maps, factgrid_item_id, den_store_danske_id, online_pwn_encyclopedia_id, local_dialing_code, nkcr_aut_id, store_norske_leksikon_id]\n- Table: wiki_loves_monuments_2015, Columns: [label, description, instance_of, country, part_of, commons_category, part_of_the_series, start_time, end_time]\n- Table: head_of_state, Columns: [label, description, viaf_id, commons_category, library_of_congress_authority_id, gnd_id, date_of_birth, place_of_birth, member_of_political_party, country_of_citizenship, instance_of, position_held, occupation, given_name, image, languages_spoken_written_or_signed, name_in_native_language, spouse, educated_at, isni, sex_or_gender, worldcat_identities_id, munzinger_person_id, opensanctions_id]",
        "Response": "Table: head_of_state"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO followed_by (label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list)  VALUES ('974', 'year', '974', 'year', '970s', '973', '975', 'Category:974', '+0974-01-01T00:00:00Z', 'list of state leaders in 974');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: followed_by"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list)  VALUES ('973', 'year', '973', 'year', '970s', '972', '974', 'Category:973', '+0973-01-01T00:00:00Z', 'list of state leaders in 973');\nDatabase State:\n- Table: follows, Columns: [label, description, commons_category, instance_of, part_of, follows, followed_by, topics_main_category, point_in_time, has_list]",
        "Response": "Table: follows"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion)  VALUES (2, 1996, 'Gillig', 'Phantom (High Floor)', '465-467 (3)', 'DD S50 Allison WB-400R', 'Diesel');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: aircraft"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (ID, DATE, PATIENT, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)  VALUES ('dbf0f38d-5810-4df4-a458-cbbafc02f3f6', '2017-02-22', '865efad4-c575-4ec6-bbc8-ad6e2a913b08', 185349003, 'Outpatient Encounter', NULL, NULL);\nDatabase State:\n- Table: procedures, Columns: [DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: careplans, Columns: [ID, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: encounters, Columns: [ID, DATE, PATIENT, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: patients, Columns: [patient, birthdate, deathdate, ssn, drivers, passport, prefix, first, last, suffix, maiden, marital, race, ethnicity, gender, birthplace, address]\n- Table: allergies, Columns: [START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION]\n- Table: medications, Columns: [START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION]\n- Table: all_prevalences, Columns: [ITEM, POPULATION_TYPE, OCCURRENCES, POPULATION_COUNT, PREVALENCE_RATE, PREVALENCE_PERCENTAGE]",
        "Response": "Table: encounters"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO repair (repair_ID, name, Launch_Date, Notes)  VALUES (6, 'OPS 3754', '19 Jun 2014', 'Out-of-focus area on some film.');\nDatabase State:\n- Table: machine, Columns: [Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]\n- Table: technician, Columns: [technician_id, Name, Team, Starting_Year, Age]\n- Table: repair_assignment, Columns: [technician_id, repair_ID, Machine_ID]",
        "Response": "Table: repair"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO institution_grads (unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate)  VALUES (450298, 2011, 'B', 'B', '4y bach', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');\nDatabase State:\n- Table: state_sector_grads, Columns: [stateid, state, state_abbr, control, level, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate, grad_cohort_ct]\n- Table: institution_grads, Columns: [unitid, year, gender, race, cohort, grad_cohort, grad_100, grad_150, grad_100_rate, grad_150_rate]\n- Table: state_sector_details, Columns: [stateid, state, state_post, level, control, schools_count, counted_pct, awards_per_state_value, awards_per_natl_value, exp_award_state_value, exp_award_natl_value, state_appr_value, state_appr_rank, grad_rate_rank, awards_per_rank]\n- Table: institution_details, Columns: [unitid, chronname, city, state, level, control, basic, hbcu, flagship, long_x, lat_y, site, student_count, awards_per_value, awards_per_state_value, awards_per_natl_value, exp_award_value, exp_award_state_value, exp_award_natl_value, exp_award_percentile, ft_pct, fte_value, fte_percentile, med_sat_value, med_sat_percentile, aid_value, aid_percentile, endow_value, endow_percentile, grad_100_value, grad_100_percentile, grad_150_value, grad_150_percentile, pell_value, pell_percentile, retain_value, retain_percentile, ft_fac_value, ft_fac_percentile, vsa_year, vsa_grad_after4_first, vsa_grad_elsewhere_after4_first, vsa_enroll_after4_first, vsa_enroll_elsewhere_after4_first, vsa_grad_after6_first, vsa_grad_elsewhere_after6_first, vsa_enroll_after6_first, vsa_enroll_elsewhere_after6_first, vsa_grad_after4_transfer, vsa_grad_elsewhere_after4_transfer, vsa_enroll_after4_transfer, vsa_enroll_elsewhere_after4_transfer, vsa_grad_after6_transfer, vsa_grad_elsewhere_after6_transfer, vsa_enroll_after6_transfer, vsa_enroll_elsewhere_after6_transfer, similar, state_sector_ct, carnegie_ct, counted_pct, nicknames, cohort_size]",
        "Response": "Table: institution_grads"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (IMG_ID, OBJ_SAMPLE_ID, OBJ_CLASS_ID, X, Y, W, H)  VALUES (1168, 4, 185, 32, 189, 78, 70);\nDatabase State:\n- Table: IMG_OBJ, Columns: [IMG_ID, OBJ_SAMPLE_ID, OBJ_CLASS_ID, X, Y, W, H]\n- Table: IMG_REL, Columns: [IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID]\n- Table: OBJ_CLASSES, Columns: [OBJ_CLASS_ID, OBJ_CLASS]",
        "Response": "Table: IMG_OBJ"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank)  VALUES (4, 1994, '125cc', 'Givi Racing- Honda', 'RS125', 194.0, 5);\nDatabase State:\n- Table: technician, Columns: [technician_id, Name, Team, Starting_Year, Age]\n- Table: machine, Columns: [Machine_ID, Making_Year, Class, Team, Machine_series, value_points, quality_rank]\n- Table: repair, Columns: [repair_ID, name, Launch_Date, Notes]\n- Table: repair_assignment, Columns: [technician_id, repair_ID, Machine_ID]",
        "Response": "Table: machine"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO organization_leader (label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position)  VALUES ('Minister of the Environment of Uruguay', 'nan', 'position', 'environment minister', 'Uruguay', 'Cabinet of Uruguay', 'Ministry of Environment of Uruguay');\nDatabase State:\nNo table exists yet.",
        "Response": "Table: organization_leader"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (Member_ID, Performance_ID, Num_of_Pieces)  VALUES (5, 1, 2);\nDatabase State:\n- Table: performance, Columns: [Performance_ID, Date, Host, Location, Attendance]\n- Table: member, Columns: [Member_ID, Name, Nationality, Role]\n- Table: member_attendance, Columns: [Member_ID, Performance_ID, Num_of_Pieces]",
        "Response": "Table: member_attendance"
    },
    {
        "Instruction": "Predict the table for this example:\nQuery: INSERT INTO (label, description, instance_of, subclass_of, applies_to_jurisdiction, part_of, organization_directed_by_the_office_or_position)  VALUES ('Minister of Transport and Public Works', 'Ministerial position in Uruguay', 'public office', 'minister', 'Uruguay', 'Cabinet of Uruguay', 'Ministry of Transport and Public Works');\nDatabase State:\n- Table: organization, Columns: [label, description, instance_of, country, office_held_by_head_of_the_organization, inception, headquarters_location, official_website, applies_to_jurisdiction, google_knowledge_graph_id]",
        "Response": "Table: organization_leader"
    }
]